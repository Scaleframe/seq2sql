{
    "movie_2": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "Which movies do not have any ratings?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating IS NULL", 
                        "SELECT title FROM movies WHERE rating IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of movies that do not have any ratings?"
                ], 
                "question": " Find the titles of movies that don\u2019t have any rating.", 
                "id": 1, 
                "sql": [
                    "SELECT title FROM movies WHERE rating IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of each movie?", 
                        "Of these, which have a 'G' rating?"
                    ], 
                    "sql": [
                        "SELECT title FROM movies", 
                        "SELECT title FROM movies WHERE rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "What are names of movies that have a 'G' ratings?"
                ], 
                "question": " Find the names of movies whose rating is \u2018G\u2019.", 
                "id": 2, 
                "sql": [
                    "SELECT title FROM movies WHERE rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for movies played in any of the theaters?", 
                        "What are the ids for those played in the Odeon theater?", 
                        "For those ids, what are the titles?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                    ]
                }, 
                "paraphrase": [
                    "What are the movie titles for ones that are played in the Odeon theater?"
                ], 
                "question": " Find the title of the movie that is played in the Odeon theater.", 
                "id": 3, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of movies played in any theater?", 
                        "What are names for these movie ids?", 
                        "Also, what are the names of the theaters in which these movies played?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movies that are played in any theater and the name of the corresponding theater?"
                ], 
                "question": " Find the names of movies that are played in any theater and the name of the corresponding theater.", 
                "id": 4, 
                "sql": [
                    "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the movies with a 'G' rating?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT count(*) FROM movies WHERE rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "How many movies had a 'G' rating?"
                ], 
                "question": " Find the number of movies whose rating is \u2018G\u2019.", 
                "id": 5, 
                "sql": [
                    "SELECT count(*) FROM movies WHERE rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies are playing in theaters?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "How many movies are playing in theaters?"
                ], 
                "question": " How many movies are playing across all theaters?", 
                "id": 6, 
                "sql": [
                    "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all the movies playing in theaters?", 
                        "How many different codes are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "How many different movies are playing?"
                ], 
                "question": " How many distinct movies are on in theaters?", 
                "id": 7, 
                "sql": [
                    "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different movie theater names?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM movietheaters", 
                        "SELECT count(DISTINCT name) FROM movietheaters"
                    ]
                }, 
                "paraphrase": [
                    "How many different movie theaters exist?"
                ], 
                "question": " How many distinct movie theaters are there?", 
                "id": 8, 
                "sql": [
                    "SELECT count(DISTINCT name) FROM movietheaters"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies have a title including the word 'Citizen'?", 
                        "What are their ratings?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE title LIKE '%Citizen%'", 
                        "SELECT rating FROM movies WHERE title LIKE '%Citizen%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the rating of the movie what has a name including a word like 'Citizen'?"
                ], 
                "question": " Find the rating of the movie whose name includes the word \u2018Citizen\u2019.", 
                "id": 9, 
                "sql": [
                    "SELECT rating FROM movies WHERE title LIKE '%Citizen%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies have a 'G' rating?", 
                        "Combine that with all the movies that are rated 'PG'", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT * FROM movies WHERE rating  =  'G' OR rating  =  'PG'", 
                        "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movie theaters that are playing 'G' or 'PG' rated movies?"
                ], 
                "question": " Find the name of the cinemas that are playing movies with either rating \u2018G\u2019 or rating \u2018PG\u2019.", 
                "id": 10, 
                "sql": [
                    "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all movies that played at the Odeon theater?", 
                        "Also, what are the codes for the movies that played at the Imperial theater?", 
                        "What are the titles that correspond to those codes?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of all the movies that played at the Odeon or Imperial theater?"
                ], 
                "question": " Find the name of the movies that are played in either cinema Odeon or Imperial.", 
                "id": 11, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes for all movies playing at the 'Odeon' theater?", 
                        "Which of those represent a movie also playing at the 'Imperial' theater?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'"
                    ]
                }, 
                "paraphrase": [
                    "What movie is playing at both the Odeon and Imperial theater?"
                ], 
                "question": " Find the name of the movie that is on in both Odeon and Imperial theaters.", 
                "id": 12, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all the movies playing at the Odeon theater?", 
                        "What are the codes of all the other movies?", 
                        "What are the corresponding names?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT code FROM movies EXCEPT SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of every movie that is not playing at the Odeon theater?"
                ], 
                "question": " Find the name of all movies that are not played in Odeon theater.", 
                "id": 13, 
                "sql": [
                    "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the movie names?", 
                        "List them in alphabetical order"
                    ], 
                    "sql": [
                        "SELECT title FROM movies", 
                        "SELECT title FROM movies ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "\tWhat are the movie names in alphabetical order?"
                ], 
                "question": " List in alphabetical order the titles of all movies.", 
                "id": 14, 
                "sql": [
                    "SELECT title FROM movies ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the movies by ratings", 
                        "List their names"
                    ], 
                    "sql": [
                        "SELECT * FROM movies ORDER BY rating", 
                        "SELECT title FROM movies ORDER BY rating"
                    ]
                }, 
                "paraphrase": [
                    "What are the movie names sorted by rating?"
                ], 
                "question": " Find the titles of all movies sorted by their ratings.", 
                "id": 15, 
                "sql": [
                    "SELECT title FROM movies ORDER BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of the movie theaters?", 
                        "Order them by number of movies playing descendingly?", 
                        "Which one is playing the most?"
                    ], 
                    "sql": [
                        "SELECT name FROM movietheaters", 
                        "SELECT name FROM movietheaters ORDER BY count(*) DESC", 
                        "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the theater playing the most movies?"
                ], 
                "question": " Find the name of the theater that is playing the most number of movies.", 
                "id": 16, 
                "sql": [
                    "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many theaters is each movie playing at?", 
                        "Which movie is playing at the most?", 
                        "What is its name?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title", 
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the film playing at the most number of theaters?"
                ], 
                "question": " Find the name of the movie that is played in the most number of theaters.", 
                "id": 17, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct ratings for all movies?", 
                        "How many movies are there for each rating?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT rating FROM movies", 
                        "SELECT count(*) ,  rating FROM movies GROUP BY rating"
                    ]
                }, 
                "paraphrase": [
                    "How many movies exist for each rating?"
                ], 
                "question": " Find the number of movies in each rating.", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) ,  rating FROM movies GROUP BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the unique ratings for all movies?", 
                        "How many movies are there for each rating category?", 
                        "Also, How many are there for each type except null?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT rating FROM movies", 
                        "SELECT count(*) ,  rating FROM movies GROUP BY rating", 
                        "SELECT count(*) ,  rating FROM movies WHERE rating IS NOT NULL GROUP BY rating"
                    ]
                }, 
                "paraphrase": [
                    "How many movies have a rating that is not null?", 
                    "How many movies are there for each non-NULL rating?"
                ], 
                "question": " Find the number of movies whose rating is not null.", 
                "id": 19, 
                "sql": [
                    "SELECT count(*) ,  rating FROM movies WHERE rating IS NOT NULL GROUP BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which theaters have film on?", 
                        "Which one have at least 1 film on?", 
                        "What is that theater's name?"
                    ], 
                    "sql": [
                        "SELECT * FROM movietheaters", 
                        "SELECT * FROM movietheaters GROUP BY name HAVING count(*)  >=  1", 
                        "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of every theater with at least one movie playing?"
                ], 
                "question": " Find the name of theaters that has at least one movie playing.", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of every movie theater?", 
                        "Of those, which are names of theaters that do not have any films showing?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM MovieTheaters", 
                        "SELECT DISTINCT name FROM MovieTheaters WHERE Movie IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all cinemas not showing any movies?"
                ], 
                "question": " Select the name of all movie theaters that are not currently showing a movie.", 
                "id": 21, 
                "sql": [
                    "SELECT DISTINCT name FROM MovieTheaters WHERE Movie IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies are 'G'-rated?", 
                        "What theaters are playing 'G'-rated movies?", 
                        "What are the names of the theaters?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'", 
                        "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of theaters playing 'G' rated movies?"
                ], 
                "question": " Find the name of the movie theaters that are playing the movies whose rating is \u2018G\u2019.", 
                "id": 22, 
                "sql": [
                    "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the movies?", 
                        "What are the titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM movie", 
                        "SELECT title FROM movie"
                    ]
                }, 
                "paraphrase": [
                    "What are all of the movie names?"
                ], 
                "question": " Select the title of all movies.", 
                "id": 23, 
                "sql": [
                    "SELECT title FROM movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the movies?", 
                        "What are their ratings?", 
                        "What are the different ratings?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies", 
                        "SELECT rating FROM movies", 
                        "SELECT DISTINCT rating FROM movies"
                    ]
                }, 
                "paraphrase": [
                    "What are the different movie ratings?"
                ], 
                "question": " Show all the distinct ratings in the database.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT rating FROM movies"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Show all information about the movies", 
                        "Of that, which pertain to only unrated movies?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies", 
                        "SELECT * FROM movies WHERE rating IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the unrated movies?"
                ], 
                "question": " Show all information of all unrated movies.", 
                "id": 25, 
                "sql": [
                    "SELECT * FROM movies WHERE rating IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the movies shown in the theaters?", 
                        "Which movies are not being shown in any theaters?", 
                        "What are their names"
                    ], 
                    "sql": [
                        "SELECT * FROM MovieTheaters WHERE Movie IS NOT NULL", 
                        "SELECT * FROM Movies WHERE Code NOT IN", 
                        "SELECT Title FROM Movies WHERE Code NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movies not being shown in any theaters?"
                ], 
                "question": " Show the titles of movies not currently being shown in any theaters.", 
                "sql": [
                    "SELECT Title FROM Movies WHERE Code NOT IN"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "college_2": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What are the distinct classroom buildings?", 
                        "Of those, which have capacity of over 50?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT building FROM classroom", 
                        "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct buildings with capacities of greater than 50?"
                ], 
                "question": " Find the buildings which have rooms with capacity more than 50.", 
                "id": 1, 
                "sql": [
                    "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which classrooms are not in Lamberton?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE building ! =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building ! =  'Lamberton'"
                    ]
                }, 
                "paraphrase": [
                    "How many classrooms are not in Lamberton?"
                ], 
                "question": " Count the number of rooms that are not in the Lamberton building.", 
                "id": 2, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building ! =  'Lamberton'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average department budget?", 
                        "Which departments have a budget higher than average?", 
                        "What are their names and buildings?"
                    ], 
                    "sql": [
                        "SELECT avg(budget) FROM department", 
                        "SELECT * FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", 
                        "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                    ]
                }, 
                "paraphrase": [
                    "Give the name and building of the departments with greater than average budget."
                ], 
                "question": " What is the name and building of the departments whose budget is more than the average budget?", 
                "id": 3, 
                "sql": [
                    "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which classrooms have capacity between 50 and 100?", 
                        "What are their buildings and room numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE capacity BETWEEN 50 AND 100", 
                        "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
                    ]
                }, 
                "paraphrase": [
                    "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?"
                ], 
                "question": " Find the room number of the rooms which can sit 50 to 100 students and their buildings.", 
                "id": 4, 
                "sql": [
                    "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by budget in decreasing order.", 
                        "Which is has the highest budget?", 
                        "What is its name and building?"
                    ], 
                    "sql": [
                        "SELECT * FROM department ORDER BY budget DESC", 
                        "SELECT * FROM department ORDER BY budget DESC LIMIT 1", 
                        "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the department name and corresponding building for the department with the greatest budget?"
                ], 
                "question": " Find the name and building of the department with the highest budget.", 
                "id": 5, 
                "sql": [
                    "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of students in the History department?", 
                        "Which one has the most credits?"
                    ], 
                    "sql": [
                        "SELECT name FROM student WHERE dept_name  =  'History'", 
                        "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the student in the History department with the most credits."
                ], 
                "question": " What is the name of the student who has the highest total credits in the History department.", 
                "id": 6, 
                "sql": [
                    "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the classrooms in Lamberton?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE building  =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of classrooms in Lamberton."
                ], 
                "question": " How many rooms does the Lamberton building have?", 
                "id": 7, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the student ids of students with advisors?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT s_id FROM advisor", 
                        "SELECT count(DISTINCT s_id) FROM advisor"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of students who have advisors."
                ], 
                "question": " How many students have advisors?", 
                "id": 8, 
                "sql": [
                    "SELECT count(DISTINCT s_id) FROM advisor"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the department names of departments that offer courses?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT dept_name FROM course", 
                        "SELECT count(DISTINCT dept_name) FROM course"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of departments which offer courses."
                ], 
                "question": " How many departments offer courses?", 
                "id": 9, 
                "sql": [
                    "SELECT count(DISTINCT dept_name) FROM course"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the courses in the Physics department?", 
                        "What are their course ids?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Physics'", 
                        "SELECT DISTINCT course_id FROM course WHERE dept_name  =  'Physics'", 
                        "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of courses in the Physics department."
                ], 
                "question": " How many different courses offered by Physics department?", 
                "id": 10, 
                "sql": [
                    "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which courses have some prerequisite?", 
                        "Which ones have two prerequisites among them?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id", 
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", 
                        "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles for courses with two prerequisites?"
                ], 
                "question": " Find the title of courses that have two prerequisites?", 
                "id": 11, 
                "sql": [
                    "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which courses have more than 1 prerequisite?", 
                        "What title, credit, and department name correspond to these?"
                    ], 
                    "sql": [
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", 
                        "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the title, credit value, and department name for courses with more than one prerequisite?"
                ], 
                "question": " Find the title, credit, and department name of courses that have more than one prerequisites?", 
                "id": 12, 
                "sql": [
                    "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses that have some prerequisites?", 
                        "How many courses do not in the resulting list?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of courses without prerequisites."
                ], 
                "question": " How many courses that do not have prerequisite?", 
                "id": 13, 
                "sql": [
                    "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for prerequisites?", 
                        "Which courses do not have prerequisites?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT * FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", 
                        "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses without prerequisites?"
                ], 
                "question": " Find the name of the courses that do not have any prerequisite?", 
                "id": 14, 
                "sql": [
                    "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who have taught a course?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT id FROM teaches", 
                        "SELECT COUNT (DISTINCT id) FROM teaches"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of distinct instructors who have taught a course."
                ], 
                "question": " How many different instructors have taught some course?", 
                "id": 15, 
                "sql": [
                    "SELECT COUNT (DISTINCT id) FROM teaches"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the budgets of the Marketing department?", 
                        "How about that for the Finance department?", 
                        "What is their total budget?"
                    ], 
                    "sql": [
                        "SELECT budget FROM department WHERE dept_name  =  'Marketing'", 
                        "SELECT budget FROM department WHERE dept_name  =  'Finance'", 
                        "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
                    ]
                }, 
                "paraphrase": [
                    "What is the sum of budgets of the Marketing and Finance departments?"
                ], 
                "question": " Find the total budgets of the Marketing or Finance department.", 
                "id": 16, 
                "sql": [
                    "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about an instructor whose name contains 'Soisalon'?", 
                        "What is their department name?"
                    ], 
                    "sql": [
                        "SELECT * FROM instructor WHERE name LIKE '%Soisalon%'", 
                        "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the department with an instructure who has a name like 'Soisalon'?"
                ], 
                "question": " Find the department name of the instructor whose name contains 'Soisalon'.", 
                "id": 17, 
                "sql": [
                    "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many rooms are there in Lamberton?", 
                        "Of those, how many have capacity less than 50?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of rooms in Lamberton with capacity lower than 50."
                ], 
                "question": " How many rooms whose capacity is less than 50 does the Lamberton building have?", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average department budget?", 
                        "Which departments have a budget higher than that?", 
                        "What are their names and budgets?"
                    ], 
                    "sql": [
                        "SELECT avg(budget) FROM department", 
                        "SELECT * FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", 
                        "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and budgets of departments with budgets greater than the average?"
                ], 
                "question": " Find the name and budget of departments whose budgets are more than the average budget.", 
                "id": 19, 
                "sql": [
                    "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of the professors in the Statistics department?", 
                        "Which one earns the least?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor WHERE dept_name  =  'Statistics'", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the lowest earning instructor in the Statistics department."
                ], 
                "question": " what is the name of the instructor who is in Statistics department and earns the lowest salary?", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of Statistics courses?", 
                        "Of these, which are also listed as Psychology courses?"
                    ], 
                    "sql": [
                        "SELECT title FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of a course that is listed in both the Statistics and Psychology departments?"
                ], 
                "question": " Find the title of course that is provided by both Statistics and Psychology departments.", 
                "id": 21, 
                "sql": [
                    "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of Statistics courses?", 
                        "Of these, which are not provided by the Psychology department?"
                    ], 
                    "sql": [
                        "SELECT title FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses that are in the Statistics department but not the Psychology department?"
                ], 
                "question": " Find the title of course that is provided by Statistics but not Psychology departments.", 
                "id": 22, 
                "sql": [
                    "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught in the Fall of 2009?", 
                        "Of those, which did not teach in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?"
                ], 
                "question": " Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", 
                "id": 23, 
                "sql": [
                    "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct names of all the students?", 
                        "Of these, which took classes in 2009 or 2010?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM student", 
                        "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the students who took classes in 2009 or 2010?"
                ], 
                "question": " Find the name of students who took any class in the years of 2009 and 2010.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses does each department have?", 
                        "Order their names from greatest to least.", 
                        "What are the top 3?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  count(*) FROM course GROUP BY dept_name", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the 3 departments with the most courses?"
                ], 
                "question": " Find the names of the top 3 departments that provide the largest amount of courses?", 
                "id": 25, 
                "sql": [
                    "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many credits does each department offer?", 
                        "What is the name of the department which offers the most?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  sum(credits) FROM course GROUP BY dept_name", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the department with the most credits?"
                ], 
                "question": " Find the name of the department that offers the highest total credits?", 
                "id": 26, 
                "sql": [
                    "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all courses?", 
                        "Order them by titles and credits."
                    ], 
                    "sql": [
                        "SELECT title FROM course", 
                        "SELECT title FROM course ORDER BY title ,  credits"
                    ]
                }, 
                "paraphrase": [
                    "Given the titles of all courses, in order of titles and credits."
                ], 
                "question": " List the names of all courses ordered by their titles and credits.", 
                "id": 27, 
                "sql": [
                    "SELECT title FROM course ORDER BY title ,  credits"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the department names by increasing budget.", 
                        "Which has the lowest?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM department ORDER BY budget", 
                        "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the department with the lowest budget."
                ], 
                "question": " Which department has the lowest budget?", 
                "id": 28, 
                "sql": [
                    "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by decreasing budget.", 
                        "In the same order, what are their names and buildings?"
                    ], 
                    "sql": [
                        "SELECT * FROM department ORDER BY budget DESC", 
                        "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and buildings of the deparments, sorted by budget descending?"
                ], 
                "question": " List the names and buildings of all departments sorted by the budget from large to small.", 
                "id": 29, 
                "sql": [
                    "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the instructor names by salary from greatest to least.", 
                        "Who is paid the most?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor ORDER BY salary DESC", 
                        "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the highest paid instructor."
                ], 
                "question": " Who is the instructor with the highest salary?", 
                "id": 30, 
                "sql": [
                    "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about instructors?", 
                        "Order this by increasing salary."
                    ], 
                    "sql": [
                        "SELECT * FROM instructor", 
                        "SELECT * FROM instructor ORDER BY salary"
                    ]
                }, 
                "paraphrase": [
                    "Give all information regarding instructors, in order of salary from least to greatest."
                ], 
                "question": " List the information of all instructors ordered by their salary in ascending order.", 
                "id": 31, 
                "sql": [
                    "SELECT * FROM instructor ORDER BY salary"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names and department names for each student?", 
                        "Order this by total credits ascending."
                    ], 
                    "sql": [
                        "SELECT name ,  dept_name FROM student", 
                        "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students and their respective departments, ordered by number of credits from least to greatest?"
                ], 
                "question": " Find the name of the students and their department names sorted by their total credits in ascending order.", 
                "id": 32, 
                "sql": [
                    "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What were all the course titles in 2008?", 
                        "Also, what were the instructors' names?", 
                        "Order this by title."
                    ], 
                    "sql": [
                        "SELECT T1.title FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id WHERE YEAR  =  2008", 
                        "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008", 
                        "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
                    ]
                }, 
                "paraphrase": [
                    "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title."
                ], 
                "question": " list in alphabetic order all course names and their instructors' names in year 2008.", 
                "id": 33, 
                "sql": [
                    "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors who advise students?", 
                        "Of those, which advise more than one student?"
                    ], 
                    "sql": [
                        "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id", 
                        "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who advise more than one student?"
                ], 
                "question": " Find the name of instructors who are advising more than one student.", 
                "id": 34, 
                "sql": [
                    "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of students with advisors?", 
                        "Which ones have more than one advisor?"
                    ], 
                    "sql": [
                        "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id", 
                        "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have more than one advisor?"
                ], 
                "question": " Find the name of the students who have more than one advisor?", 
                "id": 35, 
                "sql": [
                    "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many classrooms have capacity greater than 50?", 
                        "Count these by building."
                    ], 
                    "sql": [
                        "SELECT count(*) FROM classroom WHERE capacity  >  50", 
                        "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
                    ]
                }, 
                "paraphrase": [
                    "How many rooms in each building have a capacity of over 50?"
                ], 
                "question": " Find the number of rooms with more than 50 capacity for each building.", 
                "id": 36, 
                "sql": [
                    "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the maximum and average capacities across all classrooms?", 
                        "Find these for each building."
                    ], 
                    "sql": [
                        "SELECT max(capacity) ,  avg(capacity) FROM classroom", 
                        "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
                    ]
                }, 
                "paraphrase": [
                    "What are the greatest and average capacity for rooms in each building?"
                ], 
                "question": " Find the maximum and average capacity among rooms in each building.", 
                "id": 37, 
                "sql": [
                    "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the different course titles?", 
                        "Of those, which are offered in more than one department?"
                    ], 
                    "sql": [
                        "SELECT title FROM course", 
                        "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses that are offered in more than one department?"
                ], 
                "question": " Find the title of the course that is offered by more than one department.", 
                "id": 38, 
                "sql": [
                    "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many total credits are offered?", 
                        "Find the totals by department name."
                    ], 
                    "sql": [
                        "SELECT sum(credits) FROM course", 
                        "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many total credits are offered by each department?"
                ], 
                "question": " Find the total credits of courses provided by different department.", 
                "id": 39, 
                "sql": [
                    "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary of an instructor?", 
                        "What are the departments with average salary greater than that?", 
                        "Also, what are their lowest salaries?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM instructor", 
                        "SELECT dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", 
                        "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
                    ]
                }, 
                "paraphrase": [
                    "What is the lowest salary in departments with average salary greater than the overall average."
                ], 
                "question": " Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", 
                "id": 40, 
                "sql": [
                    "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses are offered in each year?", 
                        "Split these by semester as well."
                    ], 
                    "sql": [
                        "SELECT count(*) ,  YEAR FROM SECTION GROUP BY YEAR", 
                        "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
                    ]
                }, 
                "paraphrase": [
                    "How many courses are provided in each semester and year?"
                ], 
                "question": " Find the number of courses provided in each semester and year.", 
                "id": 41, 
                "sql": [
                    "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses are offered in each year?", 
                        "Which year had the most?"
                    ], 
                    "sql": [
                        "SELECT YEAR ,  count(*) FROM SECTION GROUP BY YEAR", 
                        "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which year had the greatest number of courses?"
                ], 
                "question": " Find the year which offers the largest number of courses.", 
                "id": 42, 
                "sql": [
                    "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the number of courses in each semester and year.", 
                        "Which had the most?"
                    ], 
                    "sql": [
                        "SELECT semester ,  YEAR ,  count(*) FROM SECTION GROUP BY semester ,  YEAR", 
                        "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the year and semester with the most courses?"
                ], 
                "question": " Find the year and semester when offers the largest number of courses.", 
                "id": 43, 
                "sql": [
                    "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students are in each department?", 
                        "What is the name of the department with the most?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  count(*) FROM student GROUP BY dept_name", 
                        "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the deparment with the highest enrollment?"
                ], 
                "question": " Find the name of department has the highest amount of students?", 
                "id": 44, 
                "sql": [
                    "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students are there?", 
                        "Count this by department."
                    ], 
                    "sql": [
                        "SELECT count(*) FROM student", 
                        "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many students are in each department?"
                ], 
                "question": " Find the total number of students in each department.", 
                "id": 45, 
                "sql": [
                    "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students were taking classes in each semester and year?", 
                        "Which one had the fewest?"
                    ], 
                    "sql": [
                        "SELECT semester ,  YEAR ,  count(*) FROM takes GROUP BY semester ,  YEAR", 
                        "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which semeseter and year had the fewest students?"
                ], 
                "question": " Find the semester and year which has the least number of student taking any class.", 
                "id": 46, 
                "sql": [
                    "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all instructors who are advisors?", 
                        "Of these, which advise students in the History department?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id", 
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
                    ]
                }, 
                "paraphrase": [
                    "Give id of the instructor who advises students in the History department."
                ], 
                "question": " What is the id of the instructor who advises of all students from History department?", 
                "id": 47, 
                "sql": [
                    "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all instructors who are advisors?", 
                        "Of these, which advise students in the History department?", 
                        "What are their names and salaries?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id", 
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries of instructors who advises students in the History department?"
                ], 
                "question": " Find the name and salary of the instructors who are advisors of any student from History department?", 
                "id": 48, 
                "sql": [
                    "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses with prerequisites?", 
                        "What are the ids of all other courses?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of courses without prerequisites?"
                ], 
                "question": " Find the id of the courses that do not have any prerequisite?", 
                "id": 49, 
                "sql": [
                    "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses with prerequisites?", 
                        "What are the titles of all other courses?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT title FROM course WHERE course_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of courses without prerequisites?"
                ], 
                "question": " Find the name of the courses that do not have any prerequisite?", 
                "id": 50, 
                "sql": [
                    "SELECT title FROM course WHERE course_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all prerequisites?", 
                        "What is the id of the prerequisite for International Finance?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT prereq_id FROM prereq", 
                        "SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "Give the title of the prerequisite to the course International Finance."
                ], 
                "question": " What is the title of the prerequisite class of International Finance course?", 
                "id": 51, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the prerequisites?", 
                        "What is the id of the course for which Differential Geometry is a prerequisite?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of the course with Differential Geometry as a prerequisite?"
                ], 
                "question": " Find the title of course whose prerequisite is course Differential Geometry.", 
                "id": 52, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of students who took courses in the Fall of 2003?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003", 
                        "SELECT name FROM student WHERE id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who took a course in the Fall of 2003?"
                ], 
                "question": " Find the names of students who have taken any course in the fall semester of year 2003.", 
                "id": 53, 
                "sql": [
                    "SELECT name FROM student WHERE id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of courses offered in the Fall of 2010?", 
                        "Of these, which were offered in Chandler building?"
                    ], 
                    "sql": [
                        "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE semester  =  'Fall' AND YEAR  =  2010", 
                        "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "Give the title of the course offered in Chandler during the Fall of 2010."
                ], 
                "question": " What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?", 
                "id": 54, 
                "sql": [
                    "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors?", 
                        "Of those, which have taught a C Programming course?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who have taught C Programming courses?"
                ], 
                "question": " Find the name of the instructors who taught C Programming course before.", 
                "id": 55, 
                "sql": [
                    "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all advisors?", 
                        "What are the ids of advisors who advise students in the Math department?", 
                        "What are their names and salaries?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor", 
                        "SELECT T1.i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Math'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries of instructors who advise students in the Math department?"
                ], 
                "question": " Find the name and salary of instructors who are advisors of the students from the Math department.", 
                "id": 56, 
                "sql": [
                    "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of advisors who advise students in the Math department?", 
                        "What are their names?", 
                        "Order this by the students' total credits."
                    ], 
                    "sql": [
                        "SELECT T1.i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Math'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", 
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors who advise students in the math depart sorted by total credits of the student."
                ], 
                "question": " Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.", 
                "id": 57, 
                "sql": [
                    "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the ids of the prerequisite classes?", 
                        "Of these, which is the prerequisite for Mobile Computing?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT prereq_id FROM prereq", 
                        "SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of the course that is a prerequisite for Mobile Computing?"
                ], 
                "question": " What is the course title of the prerequisite of course Mobile Computing?", 
                "id": 58, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are names of instructors who advise students?", 
                        "Of these, which one instructs the students with the most total credits?"
                    ], 
                    "sql": [
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id", 
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the instructor who advises the student with the greatest number of total credits?"
                ], 
                "question": " Find the name of instructor who is the advisor of the student who has the highest number of total credits.", 
                "id": 59, 
                "sql": [
                    "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught courses?", 
                        "What are the ids of all other instructors?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches", 
                        "SELECT id FROM instructor WHERE id NOT IN", 
                        "SELECT name FROM instructor WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who didn't teach?"
                ], 
                "question": " Find the name of instructors who didn't teach any courses?", 
                "id": 60, 
                "sql": [
                    "SELECT name FROM instructor WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught courses?", 
                        "What are the ids of all other instructors?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches", 
                        "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of instructors who didnt' teach?"
                ], 
                "question": " Find the id of instructors who didn't teach any courses?", 
                "id": 61, 
                "sql": [
                    "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of teachers who taught in the Spring?", 
                        "What are the ids of all other instructors?", 
                        "What are the corresponding instructor names?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches WHERE semester  =  'Spring'", 
                        "SELECT id FROM instructor WHERE id NOT IN", 
                        "SELECT name FROM instructor WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who didn't teach courses in the Spring?"
                ], 
                "question": " Find the names of instructors who didn't each any courses in any Spring semester.", 
                "id": 62, 
                "sql": [
                    "SELECT name FROM instructor WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the average instructor salaries for each department?", 
                        "Which department has the highest?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  avg(salary) FROM instructor GROUP BY dept_name", 
                        "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which department has the highest average instructor salary?"
                ], 
                "question": " Find the name of the department which has the highest average salary of professors.", 
                "id": 63, 
                "sql": [
                    "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by decreasing budget.", 
                        "How many instructors are in the department with the highest budget?", 
                        "Also, what is the average salary of those instructors?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM department ORDER BY budget DESC", 
                        "SELECT count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", 
                        "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How many instructors are in the department with the highest budget, and what is their average salary?"
                ], 
                "question": " Find the number and averaged salary of all instructors who are in the department with the highest budget.", 
                "id": 64, 
                "sql": [
                    "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the maximum capacity of any classroom?", 
                        "What is the title of the course which is taught there?", 
                        "Also, what credits value does that course have?"
                    ], 
                    "sql": [
                        "SELECT max(capacity) FROM classroom", 
                        "SELECT T3.title FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", 
                        "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
                    ]
                }, 
                "paraphrase": [
                    "Give the title and credits for the course that is taught in the classroom with the greatest capacity."
                ], 
                "question": " What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", 
                "id": 65, 
                "sql": [
                    "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have taken Biology courses?", 
                        "What are the names of all students who did not take that class?"
                    ], 
                    "sql": [
                        "SELECT * FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology'", 
                        "SELECT name FROM student WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who haven't taken any Biology courses?"
                ], 
                "question": " Find the name of students who didn't take any course from Biology department.", 
                "id": 66, 
                "sql": [
                    "SELECT name FROM student WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the total number of students.", 
                        "Now, find the number by department.", 
                        "Also, find the number of instructors in each department."
                    ], 
                    "sql": [
                        "SELECT count(DISTINCT id) FROM student", 
                        "SELECT count(DISTINCT T2.id) ,  T1.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name GROUP BY T1.dept_name", 
                        "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many students and instructors are in each department?"
                ], 
                "question": " Find the total number of students and total number of instructors for each department.", 
                "id": 67, 
                "sql": [
                    "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the id of the prerequisite of International Finance?", 
                        "What are the ids of students who have taken this course?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT T2.prereq_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id WHERE T1.title  =  'International Finance'", 
                        "SELECT T1.id FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN", 
                        "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have taken the prerequisite for the course International Finance?"
                ], 
                "question": " Find the name of students who have taken the prerequisite course of the course with title International Finance.", 
                "id": 68, 
                "sql": [
                    "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary of instructors in the Physics department?", 
                        "What are the names of the instructors who earn more than that?", 
                        "Also, what are their salaries?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics'", 
                        "SELECT name FROM instructor WHERE salary  < ", 
                        "SELECT name ,  salary FROM instructor WHERE salary  < "
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?"
                ], 
                "question": " Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", 
                "id": 69, 
                "sql": [
                    "SELECT name ,  salary FROM instructor WHERE salary  < "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the Statistics courses?", 
                        "What are the names of students who have taken courses in the Statistics department?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have taken Statistics courses?"
                ], 
                "question": " Find the name of students who took some course offered by Statistics department.", 
                "id": 70, 
                "sql": [
                    "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the courses in the Psychology department, ordered by title?", 
                        "What are the building, room number, semester and year corresponding to these courses?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Psychology' ORDER BY title", 
                        "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
                    ]
                }, 
                "paraphrase": [
                    "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?"
                ], 
                "question": " Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.", 
                "id": 71, 
                "sql": [
                    "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the instructors?", 
                        "Of those, which are in the Comp. Sci. department?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors in the Comp. Sci. department?"
                ], 
                "question": " Find the names of all instructors in computer science department", 
                "id": 72, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors who earn more than 80000?", 
                        "Of those, which are in the Comp. Sci. department?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor WHERE salary  >  80000", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?"
                ], 
                "question": " Find the names of all instructors in Comp. Sci. department with salary > 80000.", 
                "id": 73, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the names of teachers who have taught a course?", 
                        "Also, what were the course ids?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", 
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors who have taught a course, as well as the corresponding course id?"
                ], 
                "question": " Find the names of all instructors who have taught some course and the course_id.", 
                "id": 74, 
                "sql": [
                    "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the names of teachers who have taught a course, and what were the course ids?", 
                        "Of these, which were in the Art department?"
                    ], 
                    "sql": [
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", 
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of Art instructors who have taught a course, and the corresponding course id?"
                ], 
                "question": " Find the names of all instructors in the Art department who have taught some course and the course_id.", 
                "id": 75, 
                "sql": [
                    "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors?", 
                        "Of these, which include the substring \"dar\"?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT name FROM instructor WHERE name LIKE '%dar%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors with names that include \"dar\"?"
                ], 
                "question": " Find the names of all instructors whose name includes the substring \u201cdar\u201d.", 
                "id": 76, 
                "sql": [
                    "SELECT name FROM instructor WHERE name LIKE '%dar%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct names of all instructors?", 
                        "Sort this in alphabetical order."
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM  instructor", 
                        "SELECT DISTINCT name FROM  instructor ORDER BY name"
                    ]
                }, 
                "paraphrase": [
                    "List the distinct names of the instructors, ordered by name."
                ], 
                "question": " List in alphabetic order the names of all distinct instructors.", 
                "id": 77, 
                "sql": [
                    "SELECT DISTINCT name FROM  instructor ORDER BY name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses offered in the Fall of 2009?", 
                        "Also include the ids for courses offered in the Spring of 2010."
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for courses in the Fall of 2009 or the Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 or in Spring 2010.", 
                "id": 78, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses offered in the Fall of 2009?", 
                        "Of these, which were also offered in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 and in Spring 2010.", 
                "id": 79, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses offered in the Fall of 2009?", 
                        "Of these, which were not offered in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of courses offered in Fall of 2009 but not in Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 but not in Spring 2010.", 
                "id": 80, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What was the largest salary across instructors?", 
                        "What were all the other distinct salaries?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM instructor", 
                        "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct salaries of all instructors who earned less than the maximum salary?"
                ], 
                "question": " Find the salaries of all distinct instructors that are less than the largest salary.", 
                "id": 81, 
                "sql": [
                    "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct ids of instructors teaching in the Spring of 2010?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT ID FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", 
                        "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "How many instructors teach a course in the Spring of 2010?"
                ], 
                "question": " Find the total number of instructors who teach a course in the Spring 2010 semester.", 
                "id": 82, 
                "sql": [
                    "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of departments that have average salaries higher than 42000?", 
                        "Also, what are their average salaries?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", 
                        "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and average salaries for departments with average salary higher than 42000?"
                ], 
                "question": " Find the names and average salaries of all departments whose average salary is greater than 42000.", 
                "id": 83, 
                "sql": [
                    "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary of instructors in the Biology department?", 
                        "What are the ids of instructors who earn more than that?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology'", 
                        "SELECT id FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", 
                        "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who earn more than at least one instructor from the Biology department?"
                ], 
                "question": " Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.", 
                "id": 84, 
                "sql": [
                    "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the highest salary of instructors in the Biology department?", 
                        "What are the names of instructors who earn more than this?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology'", 
                        "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?"
                ], 
                "question": " Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.", 
                "sql": [
                    "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "art_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "sql2": [
                        "SELECT * FROM sculptures ORDER BY YEAR DESC LIMIT 1", 
                        "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                    ], 
                    "sql": [
                        "SELECT title ,  YEAR FROM sculptures", 
                        "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                    ], 
                    "question": [
                        "What is the name and year created of each sculpture?", 
                        "Which one was created most recently?"
                    ], 
                    "question2": [
                        "Find all info of the sculpture was created most recently.", 
                        "What is its name and year?"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the scuplture that was created most recently?"
                ], 
                "question": " What is the title of the sculpture that was created in the most recent year?", 
                "id": 1, 
                "sql": [
                    "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which is the oldest painting?", 
                        "What is its title, location and year created?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings ORDER BY YEAR LIMIT 1", 
                        "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the oldest painting and where is it located?"
                ], 
                "question": " What is the title and location of the oldest painting?", 
                "id": 2, 
                "sql": [
                    "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the sculptures?", 
                        "Which ones are located in gallery 226?"
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures", 
                        "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all sculptures in gallery 226?"
                ], 
                "question": " Find the names of all sculptures located in gallery 226.", 
                "id": 3, 
                "sql": [
                    "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the paintings?", 
                        "Also list their locations."
                    ], 
                    "sql": [
                        "SELECT title FROM paintings", 
                        "SELECT title ,  LOCATION FROM paintings"
                    ]
                }, 
                "paraphrase": [
                    "What are the paintings called and where are they located?"
                ], 
                "question": " List the title and location of all paintings.", 
                "id": 4, 
                "sql": [
                    "SELECT title ,  LOCATION FROM paintings"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the sculptures?", 
                        "Also list their locations."
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures", 
                        "SELECT title ,  LOCATION FROM sculptures"
                    ]
                }, 
                "paraphrase": [
                    "What are the sculptures called and where are they located?"
                ], 
                "question": " List the title and location of all sculptures.", 
                "id": 5, 
                "sql": [
                    "SELECT title ,  LOCATION FROM sculptures"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which painting has an id equal to 80?", 
                        "What is its medium type?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE paintingID  =  80", 
                        "SELECT medium FROM paintings WHERE paintingID  =  80"
                    ]
                }, 
                "paraphrase": [
                    "What mediums were used for the paining with id = 80?"
                ], 
                "question": " What are the medium types of the painting with id = 80", 
                "id": 6, 
                "sql": [
                    "SELECT medium FROM paintings WHERE paintingID  =  80"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the first and last names of all the artists?", 
                        "Which of those were born after 1850?"
                    ], 
                    "sql": [
                        "SELECT lname ,  fname FROM artists", 
                        "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names of artists born after 1850?"
                ], 
                "question": " Find the first and last names of all artists who were born after 1850.", 
                "id": 7, 
                "sql": [
                    "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sculptures are not located in gallery 226?", 
                        "Of those, what are their names and years?"
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures WHERE LOCATION ! =  \"Gallery 226\"", 
                        "SELECT title ,  YEAR FROM sculptures WHERE LOCATION ! =  \"Gallery 226\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and dates created for all sculptures not located in gallery 226?"
                ], 
                "question": " Find the names and years of all sculptures that are not located in gallery 226.", 
                "id": 8, 
                "sql": [
                    "SELECT title ,  YEAR FROM sculptures WHERE LOCATION ! =  \"Gallery 226\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who were all the distinct artists who made sculptures?", 
                        "Of those, which made them before 1900?", 
                        "What were their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900", 
                        "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900"
                    ]
                }, 
                "paraphrase": [
                    "What is the first and last name of each distinct artists who made a sculpture before 1900?"
                ], 
                "question": " What are the first and last names of all distinct artists who made sculptures before 1900?", 
                "id": 9, 
                "sql": [
                    "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the distinct artists?", 
                        "Which of them made sculptures after 1920?", 
                        "What are their birth years?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920", 
                        "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920"
                    ]
                }, 
                "paraphrase": [
                    "What is the birth year of each distinct artists who created sculptures after 1920?"
                ], 
                "question": " Find the birth years of all distinct artists who made sculptures after 1920?", 
                "id": 10, 
                "sql": [
                    "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Order the result by their lifetime.", 
                        "What was the first and last name of the one who lived the longest?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear DESC", 
                        "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the full name of the artist who lived the longest."
                ], 
                "question": " What are the first and last names of the artist who lived the longest?", 
                "id": 11, 
                "sql": [
                    "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Which one lived the shortest?", 
                        "What was his/her age?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear LIMIT 1", 
                        "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How old is the artist who lived the shortest life?"
                ], 
                "question": " What is the age of the artist who had the shortest life?", 
                "id": 12, 
                "sql": [
                    "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Which one lived the longests?", 
                        "What was his/her first name and age?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1", 
                        "SELECT fname ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name and age of the artist who lived the longest?"
                ], 
                "question": " What are the first name and age of the artist who had the longest life?", 
                "id": 13, 
                "sql": [
                    "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings are there?", 
                        "How many of those are exhibited at gallery 240?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM paintings", 
                        "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\""
                    ]
                }, 
                "paraphrase": [
                    "What is the total number of paintings exhibited in gallery 240?"
                ], 
                "question": " How many paintings are exhibited at gallery 240?", 
                "id": 14, 
                "sql": [
                    "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings did each artist make?", 
                        "How many paintings did the oldest of them make?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID", 
                        "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID ORDER BY T1.deathYear - T1.birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the painting count of the artist with the longest life?"
                ], 
                "question": " How many paintings did the artist with the longest life make?", 
                "id": 15, 
                "sql": [
                    "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID ORDER BY T1.deathYear - T1.birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has a first name of Mary?", 
                        "Select all paintings created by Mary."
                    ], 
                    "sql": [
                        "SELECT ALL paintings created BY Mary. S: What ARE the NAMES AND years OF ALL those paintings?", 
                        "SELECT * FROM artists WHERE fname  =  \"Mary\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"", 
                        "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\""
                    ]
                }, 
                "paraphrase": [
                    "What is the name and year of each painting created by the artist whose first name is Mary?"
                ], 
                "question": " Give me a list of names and years of paintings that were created by the artist whose first name is Mary.", 
                "id": 16, 
                "sql": [
                    "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist was born before 1850?", 
                        "What paintings did he/she create?", 
                        "What are the widths of those paintings?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE birthYear  <  1850", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850", 
                        "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850"
                    ]
                }, 
                "paraphrase": [
                    "How wide were the paintings by the artist who was born prior to 1850?"
                ], 
                "question": " What are the widths of the paintings that were created by the artist who was born before 1850?", 
                "id": 17, 
                "sql": [
                    "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has a first name of Pablo?", 
                        "What paintings are created by him?", 
                        "What are the location and medium types of those paintings?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE fname  =  \"Pablo\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"", 
                        "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\""
                    ]
                }, 
                "paraphrase": [
                    "In what locations and on what mediums are the paintings created by the artist with the first name Pablo?"
                ], 
                "question": " What are the location and medium type of paintings that are created by the artist whose first name is Pablo?", 
                "id": 18, 
                "sql": [
                    "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have works of paintings?", 
                        "Which artists created some sculptures?", 
                        "What are the first and last names of the artists who have all of them?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID"
                    ]
                }, 
                "paraphrase": [
                    "Give the full names of artists who have created paintings and sculptures."
                ], 
                "question": " Find the first and last names of the artists who have both works of paintings and sculptures?", 
                "id": 19, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have medium oil paintings?", 
                        "Of those, who also have paintings with the lithographic medium?", 
                        "What are their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\""
                    ]
                }, 
                "paraphrase": [
                    "What are the first and last names of artists who have painted using both oil and lithographic mediums?"
                ], 
                "question": " What are the first and last names of the artists who have not only medium oil paintings but also paintings with the lithographic medium?", 
                "id": 20, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the ids of the artists who created a painting in 1884.", 
                        "Of those, which are ids of artists that painted the work on canvas?", 
                        "What is his birthyear?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"", 
                        "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "In what year was the artist who created a painting in 1884 born?"
                ], 
                "question": " What is the birth year of the artist who created a painting in 1884 that is on canvas?", 
                "id": 21, 
                "sql": [
                    "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the ids of the artists who have medium oil paintings?", 
                        "Of those artists, who has their oil paintings located in gallery 241?", 
                        "What are the different first names of these artists?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"", 
                        "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                    ]
                }, 
                "paraphrase": [
                    "What are first names of the artists with oil paintings in gallery 241?"
                ], 
                "question": " What are the unique first names of the artists who had medium oil paintings located in gallery 241?", 
                "id": 22, 
                "sql": [
                    "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different mediums?", 
                        "How many works are there for each of them?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT medium FROM paintings", 
                        "SELECT count(*) ,  medium FROM paintings GROUP BY medium"
                    ]
                }, 
                "paraphrase": [
                    "How many works are there in each medium?"
                ], 
                "question": " What are the numbers of works for different medium type?", 
                "id": 23, 
                "sql": [
                    "SELECT count(*) ,  medium FROM paintings GROUP BY medium"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different medium types for paintings?", 
                        "For each of them, what is the average height of the works in mm?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT medium FROM paintings", 
                        "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium"
                    ]
                }, 
                "paraphrase": [
                    "What is the average height of paintings for different medium types?"
                ], 
                "question": " What are the average height of paintings for different medium types?", 
                "id": 24, 
                "sql": [
                    "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings were created before 1900?", 
                        "How many were shown/collected in different places?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM paintings WHERE YEAR  <  1900", 
                        "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION"
                    ]
                }, 
                "paraphrase": [
                    "How many paintings were created before 1900 in different locations?"
                ], 
                "question": " What are the numbers of paintings created before 1900 in different places?", 
                "id": 25, 
                "sql": [
                    "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings created after 1910?", 
                        "Of those, which have a medium of oil?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  >  1910", 
                        "SELECT * FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"", 
                        "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\""
                    ]
                }, 
                "paraphrase": [
                    "Give the names of all oil paintings created after 1910."
                ], 
                "question": " What are the titles of paintings that are created after 1910 and whose medium is oil?", 
                "id": 26, 
                "sql": [
                    "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which painters created works in oil?", 
                        "What is id of every painter who has oil paintings exhibited at gallery 240?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\""
                    ]
                }, 
                "paraphrase": [
                    "What is the unique id of every painter who had a medium oil painting displayed at gallery 240?"
                ], 
                "question": " Find the unique id of the painters who had medium oil paintings exhibited at gallery 240?", 
                "id": 27, 
                "sql": [
                    "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the heights of all the paintings?", 
                        "Which of these have a longer height than some paintings on canvas?", 
                        "What are their distinct titles?"
                    ], 
                    "sql": [
                        "SELECT height_mm FROM paintings", 
                        "SELECT height_mm FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")", 
                        "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct titles of every painting that has a greater height than some painting on canvas?"
                ], 
                "question": " Find the distinct titles of all the paintings that have a longer height than some painting on canvas?", 
                "id": 28, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "In what year was the oldest painting in Gallery 240 created?", 
                        "Of these, which are older than one in gallery 240?"
                    ], 
                    "sql": [
                        "SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\"", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct ids of every painting that is older than some painting in gallery 240?"
                ], 
                "question": " Find the distinct ids of all paintings that are older than some painting at location gallery 240.", 
                "id": 29, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the year of the oldest painting.", 
                        "what is the id of that painting?"
                    ], 
                    "sql": [
                        "SELECT YEAR FROM paintings ORDER BY YEAR LIMIT 1", 
                        "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the oldest painting?"
                ], 
                "question": " Find the id of the oldest painting.", 
                "id": 30, 
                "sql": [
                    "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created sculptures?", 
                        "Of these artists, who created ones with a title that has the word \"female\" in it?", 
                        "What is his/her first and last name?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\""
                    ]
                }, 
                "paraphrase": [
                    "What is the full name of the artist with a sculpture whose title includes the word \"female\"?"
                ], 
                "question": " What are the first and last name of the artist who had a sculpture work whose title has the word \u201cfemale\u201d in it?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the paintings?", 
                        "List them in alphabetical order."
                    ], 
                    "sql": [
                        "SELECT DISTINCT title FROM paintings", 
                        "SELECT DISTINCT title FROM paintings ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of every distinct painting in alphabetical order?"
                ], 
                "question": " List the names of all distinct paintings in alphabetical order.", 
                "id": 32, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all distinct paintings?", 
                        "Order them by length."
                    ], 
                    "sql": [
                        "SELECT DISTINCT title FROM paintings", 
                        "SELECT DISTINCT title FROM paintings ORDER BY height_mm"
                    ]
                }, 
                "paraphrase": [
                    "List the names of all distinct paintings from shortest to longest in height."
                ], 
                "question": " List the names of all distinct paintings ordered by length.", 
                "id": 33, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings ORDER BY height_mm"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which are the names of all the paintings and sculptures?", 
                        "Which of those were created between 1900 and 1950?"
                    ], 
                    "sql": [
                        "SELECT title FROM paintings UNION SELECT title FROM sculptures", 
                        "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of  paintings and scupltures created between 1900 and 1950?"
                ], 
                "question": " What are the names of both paintings and sculptures created between 1900 and 1950?", 
                "id": 34, 
                "sql": [
                    "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has an id of 222?", 
                        "What are the titles of all paintings and sculpture works created by him?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE artistID  =  222", 
                        "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T2.title FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T1.artistID  =  222"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of all paintings and sculpture works made by the artist whose id is 222?"
                ], 
                "question": " Find the titles of paintings and sculpture works made by the artist whose id is 222?", 
                "id": 35, 
                "sql": [
                    "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T2.title FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T1.artistID  =  222"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings did each artist create?", 
                        "How many did each create before 1900?", 
                        "Who painted the most?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T1.artistID", 
                        "SELECT count(*) ,  T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the artist with the most paintings before 1900?"
                ], 
                "question": " What is the id of the artist who has the highest number of painting works before 1900?", 
                "id": 36, 
                "sql": [
                    "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many sculptures did each artist create?", 
                        "Who created the most?", 
                        "What is their first name?"
                    ], 
                    "sql": [
                        "SELECT T2.sculptorID ,  count(*) FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID", 
                        "SELECT T2.sculptorID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1", 
                        "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name of the sculptor with the greatest number of works?"
                ], 
                "question": " What is the first name of the artist who has the highest number of sculptures?", 
                "id": 37, 
                "sql": [
                    "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the paintings?", 
                        "Which of these have a width less than 600 or a height larger than 800?"
                    ], 
                    "sql": [
                        "SELECT title FROM paintings", 
                        "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of paintings that have a width less than 600 or a height taller taller than 800?"
                ], 
                "question": " What are the names of paintings whose width is less than 600 or height is larger than 800?", 
                "id": 38, 
                "sql": [
                    "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1885 or after 1930?", 
                        "Where are they all located?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930"
                    ]
                }, 
                "paraphrase": [
                    "What locations have works painted before 1885 or after 1930?"
                ], 
                "question": " Which locations have paintings created before 1885 or after 1930?", 
                "id": 39, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the painting ids that have a height larger than 500?", 
                        "Of these, which also are shorter than 2000?"
                    ], 
                    "sql": [
                        "SELECT paintingID FROM paintings WHERE height_mm  >  500", 
                        "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of paintings that are taller than 500 and shorter than 2000?"
                ], 
                "question": " Find the ids of paintings whose height is bigger than 500 and less than 2000?", 
                "id": 40, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are on panels?", 
                        "Which paintings are on canvas?", 
                        "Which locations contain both?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE mediumOn  =  \"panel\"", 
                        "SELECT * FROM paintings WHERE mediumOn  =  \"canvas\"", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "What are the locations that have paintings in the mediums of on panels and on canvas?"
                ], 
                "question": " Which locations have paintings in the mediums of on panel and on canvas?", 
                "id": 41, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1885?", 
                        "Where were these paintings located?", 
                        "Which of these locations also had paintings created after 1930?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  <  1885", 
                        "SELECT LOCATION FROM paintings WHERE YEAR  <  1885", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930"
                    ]
                }, 
                "paraphrase": [
                    "What are the locations that have works painted before 1885 and after 1930?"
                ], 
                "question": " Find the locations that have paintings created before 1885 and after 1930?", 
                "id": 42, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are on oil medium?", 
                        "Of these, which are located in gallery 241?", 
                        "What is their average height and width?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"", 
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                    ]
                }, 
                "paraphrase": [
                    "What is the average height and width of paintings that are oil medium in gallery 241?"
                ], 
                "question": " What are the average height and width of paintings that are oil medium in the place of gallery 241?", 
                "id": 43, 
                "sql": [
                    "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1900?", 
                        "What is the id of the painting with the maximum height?", 
                        "Also what is that height?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  <  1900", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <  1900 ORDER BY height_mm DESC LIMIT 1", 
                        "SELECT height_mm FROM paintings WHERE YEAR  <  1900 ORDER BY height_mm DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the height and id of the tallest painting created before 1900?"
                ], 
                "question": " What are the maximum height and id of paintings painted before 1900?", 
                "id": 44, 
                "sql": [
                    "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Group and order the paintings by year.", 
                        "For each year, what are the maximum height and width?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings GROUP BY YEAR ORDER BY YEAR", 
                        "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR"
                    ]
                }, 
                "paraphrase": [
                    "What are largest height and width dimensions for paintings in each year?"
                ], 
                "question": " What are the maximum height and width of paintings for each year?", 
                "id": 45, 
                "sql": [
                    "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the average height and width of the paintings?", 
                        "Order them by their names.", 
                        "Group them by the painters' ids."
                    ], 
                    "sql": [
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings", 
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings ORDER BY title", 
                        "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "Find the average height and width of paintings grouped by painters and ordered by name"
                ], 
                "question": " What are the average height and width of paintings grouped by painters and ordered by name?", 
                "id": 46, 
                "sql": [
                    "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have at least two paintings?", 
                        "What are their first names?", 
                        "Also, how many works did each artist produce?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2", 
                        "SELECT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2", 
                        "SELECT T1.artistID ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names of all artists who have at least two paintings, and how many works did each create?"
                ], 
                "question": " Find the first names and number of works of all artists who have at least two paintings?", 
                "id": 47, 
                "sql": [
                    "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created less than 4 paintings?", 
                        "When did each one die?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <  4", 
                        "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <  4"
                    ]
                }, 
                "paraphrase": [
                    "When did each artist who created less than 4 paintings die?"
                ], 
                "question": " Find the death year of all artists who have at most 3 paintings?", 
                "id": 48, 
                "sql": [
                    "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the id of all artists who made some scupltures.", 
                        "Of these, who created the fewest?", 
                        "When did he die?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1", 
                        "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "When did the artist who made the fewest sculptures die?"
                ], 
                "question": " Find the death year of the artist who made the least number of sculptures?", 
                "id": 49, 
                "sql": [
                    "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the paintings in gallery 240?", 
                        "Out of those, which is the widest?", 
                        "What is its id and height?"
                    ], 
                    "sql": [
                        "SELECT paintingID FROM paintings WHERE LOCATION  =  'Gallery 240'", 
                        "SELECT paintingID FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1", 
                        "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Tell me the height and id number of the widest painting in gallery 240."
                ], 
                "question": " What are the id and height of the painting with the longest width in gallery 240?", 
                "id": 50, 
                "sql": [
                    "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "When was each painting in gallery 240 created?", 
                        "Which one is the oldest?", 
                        "Select the ids of all paintings older than that one."
                    ], 
                    "sql": [
                        "SELECT the ids OF ALL paintings older THAN that one.", 
                        "SELECT YEAR FROM paintings WHERE LOCATION  =  'Gallery 240'", 
                        "SELECT * FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY YEAR LIMIT 1", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of every painting created before the oldest painting in gallery 240?"
                ], 
                "question": " What are the ids of the paintings created before all of the paintings in gallery 240?", 
                "id": 51, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Show all paintings created after 1900", 
                        "What is their maximum height?", 
                        "What are the ids of the paintings whose height is higher than that maximum height?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  >  1900", 
                        "SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900", 
                        "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)"
                    ]
                }, 
                "paraphrase": [
                    "List the ids of all paintings that are taller than the longest painting created after 1900."
                ], 
                "question": " What are the ids of the paintings whose height is longer than the height of all paintings created after 1900?", 
                "id": 52, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created paintings in oil?", 
                        "How many did each paint?", 
                        "Find the last and first name of the three created the most."
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3"
                    ]
                }, 
                "paraphrase": [
                    "Which artists have the most paintings in oil?"
                ], 
                "question": " Find the top 3 artists who have the biggest number of painting works whose medium is oil?", 
                "id": 53, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Select all of the medium oil paintings"
                    ], 
                    "sql": [
                        "SELECT ALL OF the medium oil paintings S: ORDER them BY date OF creation. S: What ARE their ids ,  locations ,  AND NAMES?", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR", 
                        "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =   \"oil\" ORDER BY YEAR"
                    ]
                }, 
                "paraphrase": [
                    "Order all of the oil paintings by date of creation and list their ids, locations, and titles."
                ], 
                "question": " List the painting id, location and title of the medium oil paintings ordered by year.", 
                "id": 54, 
                "sql": [
                    "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the paintings alphabetically by their titles.", 
                        "Which ones are taller than 1000?", 
                        "Select their title, when were they created and where are they located?"
                    ], 
                    "sql": [
                        "SELECT their title ,  WHEN were they created AND WHERE ARE they located?", 
                        "SELECT * FROM paintings ORDER BY title", 
                        "SELECT * FROM paintings WHERE height_mm  >  1000 ORDER BY title", 
                        "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "List the year, location, and name of all paintings that are taller than 1000 in alphabetical order."
                ], 
                "question": " List the year, location and title of paintings whose height is longer than 1000 ordered by title.", 
                "id": 55, 
                "sql": [
                    "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created paintings?", 
                        "Out of those, who never created a sculpture?", 
                        "What are their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID"
                    ]
                }, 
                "paraphrase": [
                    "What are the first and last names of the artists who did not sculpt but could paint."
                ], 
                "question": " Find the first and last name of artists who have painting but no sculpture work.", 
                "id": 56, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are not on canvas?", 
                        "Which of these were created before 1885?", 
                        "Where are they located?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE mediumOn ! =  \"canvas\"", 
                        "SELECT * FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\"", 
                        "SELECT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "Where do you have paintings that were created before 1885 that are not on canvas?"
                ], 
                "question": " Find the locations that have paintings before 1885 and no work with medium on canvas?", 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\""
                ]
            }
        ], 
        "review_id": ""
    }, 
    "pets_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What information is there on pets?", 
                        "Which pets weigh more than 10?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets", 
                        "SELECT * FROM pets WHERE weight  >  10", 
                        "SELECT count(*) FROM pets WHERE weight  >  10"
                    ]
                }, 
                "paraphrase": [
                    "How many pets have a greater weight than 10?"
                ], 
                "question": " Find the number of pets whose weight is heavier than 10.", 
                "id": 1, 
                "sql": [
                    "SELECT count(*) FROM pets WHERE weight  >  10"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the pets by age", 
                        "How much does each one weigh?", 
                        "What about the first one?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets ORDER BY pet_age", 
                        "SELECT weight FROM pets ORDER BY pet_age", 
                        "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How much does the youngest dog weigh?"
                ], 
                "question": " Find the weight of the youngest dog.", 
                "id": 2, 
                "sql": [
                    "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different types of pets?", 
                        "For each of those types, what is the maximum weight?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT petType FROM pets", 
                        "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
                    ]
                }, 
                "paraphrase": [
                    "List the maximum weight and type for each type of pet."
                ], 
                "question": " Find the maximum weight for each type of pet. List the maximum weight and pet type.", 
                "id": 3, 
                "sql": [
                    "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which pets are owned by students older than 20?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", 
                        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
                    ]
                }, 
                "paraphrase": [
                    "How many pets are owned by students that have an age greater than 20?"
                ], 
                "question": " Find number of pets owned by students who are older than 20.", 
                "id": 4, 
                "sql": [
                    "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the female students?", 
                        "Of those, who has a pet?", 
                        "How many of those have dogs?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE sex  =  'F'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'", 
                        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "How many dog pets are raised by female students?"
                ], 
                "question": " Find the number of dog pets that are raised by female students (with sex F).", 
                "id": 5, 
                "sql": [
                    "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different pet types?", 
                        "How many exist?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT pettype FROM pets", 
                        "SELECT count(DISTINCT pettype) FROM pets"
                    ]
                }, 
                "paraphrase": [
                    "How many different types of pet are there?"
                ], 
                "question": " Find the number of distinct type of pets.", 
                "id": 6, 
                "sql": [
                    "SELECT count(DISTINCT pettype) FROM pets"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "what is the first name of every student?", 
                        "Of those names, which ones correspond to somebody who has a cat?", 
                        "Also, combine those names with those who have a dog."
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.Fname FROM student AS T1", 
                        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names of every student who has a cat or dog as a pet?"
                ], 
                "question": " Find the first name of students who have cat or dog pet.", 
                "id": 7, 
                "sql": [
                    "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have a dog as their type of pet?", 
                        "Who also has a cat?", 
                        "What are their first names?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "What are the students' first names who have both cats and dogs as pets?"
                ], 
                "question": "Find the name of students who have both cat and dog pets.", 
                "id": 8, 
                "sql": [
                    "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have a cat as their pets?", 
                        "What are they majoring in?", 
                        "Also, how old are they?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE stuid NOT IN", 
                        "SELECT major FROM student WHERE stuid NOT IN", 
                        "SELECT major ,  age FROM student WHERE stuid NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What major is every student who does not own a cat as a pet, and also how old are they?"
                ], 
                "question": " Find the major and age of students who do not have a cat pet.", 
                "id": 9, 
                "sql": [
                    "SELECT major ,  age FROM student WHERE stuid NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is every student's id?", 
                        "Of those ids, which correspond to those who own cats as pets?", 
                        "List all the other ids."
                    ], 
                    "sql": [
                        "SELECT stuid FROM student", 
                        "SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of the students who do not own cats as pets?"
                ], 
                "question": " Find the id of students who do not have a cat pet.", 
                "id": 10, 
                "sql": [
                    "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have dogs?", 
                        "Of those, who does not own a cat?", 
                        "What are their first names and ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name of every student who has a dog but does not have a cat?"
                ], 
                "question": " Find the first name and age of students who have a dog but do not have a cat as a pet.", 
                "id": 11, 
                "sql": [
                    "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who is the youngest pet?", 
                        "What type are they?", 
                        "Also, how much do they weigh?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets ORDER BY pet_age LIMIT 1", 
                        "SELECT pettype FROM pets ORDER BY pet_age LIMIT 1", 
                        "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What type of pet is the youngest animal, and how much does it weigh?"
                ], 
                "question": " Find the type and weight of the youngest pet.", 
                "id": 12, 
                "sql": [
                    "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are ids of every pet?", 
                        "For those, which refer to pets older than 1?", 
                        "Also, how much do they weigh?"
                    ], 
                    "sql": [
                        "SELECT petid FROM pets", 
                        "SELECT petid FROM pets WHERE pet_age  >  1", 
                        "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id and weight of every pet who is older than 1?"
                ], 
                "question": " Find the id and weight of all pets whose age is older than 1.", 
                "id": 13, 
                "sql": [
                    "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different pet types?", 
                        "For each of those, what is the maximum age?", 
                        "What about the average age?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT pettype FROM pets", 
                        "SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype", 
                        "SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype"
                    ]
                }, 
                "paraphrase": [
                    "What is the average and maximum age for each pet type?"
                ], 
                "question": " Find the average and maximum age for each type of pet.", 
                "id": 14, 
                "sql": [
                    "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What information is there on pets?", 
                        "For each pet type, what is the average weight?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets", 
                        "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
                    ]
                }, 
                "paraphrase": [
                    "What is the average weight for each type of pet?"
                ], 
                "question": " Find the average weight for each pet type.", 
                "id": 15, 
                "sql": [
                    "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have pets?", 
                        "What are the different first names?", 
                        "Also, what are their ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
                    ]
                }, 
                "paraphrase": [
                    "What are the different first names and ages of the students who do have pets?"
                ], 
                "question": " Find the first name and age of students who have a pet.", 
                "id": 16, 
                "sql": [
                    "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have pets?", 
                        "Of those, whose last name is smith?", 
                        "What is their pet's id?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", 
                        "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the pet owned by the student whose last name is 'Smith'?"
                ], 
                "question": " Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", 
                "id": 17, 
                "sql": [
                    "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which of the students have pets?", 
                        "How many pets does each of them have?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
                    ]
                }, 
                "paraphrase": [
                    "For students who have pets, how many pets does each student have?"
                ], 
                "question": " Find the number of pets for each student who has any pet and student id.", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the first name and sex of each student?", 
                        "Which of those belong to somebody who has more than one pet?"
                    ], 
                    "sql": [
                        "SELECT T1.fname ,  T1.sex FROM student AS T1", 
                        "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name and gender of the all the students who have more than one pet?"
                ], 
                "question": " Find the first name and gender of student who have more than one pet.", 
                "id": 19, 
                "sql": [
                    "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the id of the three-year old cat?", 
                        "Who is the owner of that cat?", 
                        "What is their last name?"
                    ], 
                    "sql": [
                        "SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", 
                        "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What is the last name of the student who has a cat that is 3 years old?"
                ], 
                "question": " Find the last name of the student who has a cat that is age 3.", 
                "id": 20, 
                "sql": [
                    "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students do not own any pets?", 
                        "What is their average age?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE stuid NOT IN", 
                        "SELECT avg(age) FROM student WHERE stuid NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the average age for all students who do not own any pets?"
                ], 
                "question": " Find the average age of students who do not have any pet.", 
                "sql": [
                    "SELECT avg(age) FROM student WHERE stuid NOT IN"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "flight_2": {
        "label_id": "", 
        "data": [], 
        "review_id": ""
    }, 
    "hr_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What are the first names of all employees?", 
                        "Also, what are their department names?"
                    ], 
                    "sql": [
                        "SELECT first_name FROM employees", 
                        "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the first name and department name of all employees?"
                ], 
                "question": " Display the first name and department name for each employee.", 
                "id": 1, 
                "sql": [
                    "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees earn less than 6000?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE salary  <  6000", 
                        "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and salaries for any employees earning less than 6000?"
                ], 
                "question": " List the full name (first and last name), and salary for those employees who earn below 6000.", 
                "id": 2, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "List the first name and department id for all employees?", 
                        "Of these, include the ones for employees with last name McEwen."
                    ], 
                    "sql": [
                        "SELECT first_name ,  department_id FROM employees", 
                        "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names and department numbers for employees with last name McEwen?"
                ], 
                "question": " Display the first name, and department number for all employees whose last name is \"McEwen\".", 
                "id": 3, 
                "sql": [
                    "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Return all the information for all employees.", 
                        "Of those, which have no department number?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE department_id IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are all the employees without a department number?"
                ], 
                "question": " Return all the information for all employees without any department number.", 
                "id": 4, 
                "sql": [
                    "SELECT * FROM employees WHERE department_id IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about all the departments?", 
                        "Of those, what is the information about the Marketing department?"
                    ], 
                    "sql": [
                        "SELECT * FROM  departments", 
                        "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the Marketing department?"
                ], 
                "question": " Display all the information about the department Marketing.", 
                "id": 5, 
                "sql": [
                    "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information on employees?", 
                        "Of those, which do not have the letter M in their first names?", 
                        "What were their hire dates?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
                    ]
                }, 
                "paraphrase": [
                    "On what dates were employees without the letter M in their first names hired?"
                ], 
                "question": " when is the hire date for those employees whose first name does not containing the letter M?", 
                "id": 6, 
                "sql": [
                    "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information on employees?", 
                        "Of those, which do not have the letter M in their first names?", 
                        "What were their full names, hire dates, salaries, and department numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?"
                ], 
                "question": " display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", 
                "id": 7, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees do not have the letter M in their first names?", 
                        "What were their full names, hire dates, salaries, and department numbers?", 
                        "Order these by ascending department number."
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?"
                ], 
                "question": " display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", 
                "id": 8, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employees' phone numbers?", 
                        "Return only those for employees with salaries between 8000 and 12000."
                    ], 
                    "sql": [
                        "SELECT phone_number FROM employees", 
                        "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
                    ]
                }, 
                "paraphrase": [
                    "Return the phone numbers of employees with salaries between 8000 and 12000."
                ], 
                "question": " what is the phone number of employees whose salary is in the range of 8000 and 12000?", 
                "id": 9, 
                "sql": [
                    "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the employees with salaries between 8000 and 12000?", 
                        "Of those, who has a commission that is not null or department id which is not equal to 40?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000", 
                        "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL OR  department_id ! =  40"
                    ]
                }, 
                "paraphrase": [
                    "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40."
                ], 
                "question": " display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.", 
                "id": 10, 
                "sql": [
                    "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL OR  department_id ! =  40"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names and salaries of all employees?", 
                        "Of those, which have null comissions?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name ,  salary FROM  employees", 
                        "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "Return the full names and salaries of employees with null commissions."
                ], 
                "question": " What are the full name (first and last name) and salary for all employees who does not have any value for commission?", 
                "id": 11, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employees with first names that end with m?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name LIKE '%m'", 
                        "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
                    ]
                }, 
                "paraphrase": [
                    "Return the full names and salaries for employees with first names that end with the letter m."
                ], 
                "question": " Display the first and last name, and salary for those employees whose first name is ending with the letter m.", 
                "id": 12, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees were hired between November 5th, 2007 and July 5th, 2009?", 
                        "What are their job ids and hire dates?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", 
                        "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?"
                ], 
                "question": " Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.", 
                "id": 13, 
                "sql": [
                    "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all employees?", 
                        "Of those, who are in department 70 or 90?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names of employees who with in department 70 or 90?"
                ], 
                "question": " What are the first and last name for those employees who works either in department 70 or 90?", 
                "id": 14, 
                "sql": [
                    "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the employees who are working under a manager?", 
                        "What are their salaries and manager numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE manager_id IS NOT NULL", 
                        "SELECT salary ,  manager_id FROM employees WHERE manager_id IS NOT NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the salaries and manager ids for employees who have managers?"
                ], 
                "question": " Find the salary and manager number for those employees who is working under a manager.", 
                "id": 15, 
                "sql": [
                    "SELECT salary ,  manager_id FROM employees WHERE manager_id IS NOT NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about employees?", 
                        "Of those, which were hired before 2002-06-21?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees hired before June 21, 2002?"
                ], 
                "question": " display all the details from Employees table for those employees who was hired before 2002-06-21.", 
                "id": 16, 
                "sql": [
                    "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about employees with a D, S or N in their first name?", 
                        "Order those by decreasing salary."
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%'", 
                        "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%' ORDER BY salary DESC"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees with D, S, or N in their first name, ordered by salary descending?"
                ], 
                "question": " display all the information for all employees who have the letters D, S, or N in their first name and also arrange the result in descending order by salary.", 
                "id": 17, 
                "sql": [
                    "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%' ORDER BY salary DESC"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the employees?", 
                        "Of those, who was hired after September 7th, 1987?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
                    ]
                }, 
                "paraphrase": [
                    "Which employees were hired after September 7th, 1987?"
                ], 
                "question": " display those employees who joined after 7th September, 1987.", 
                "id": 18, 
                "sql": [
                    "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the job titles?", 
                        "Of those, which correspond to jobs with salaries over 9000?"
                    ], 
                    "sql": [
                        "SELECT job_title FROM jobs", 
                        "SELECT job_title FROM jobs WHERE min_salary  >  9000"
                    ]
                }, 
                "paraphrase": [
                    "Which job titles correspond to jobs with salaries over 9000?"
                ], 
                "question": " display the job title of jobs which minimum salary is greater than 9000.", 
                "id": 19, 
                "sql": [
                    "SELECT job_title FROM jobs WHERE min_salary  >  9000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about jobs with max salary between 12000 and 18000?", 
                        "What are the job titles and differences between max and min salaries for those jobs?"
                    ], 
                    "sql": [
                        "SELECT * FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", 
                        "SELECT job_title ,  max_salary-min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
                    ]
                }, 
                "paraphrase": [
                    "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?"
                ], 
                "question": " display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", 
                "id": 20, 
                "sql": [
                    "SELECT job_title ,  max_salary-min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the emails of employees who have no commission percentage?", 
                        "Of those, which have salaries between 7000 and 12000?", 
                        "Of those, which work in the department with id number 50?"
                    ], 
                    "sql": [
                        "SELECT email FROM employees WHERE commission_pct IS NULL", 
                        "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000", 
                        "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
                    ]
                }, 
                "paraphrase": [
                    "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?"
                ], 
                "question": " display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.", 
                "id": 21, 
                "sql": [
                    "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the job history information?", 
                        "What are the unique employee ids?", 
                        "What are the latest end dates corresponding to each one?"
                    ], 
                    "sql": [
                        "SELECT * FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id", 
                        "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for each employee and final dates of employment at their last job?"
                ], 
                "question": " display the employee ID for each employee and the date on which he ended his previous job.", 
                "id": 22, 
                "sql": [
                    "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different department ids?", 
                        "Of these, which had more than 10 employees with commissions?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees GROUP BY department_id", 
                        "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
                    ]
                }, 
                "paraphrase": [
                    "What are the department ids for which more than 10 employees had a commission?"
                ], 
                "question": " display those departments where more than ten employees work who got a commission percentage.", 
                "id": 23, 
                "sql": [
                    "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the manager ids of managers who manage 4 or more employees?", 
                        "What are their department ids?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id)  >= 4", 
                        "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                    ]
                }, 
                "paraphrase": [
                    "What are department ids for departments with managers managing more than 3 employees?"
                ], 
                "question": " Find the ids of the departments where any manager is managing 4 or more employees.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for employees, by department id?", 
                        "What is this if employees without commission percentages are excluded?"
                    ], 
                    "sql": [
                        "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id", 
                        "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What is the average salary of employees who have a commission percentage that is not null?"
                ], 
                "question": " display the average salary of employees for each department who gets a commission percentage.", 
                "id": 25, 
                "sql": [
                    "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many cities are there?", 
                        "Count the cities by their country ids."
                    ], 
                    "sql": [
                        "SELECT COUNT(*) FROM locations", 
                        "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
                    ]
                }, 
                "paraphrase": [
                    "Give the country id and corresponding count of cities in each country."
                ], 
                "question": " display the country ID and number of cities for each country.", 
                "id": 26, 
                "sql": [
                    "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are job ids for jobs that lasted more than 300 days?", 
                        "Of these, which have been done more than once?"
                    ], 
                    "sql": [
                        "SELECT job_id FROM job_history WHERE end_date-start_date  > 300", 
                        "SELECT job_id FROM job_history WHERE end_date-start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids for jobs done more than once for a period of more than 300 days?"
                ], 
                "question": " display job ID for those jobs that were done by two or more for more than 300 days.", 
                "id": 27, 
                "sql": [
                    "SELECT job_id FROM job_history WHERE end_date-start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the different employee ids in the job history table?", 
                        "Of these, which have had two or more jobs?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for employees who have held two or more jobs?"
                ], 
                "question": " display the ID for those employees who did two or more jobs in the past.", 
                "id": 28, 
                "sql": [
                    "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employee ids?", 
                        "Also, what are the names of the countries that they work in?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees", 
                        "SELECT employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                    ]
                }, 
                "paraphrase": [
                    "What are all the employee ids and the names of the countries in which they work?"
                ], 
                "question": " Find employee with ID and name of the country presently where (s)he is working.", 
                "id": 29, 
                "sql": [
                    "SELECT employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many employees are there?", 
                        "Group these counts by department name."
                    ], 
                    "sql": [
                        "SELECT COUNT(*) FROM employees", 
                        "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of each department and the number of employees in each."
                ], 
                "question": " display the department name and number of employees in each of the department.", 
                "id": 30, 
                "sql": [
                    "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the job history information?", 
                        "What is all the job history information for employees making over 12000?"
                    ], 
                    "sql": [
                        "SELECT * FROM  job_history", 
                        "SELECT T1.* FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
                    ]
                }, 
                "paraphrase": [
                    "What is all the job history info done by employees earning a salary greater than or equal to 12000?"
                ], 
                "question": " Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.* FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for all employees?", 
                        "What are the average salaries by job title?"
                    ], 
                    "sql": [
                        "SELECT AVG(salary) FROM employees", 
                        "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
                    ]
                }, 
                "paraphrase": [
                    "What is the average salary for each job title?"
                ], 
                "question": " display job title and average salary of employees.", 
                "id": 32, 
                "sql": [
                    "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the salary of employee with id 163?", 
                        "What is all employee information for employees making more than employee 163?", 
                        "What are the full names of these employees?"
                    ], 
                    "sql": [
                        "SELECT salary FROM employees WHERE employee_id = 163", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT first_name ,  last_name FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "Provide the full names of employees earning more than the employee with id 163."
                ], 
                "question": " What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", 
                "id": 33, 
                "sql": [
                    "SELECT first_name ,  last_name FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all employees?", 
                        "What are these numbers by department id?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees", 
                        "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What is the minimum salary in each department?"
                ], 
                "question": " return the smallest salary for every departments.", 
                "id": 34, 
                "sql": [
                    "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all departments?", 
                        "What information is available for employees who make that much?", 
                        "What are their first and last names and department ids?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees GROUP BY department_id", 
                        "SELECT * FROM employees WHERE salary IN", 
                        "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and department ids for the lowest paid employees across all departments."
                ], 
                "question": " Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", 
                "id": 35, 
                "sql": [
                    "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary across all employees?", 
                        "Which employees make more than that?", 
                        "What are their ids?"
                    ], 
                    "sql": [
                        "SELECT AVG(salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for employees who make more than the average?"
                ], 
                "question": " Find the employee id for all employees who earn more than the average salary.", 
                "id": 36, 
                "sql": [
                    "SELECT employee_id FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the id for the employee whose first name is Payam?", 
                        "Which employees' manager is him?", 
                        "What are their ids and salaries?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees WHERE first_name  =  'Payam'", 
                        "SELECT * FROM employees WHERE manager_id  = ", 
                        "SELECT employee_id ,  salary FROM employees WHERE manager_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids of employees who report to Payam, and what are their salaries?"
                ], 
                "question": " display the employee id and salary of all employees who report to Payam (first name).", 
                "id": 37, 
                "sql": [
                    "SELECT employee_id ,  salary FROM employees WHERE manager_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the name of all departments.", 
                        "What about those that have at least one employee."
                    ], 
                    "sql": [
                        "SELECT DISTINCT department_name FROM departments", 
                        "SELECT DISTINCT department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of departments that have at least one employee."
                ], 
                "question": " find the name of all departments that do actually have one or more employees assigned to them.", 
                "id": 38, 
                "sql": [
                    "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the manager ids of the different departments?", 
                        "What is all the employee information regarding these managers?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM departments", 
                        "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information regarding employees who are managers?"
                ], 
                "question": " get the details of employees who manage a department.", 
                "id": 39, 
                "sql": [
                    "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about all the departments?", 
                        "Of these, what information pertains to the Marketing department?"
                    ], 
                    "sql": [
                        "SELECT * FROM  departments", 
                        "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the Marketing department?"
                ], 
                "question": " display all the information about the department Marketing.", 
                "id": 40, 
                "sql": [
                    "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of employees who have job history available?", 
                        "Which of them have held two or more jobs?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for those who had two or more jobs."
                ], 
                "question": " display the ID for those employees who did two or more jobs in the past.", 
                "id": 41, 
                "sql": [
                    "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the manager ids for managers who are in charge of 4 or more employees?", 
                        "What are the distinct department ids for the departments they belong to?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id)  >= 4", 
                        "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                    ]
                }, 
                "paraphrase": [
                    "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?"
                ], 
                "question": " What are the unique ids of those departments where any manager is managing 4 or more employees.", 
                "id": 42, 
                "sql": [
                    "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for each job?", 
                        "What are the job ids for jobs that average more than 8000?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM employees GROUP BY job_id", 
                        "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids corresponding to jobs with average salary above 8000?"
                ], 
                "question": " Find the job ID for those jobs which average salary is above 8000.", 
                "id": 43, 
                "sql": [
                    "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the employee ids for employees in department 80?", 
                        "Also, what are their job titles?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees WHERE department_id = 80", 
                        "SELECT T1.employee_id ,  T2.job_title FROM employees T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
                    ]
                }, 
                "paraphrase": [
                    "what are the employee ids and job titles for employees in department 80?"
                ], 
                "question": " display the employee ID and job name for all those jobs in department 80.", 
                "id": 44, 
                "sql": [
                    "SELECT T1.employee_id ,  T2.job_title FROM employees T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the employees working in the Finance department?", 
                        "What are their first names and job ids?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", 
                        "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
                    ]
                }, 
                "paraphrase": [
                    "Give the first name and job id for all employees in the Finance department."
                ], 
                "question": " What is the first name and job id for all employees in the Finance department?", 
                "id": 45, 
                "sql": [
                    "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all employees?", 
                        "Which employees make more than that?", 
                        "Of those, which make less than 2500?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT * FROM employees WHERE salary BETWEEN"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information regarding employees with salaries above the minimum and under 2500?"
                ], 
                "question": " display all the information of the employees whose salary if within the range of smallest salary and 2500.", 
                "id": 46, 
                "sql": [
                    "SELECT * FROM employees WHERE salary BETWEEN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids with managers who have ids between 100 and 200?", 
                        "What is all the information about employees who do not work in those departments?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200", 
                        "SELECT * FROM employees WHERE department_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?"
                ], 
                "question": " Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.", 
                "id": 47, 
                "sql": [
                    "SELECT * FROM employees WHERE department_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments that have someone with the first name Clara?", 
                        "What is all the information about employees in those departments?", 
                        "What are the full names and hire dates of those employees?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name  =  \"Clara\"", 
                        "SELECT * FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and hire dates for employees in the same department as someone with the first name Clara?"
                ], 
                "question": " display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", 
                "id": 48, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments that have someone with the first name Clara?", 
                        "What is all the information about employees in those departments?", 
                        "What are the full names and hire dates of those employees?", 
                        "Of those, who does not have the first name Clara?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name  =  \"Clara\"", 
                        "SELECT * FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?"
                ], 
                "question": " display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", 
                "id": 49, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments with employees who have the letter T in their first name?", 
                        "Who are the employees in those departments?", 
                        "What are their ids and full names?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name LIKE '%T%'", 
                        "SELECT * FROM employees WHERE department_id IN", 
                        "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?"
                ], 
                "question": " display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019.", 
                "id": 50, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary across all employees?", 
                        "Which employees make more than that?", 
                        "Of those, which work in departments with employees who have the letter J in their first name?", 
                        "What are their ids, full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT AVG (salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?"
                ], 
                "question": " display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", 
                "id": 51, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary for someone with the title MK_MAN?", 
                        "Which employees make less than that?", 
                        "What are their employee ids and job ids?"
                    ], 
                    "sql": [
                        "SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN'", 
                        "SELECT * FROM employees WHERE salary  < ", 
                        "SELECT employee_id ,  job_id FROM employees WHERE salary  < "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?"
                ], 
                "question": " display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", 
                "id": 52, 
                "sql": [
                    "SELECT employee_id ,  job_id FROM employees WHERE salary  < "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the highest salary for someone with the title PU_MAN?", 
                        "Which employees make more than that?", 
                        "What are their employee ids, full names, and job ids?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN'", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?"
                ], 
                "question": " display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", 
                "id": 53, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments which have more than 2 employees?", 
                        "What is the sum of the salaries within each of those departments?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees GROUP BY department_id HAVING count(*)  >=  2", 
                        "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
                    ]
                }, 
                "paraphrase": [
                    "What are total salaries and department id for each department that has more than 2 employees?"
                ], 
                "question": " display the department id and the total salary for those departments which contains at least two employees.", 
                "id": 54, 
                "sql": [
                    "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employee ids for employees who have had a job in the past?", 
                        "What is all the information for employees who are not a part of those?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history GROUP BY employee_id", 
                        "SELECT * FROM employees WHERE employee_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees who have never had a job in the past?"
                ], 
                "question": " display all the information of those employees who did not have any job in the past.", 
                "id": 55, 
                "sql": [
                    "SELECT * FROM employees WHERE employee_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the max salary in each department?", 
                        "What are the first name, last name, salary and department id for employees who make the most in their departments?"
                    ], 
                    "sql": [
                        "SELECT MAX(salary) FROM employees GROUP BY department_id", 
                        "SELECT first_name ,   last_name ,   salary ,  department_id FROM employees GROUP BY department_id HAVING salary  =  MAX(salary)"
                    ]
                }, 
                "paraphrase": [
                    "What are the department ids, full names, and salaries for employees who make the most in their departments?"
                ], 
                "question": " display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", 
                "id": 56, 
                "sql": [
                    "SELECT first_name ,   last_name ,   salary ,  department_id FROM employees GROUP BY department_id HAVING salary  =  MAX(salary)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the first and last names for each employee?", 
                        "Also, what are their department names?", 
                        "Also, what are their city and state provinces?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT T1.first_name ,  T1.last_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", 
                        "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names, departments, cities, and state provinces for each employee?"
                ], 
                "question": " display the first and last name, department, city, and state province for each employee.", 
                "id": 57, 
                "sql": [
                    "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names of each employee?", 
                        "Also, what cities are their departments in?", 
                        "Of these, which have the letter Z in their first name?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", 
                        "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and cities of employees who have the letter Z in their first names?"
                ], 
                "question": " display those employees who contain a letter z to their first name and also display their last name, city.", 
                "id": 58, 
                "sql": [
                    "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of each department?", 
                        "Also, in what city and state province are they in?"
                    ], 
                    "sql": [
                        "SELECT department_name FROM departments", 
                        "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the department names, cities, and state provinces for each department?"
                ], 
                "question": " display the department name, city, and state province for each department.", 
                "id": 59, 
                "sql": [
                    "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names and ids for all employees?", 
                        "Also, what are the names of the countries that they work in?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name ,  employee_id FROM employees", 
                        "SELECT first_name ,  last_name ,  employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                    ]
                }, 
                "paraphrase": [
                    "What the full names, ids of each employee and the name of the country they are in?"
                ], 
                "question": " display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", 
                "id": 60, 
                "sql": [
                    "SELECT first_name ,  last_name ,  employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different department names?", 
                        "How many employees work in each one?"
                    ], 
                    "sql": [
                        "SELECT department_name FROM departments", 
                        "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
                    ]
                }, 
                "paraphrase": [
                    "What are the department names and how many employees work in each of them?"
                ], 
                "question": " display the department name and number of employees in each of the department.", 
                "id": 61, 
                "sql": [
                    "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the employees working in the city of London?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", 
                        "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
                    ]
                }, 
                "paraphrase": [
                    "What are full names and salaries of employees working in the city of London?"
                ], 
                "question": " display the full name (first and last name), and salary of those employees who working in any department located in London.", 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "boat_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "Return all details about the sailors", 
                        "Which of those pertain to those above age 30?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors", 
                        "SELECT * FROM Sailors WHERE age  >  30"
                    ]
                }, 
                "paraphrase": [
                    "What can you tell me about sailors who are older than age 30?"
                ], 
                "question": " Return all details of sailors who are older than 30.", 
                "id": 1, 
                "sql": [
                    "SELECT * FROM Sailors WHERE age  >  30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of every sailor?", 
                        "Of those, which are for sailors younger than 30?", 
                        "Also, tell me their ages."
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT name FROM Sailors WHERE age  <  30", 
                        "SELECT name ,  age FROM Sailors WHERE age  <  30"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and age of every sailor who is younger than age 30?"
                ], 
                "question": " Return name and age for sailors who are younger than 30.", 
                "id": 2, 
                "sql": [
                    "SELECT name ,  age FROM Sailors WHERE age  <  30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me all the information about the reservations.", 
                        "Which of those reservations were created by a sailor with an id of 1?", 
                        "What are the different ids of the boats reserved by him?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves", 
                        "SELECT * FROM Reserves WHERE sid = 1", 
                        "SELECT DISTINCT bid FROM Reserves WHERE sid = 1"
                    ]
                }, 
                "paraphrase": [
                    "What are the different boat ids reserved by the sailor whose id is 1?"
                ], 
                "question": " Find boats reserved by Sailor with id 1.", 
                "id": 3, 
                "sql": [
                    "SELECT DISTINCT bid FROM Reserves WHERE sid = 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the sailors?", 
                        "Which of those reserved boat 102?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the sailor who reserved boat 102?"
                ], 
                "question": " Who reserved boat 102?", 
                "id": 4, 
                "sql": [
                    "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Return all information about the reserved boats.", 
                        "What are their different ids?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves", 
                        "SELECT DISTINCT bid FROM Reserves"
                    ]
                }, 
                "paraphrase": [], 
                "question": " Return the unique boat ids (bid) of all reserved boats.", 
                "id": 5, 
                "sql": [
                    "SELECT DISTINCT bid FROM Reserves"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of every sailor?", 
                        "Which of those contain the letter e?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT name FROM Sailors WHERE name LIKE '%e%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of every sailor whose name contains the letter e?"
                ], 
                "question": " What is the name of sailors whose names contain letter e?", 
                "id": 6, 
                "sql": [
                    "SELECT name FROM Sailors WHERE name LIKE '%e%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different ids of every sailor?", 
                        "Which of those refer to sailors who are not the youngest?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT sid FROM Sailors", 
                        "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);"
                    ]
                }, 
                "paraphrase": [
                    "What is the different id of every sailor who is not the youngest?"
                ], 
                "question": " return the unique ids of sailors who are older than any sailors.", 
                "id": 7, 
                "sql": [
                    "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sailors have a rating greater than 7?", 
                        "How old are they?", 
                        "What are the names of sailors who are older than at least one of them?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors WHERE rating  >  7", 
                        "SELECT age FROM Sailors WHERE rating  >  7", 
                        "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);"
                    ]
                }, 
                "paraphrase": [
                    "What are the different names of sailors who are older than some other sailor with a rating larger than 7?"
                ], 
                "question": " Return the unique names of sailors who are older than any sailors whose rating is larger than 7.", 
                "id": 8, 
                "sql": [
                    "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different sailor names?", 
                        "Also, what are their different ids?", 
                        "Which of those are for people who reserved at least one boat?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM Sailors", 
                        "SELECT DISTINCT name ,  sid FROM Sailors", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and id of every sailor who reserved one or more boats?"
                ], 
                "question": "Find the name and id of the sailors who reserved at least one boat?", 
                "id": 9, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different sailors' names and ids?", 
                        "Which of those reserved a boat?", 
                        "Who reserved more than one?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors", 
                        "SELECT DISTINCT t1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the different names of sailors who reserved two or more boats?"
                ], 
                "question": " Find the id and name of the sailors who reserved more than one boat.", 
                "id": 10, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "Also what are the ids for the ones that are red?", 
                        "What are the different ids of the sailors who reserved them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM boats WHERE color  =  'red'", 
                        "SELECT bid FROM boats WHERE color  = 'red' OR color  =  'blue'", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the sids for sailors who reserved red or blue boats?"
                ], 
                "question": " Find the id of Sailors (sid) that reserved red or blue boat.", 
                "id": 11, 
                "sql": [
                    "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "Also, what about for the ones that are red?", 
                        "What are the different ids and names of the sailors who reserved them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM boats WHERE color  =  'red'", 
                        "SELECT bid FROM boats WHERE color  = 'red' OR color  =  'blue'", 
                        "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of sailors who reserved red or blue boats?"
                ], 
                "question": " Find the name and id of Sailors (sid) that reserved red or blue boat.", 
                "id": 12, 
                "sql": [
                    "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the different blue boats?", 
                        "What are the ids of the sailors who reserved them?", 
                        "What are the ids of the sailors who also reserved red boats?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT bid FROM RESERVES WHERE color  =  'blue'", 
                        "SELECT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red'", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of sailors who reserved red and blue boats?"
                ], 
                "question": " Find the id of Sailors (sid) that reserved red and blue boat.", 
                "id": 13, 
                "sql": [
                    "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "What about for the ones that are red?", 
                        "What are the different ids and names of the sailors who reserved one of each?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"red\"", 
                        "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of sailors who reserved red and blue boats?"
                ], 
                "question": " Find the name and id of Sailors (sid) that reserved red and blue boat.", 
                "id": 14, 
                "sql": [
                    "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the sailor ids?", 
                        "Which of those are listed as reserving a boat?", 
                        "What are the rest of them?"
                    ], 
                    "sql": [
                        "SELECT sid FROM Sailors", 
                        "SELECT sid FROM Reserves", 
                        "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of sailors who have not reserved a boat?"
                ], 
                "question": " What is the ids of sailors that haven\u2019t reserved a boat?", 
                "id": 15, 
                "sql": [
                    "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the all the sailor ids and names?", 
                        "Which of those are listed as having boat reservations?", 
                        "Tell me all the other ones."
                    ], 
                    "sql": [
                        "SELECT sid ,  name FROM Sailors", 
                        "SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of all sailors who do not have boat reservations?"
                ], 
                "question": " what is the name and id of sailors who do not have a reservation of a boat?", 
                "id": 16, 
                "sql": [
                    "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sailors have boat reservations?", 
                        "What are all the information of the sailors do not?"
                    ], 
                    "sql": [
                        "SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT * FROM SAILORS EXCEPT SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about sailors who do not have boat reservations?"
                ], 
                "question": " Find all information for the sailors who do not have a reservation of a boat?", 
                "id": 17, 
                "sql": [
                    "SELECT * FROM Sailors EXCEPT SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What can you tell me about the reservation for the boat with id 103?", 
                        "What is the id of the sailors who reserved it?", 
                        "What are the different names of those sailors?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves WHERE bid  =  103", 
                        "SELECT sid FROM Reserves WHERE bid  =  103", 
                        "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103"
                    ]
                }, 
                "paraphrase": [
                    "Find the name of the sailors who reserved boat with id 103."
                ], 
                "question": " What is the name of the sailors who reserved boat with id 103?", 
                "id": 18, 
                "sql": [
                    "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings of all sailors named Luis?", 
                        "What is the smallest of those?", 
                        "What is name of all sailors who have a higher rating than that?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT min(rating) FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')"
                    ]
                }, 
                "paraphrase": [
                    "What are the sailors' names, the ones whose rating is higher than any sailor named Luis?"
                ], 
                "question": " What is the name of all sailors whose rating is higher than any sailor named Luis?", 
                "id": 19, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings of every sailor named Luis?", 
                        "What is the maximum of those?", 
                        "What are the names of those with a higher rating than that?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT max(rating) FROM sailors WHERE name  =  'Luis'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all sailors with a higher rating than every sailor named Luis?"
                ], 
                "question": " What is the name of all sailors whose rating is higher than all sailors named Luis?", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different names and sailor ids?", 
                        "Which of those refer to those who reserved a boat?", 
                        "Of those, which refer to  a sailor with a rating of at least 3?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name ,  sid FROM Sailors", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >=  3"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of all sailors who have a rating of at least 3 and reserved a boat?"
                ], 
                "question": " what is the name and id of every sailor who has a rating greater than 2 and reserved a boat.", 
                "id": 21, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the age of every sailor?", 
                        "WHat is the age of the oldest one?", 
                        "What is their name?"
                    ], 
                    "sql": [
                        "SELECT age FROM Sailors", 
                        "SELECT max(age) FROM Sailors", 
                        "SELECT name ,  max(age) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and age of the sailor with maximum age?"
                ], 
                "question": " Find the name and age of the oldest sailor.", 
                "id": 22, 
                "sql": [
                    "SELECT name ,  age FROM Sailors WHERE age  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me what information you have on sailors", 
                        "How many sailors are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors", 
                        "SELECT COUNT(*) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "How many sailors exist?"
                ], 
                "question": " how many sailors in total?", 
                "id": 23, 
                "sql": [
                    "SELECT COUNT(*) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is age of every sailor?", 
                        "What is the age of all the sailors with a rating of 7?", 
                        "What is their average age?"
                    ], 
                    "sql": [
                        "SELECT age FROM Sailors", 
                        "SELECT age FROM Sailors WHERE rating  =  7", 
                        "SELECT AVG(age) FROM Sailors WHERE rating  =  7"
                    ]
                }, 
                "paraphrase": [
                    "What is average age of all sailors who have a rating of 7?"
                ], 
                "question": " What is the average age of sailors whose rating is 7?", 
                "id": 24, 
                "sql": [
                    "SELECT AVG(age) FROM Sailors WHERE rating  =  7"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What can you tell me about sailors whose name starts with D?", 
                        "What are their names?", 
                        "How many different ones are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors WHERE name LIKE 'D%'", 
                        "SELECT name FROM Sailors WHERE name LIKE 'D%'", 
                        "SELECT COUNT(DISTINCT name) FROM Sailors WHERE name LIKE 'D%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the count of the sailors whose name starts with letter D?"
                ], 
                "question": " How many unique sailors whose name starts with letter D exist?", 
                "id": 25, 
                "sql": [
                    "SELECT COUNT(DISTINCT name) FROM Sailors WHERE name LIKE 'D%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average rating for sailors?", 
                        "Also, what is their maximum age?"
                    ], 
                    "sql": [
                        "SELECT AVG(rating) ,  MAX(age) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "Find the average rating and largest age for the sailors"
                ], 
                "question": " What are the average rating and max age of all sailors?", 
                "id": 26, 
                "sql": [
                    "SELECT AVG(rating) ,  MAX(age) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the boat ids for reservations?", 
                        "How many reservations exist for each one of them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat?"
                ], 
                "question": " Find the number of reservations for each boat.", 
                "id": 27, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the boat ids listed for reservations?", 
                        "Which of those have an id greater than 50?", 
                        "Also find how many reservations exist for each of those."
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves", 
                        "SELECT bid FROM Reserves WHERE bid  >  50", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat with an id greater than 50?"
                ], 
                "question": " Find the number of reservations for each boat with id greater than 50.", 
                "id": 28, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many reservations exist for each boat?", 
                        "Which of these refer to boats that have more than 1 reservation?"
                    ], 
                    "sql": [
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat that has more than 1 reservation already?"
                ], 
                "question": " Find the number of reservations for each boat with more than 1 reservation.", 
                "id": 29, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the boat ids for all boats reserved by a sailor with an id greater than 1?", 
                        "How many reservations for each of those exist?"
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves WHERE sid  >  1", 
                        "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations for each boat did the sailors with an id greater than 1 make?"
                ], 
                "question": " Find the number of reservations by sailors with id greater than 1 for each boat.", 
                "id": 30, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "List the sids of the sailors who reserved a boat.", 
                        "Of those, who reserved a red boat?", 
                        "Of those, for each rating, what is the average age?"
                    ], 
                    "sql": [
                        "SELECT sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid;", 
                        "SELECT sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT avg(T1.age) ,  T1.rating FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating"
                    ]
                }, 
                "paraphrase": [
                    "What are the rating and average age for sailors who reserved red boats for each rating?"
                ], 
                "question": " What is the rating and average age for sailors who have reserved red boat grouped by rating?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings and age of every sailor?", 
                        "Also what are their names?", 
                        "Sort them by rating, then by age for tiebreakers."
                    ], 
                    "sql": [
                        "SELECT rating ,  age FROM Sailors", 
                        "SELECT name ,  rating ,  age FROM Sailors", 
                        "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age"
                    ]
                }, 
                "paraphrase": [
                    "What is the name, rating, and age for every sailor? And order them by rating and age."
                ], 
                "question": " Find the name, rating and age of all sailors ordered by rating and age.", 
                "id": 32, 
                "sql": [
                    "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me everything about the boats.", 
                        "How many boats are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Boats", 
                        "SELECT count(*) FROM Boats"
                    ]
                }, 
                "paraphrase": [
                    "How many boats are there?"
                ], 
                "question": " Find the total number of boats.", 
                "id": 33, 
                "sql": [
                    "SELECT count(*) FROM Boats"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many boats are there?", 
                        "How many of those are red?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM Boats", 
                        "SELECT count(*) FROM Boats WHERE color  =  'red'"
                    ]
                }, 
                "paraphrase": [
                    "How many red boats exist?"
                ], 
                "question": " How many boats are red?", 
                "id": 34, 
                "sql": [
                    "SELECT count(*) FROM Boats WHERE color  =  'red'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of the sailors that are between age 20 and 30?", 
                        "Which boats are reserved by the corresponding sailors?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors WHERE age BETWEEN 20 AND 30", 
                        "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the boats booked by people between age 20 and 30?"
                ], 
                "question": " Find the names of boats booked by sailors whose age is between 20 and 30.", 
                "id": 35, 
                "sql": [
                    "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the sailors who booked a red boat?", 
                        "What is their maximum rating?", 
                        "What are the names of all sailors who are more highly rated than that?"
                    ], 
                    "sql": [
                        "SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the sailors whose rating is larger than the rating of all sailors who booked a red boat?"
                ], 
                "question": " Find the names of sailors whose rating is larger than the rating of all sailors who booked a red boat.", 
                "id": 36, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings for each sailor?", 
                        "What is the maximum rating?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors", 
                        "SELECT max(rating) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "What is the maximum rating for sailors?"
                ], 
                "question": " What is highest rating between sailors?", 
                "id": 37, 
                "sql": [
                    "SELECT max(rating) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of the boats whose name is Melon?", 
                        "What are the sailors' names who reserved them?"
                    ], 
                    "sql": [
                        "SELECT T1.bid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid  =  T2.bid WHERE T2.name  =  'Melon'", 
                        "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'"
                    ]
                }, 
                "paraphrase": [], 
                "question": " Find the names of sailors who reserved boat with the name Melon.", 
                "id": 38, 
                "sql": [
                    "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order everything you know about sailors by rating in descending order", 
                        "What are their names?", 
                        "Also, what are their ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors ORDER BY rating DESC", 
                        "SELECT name FROM Sailors ORDER BY rating DESC", 
                        "SELECT name ,  age FROM Sailors ORDER BY rating DESC"
                    ]
                }, 
                "paraphrase": [], 
                "question": " List the names and ages of all sailors sorted by rating in descending order.", 
                "sql": [
                    "SELECT name ,  age FROM Sailors ORDER BY rating DESC"
                ]
            }
        ], 
        "review_id": ""
    }
}
{
    "movie_2": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "Which movies do not have any ratings?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating IS NULL", 
                        "SELECT title FROM movies WHERE rating IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of movies that do not have any ratings?"
                ], 
                "question": " Find the titles of movies that don\u2019t have any rating.", 
                "id": 1, 
                "sql": [
                    "SELECT title FROM movies WHERE rating IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of each movie?", 
                        "Of these, which have a 'G' rating?"
                    ], 
                    "sql": [
                        "SELECT title FROM movies", 
                        "SELECT title FROM movies WHERE rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "What are names of movies that have a 'G' ratings?"
                ], 
                "question": " Find the names of movies whose rating is \u2018G\u2019.", 
                "id": 2, 
                "sql": [
                    "SELECT title FROM movies WHERE rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for movies played in any of the theaters?", 
                        "What are the ids for those played in the Odeon theater?", 
                        "For those ids, what are the titles?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                    ]
                }, 
                "paraphrase": [
                    "What are the movie titles for ones that are played in the Odeon theater?"
                ], 
                "question": " Find the title of the movie that is played in the Odeon theater.", 
                "id": 3, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of movies played in any theater?", 
                        "What are names for these movie ids?", 
                        "Also, what are the names of the theaters in which these movies played?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movies that are played in any theater and the name of the corresponding theater?"
                ], 
                "question": " Find the names of movies that are played in any theater and the name of the corresponding theater.", 
                "id": 4, 
                "sql": [
                    "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the movies with a 'G' rating?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT count(*) FROM movies WHERE rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "How many movies had a 'G' rating?"
                ], 
                "question": " Find the number of movies whose rating is \u2018G\u2019.", 
                "id": 5, 
                "sql": [
                    "SELECT count(*) FROM movies WHERE rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies are playing in theaters?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "How many movies are playing in theaters?"
                ], 
                "question": " How many movies are playing across all theaters?", 
                "id": 6, 
                "sql": [
                    "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all the movies playing in theaters?", 
                        "How many different codes are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie", 
                        "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                    ]
                }, 
                "paraphrase": [
                    "How many different movies are playing?"
                ], 
                "question": " How many distinct movies are on in theaters?", 
                "id": 7, 
                "sql": [
                    "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different movie theater names?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM movietheaters", 
                        "SELECT count(DISTINCT name) FROM movietheaters"
                    ]
                }, 
                "paraphrase": [
                    "How many different movie theaters exist?"
                ], 
                "question": " How many distinct movie theaters are there?", 
                "id": 8, 
                "sql": [
                    "SELECT count(DISTINCT name) FROM movietheaters"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies have a title including the word 'Citizen'?", 
                        "What are their ratings?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE title LIKE '%Citizen%'", 
                        "SELECT rating FROM movies WHERE title LIKE '%Citizen%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the rating of the movie what has a name including a word like 'Citizen'?"
                ], 
                "question": " Find the rating of the movie whose name includes the word \u2018Citizen\u2019.", 
                "id": 9, 
                "sql": [
                    "SELECT rating FROM movies WHERE title LIKE '%Citizen%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies have a 'G' rating?", 
                        "Combine that with all the movies that are rated 'PG'", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT * FROM movies WHERE rating  =  'G' OR rating  =  'PG'", 
                        "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movie theaters that are playing 'G' or 'PG' rated movies?"
                ], 
                "question": " Find the name of the cinemas that are playing movies with either rating \u2018G\u2019 or rating \u2018PG\u2019.", 
                "id": 10, 
                "sql": [
                    "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all movies that played at the Odeon theater?", 
                        "Also, what are the codes for the movies that played at the Imperial theater?", 
                        "What are the titles that correspond to those codes?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of all the movies that played at the Odeon or Imperial theater?"
                ], 
                "question": " Find the name of the movies that are played in either cinema Odeon or Imperial.", 
                "id": 11, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes for all movies playing at the 'Odeon' theater?", 
                        "Which of those represent a movie also playing at the 'Imperial' theater?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'"
                    ]
                }, 
                "paraphrase": [
                    "What movie is playing at both the Odeon and Imperial theater?"
                ], 
                "question": " Find the name of the movie that is on in both Odeon and Imperial theaters.", 
                "id": 12, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the codes of all the movies playing at the Odeon theater?", 
                        "What are the codes of all the other movies?", 
                        "What are the corresponding names?"
                    ], 
                    "sql": [
                        "SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT code FROM movies EXCEPT SELECT T1.code FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'", 
                        "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of every movie that is not playing at the Odeon theater?"
                ], 
                "question": " Find the name of all movies that are not played in Odeon theater.", 
                "id": 13, 
                "sql": [
                    "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the movie names?", 
                        "List them in alphabetical order"
                    ], 
                    "sql": [
                        "SELECT title FROM movies", 
                        "SELECT title FROM movies ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "\tWhat are the movie names in alphabetical order?"
                ], 
                "question": " List in alphabetical order the titles of all movies.", 
                "id": 14, 
                "sql": [
                    "SELECT title FROM movies ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the movies by ratings", 
                        "List their names"
                    ], 
                    "sql": [
                        "SELECT * FROM movies ORDER BY rating", 
                        "SELECT title FROM movies ORDER BY rating"
                    ]
                }, 
                "paraphrase": [
                    "What are the movie names sorted by rating?"
                ], 
                "question": " Find the titles of all movies sorted by their ratings.", 
                "id": 15, 
                "sql": [
                    "SELECT title FROM movies ORDER BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of the movie theaters?", 
                        "Order them by number of movies playing descendingly?", 
                        "Which one is playing the most?"
                    ], 
                    "sql": [
                        "SELECT name FROM movietheaters", 
                        "SELECT name FROM movietheaters ORDER BY count(*) DESC", 
                        "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the theater playing the most movies?"
                ], 
                "question": " Find the name of the theater that is playing the most number of movies.", 
                "id": 16, 
                "sql": [
                    "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many theaters is each movie playing at?", 
                        "Which movie is playing at the most?", 
                        "What is its name?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title", 
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1", 
                        "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the film playing at the most number of theaters?"
                ], 
                "question": " Find the name of the movie that is played in the most number of theaters.", 
                "id": 17, 
                "sql": [
                    "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct ratings for all movies?", 
                        "How many movies are there for each rating?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT rating FROM movies", 
                        "SELECT count(*) ,  rating FROM movies GROUP BY rating"
                    ]
                }, 
                "paraphrase": [
                    "How many movies exist for each rating?"
                ], 
                "question": " Find the number of movies in each rating.", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) ,  rating FROM movies GROUP BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the unique ratings for all movies?", 
                        "How many movies are there for each rating category?", 
                        "Also, How many are there for each type except null?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT rating FROM movies", 
                        "SELECT count(*) ,  rating FROM movies GROUP BY rating", 
                        "SELECT count(*) ,  rating FROM movies WHERE rating IS NOT NULL GROUP BY rating"
                    ]
                }, 
                "paraphrase": [
                    "How many movies have a rating that is not null?", 
                    "How many movies are there for each non-NULL rating?"
                ], 
                "question": " Find the number of movies whose rating is not null.", 
                "id": 19, 
                "sql": [
                    "SELECT count(*) ,  rating FROM movies WHERE rating IS NOT NULL GROUP BY rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which theaters have film on?", 
                        "Which one have at least 1 film on?", 
                        "What is that theater's name?"
                    ], 
                    "sql": [
                        "SELECT * FROM movietheaters", 
                        "SELECT * FROM movietheaters GROUP BY name HAVING count(*)  >=  1", 
                        "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of every theater with at least one movie playing?"
                ], 
                "question": " Find the name of theaters that has at least one movie playing.", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of every movie theater?", 
                        "Of those, which are names of theaters that do not have any films showing?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM MovieTheaters", 
                        "SELECT DISTINCT name FROM MovieTheaters WHERE Movie IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all cinemas not showing any movies?"
                ], 
                "question": " Select the name of all movie theaters that are not currently showing a movie.", 
                "id": 21, 
                "sql": [
                    "SELECT DISTINCT name FROM MovieTheaters WHERE Movie IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which movies are 'G'-rated?", 
                        "What theaters are playing 'G'-rated movies?", 
                        "What are the names of the theaters?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies WHERE rating  =  'G'", 
                        "SELECT * FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'", 
                        "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of theaters playing 'G' rated movies?"
                ], 
                "question": " Find the name of the movie theaters that are playing the movies whose rating is \u2018G\u2019.", 
                "id": 22, 
                "sql": [
                    "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the movies?", 
                        "What are the titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM movie", 
                        "SELECT title FROM movie"
                    ]
                }, 
                "paraphrase": [
                    "What are all of the movie names?"
                ], 
                "question": " Select the title of all movies.", 
                "id": 23, 
                "sql": [
                    "SELECT title FROM movie"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the movies?", 
                        "What are their ratings?", 
                        "What are the different ratings?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies", 
                        "SELECT rating FROM movies", 
                        "SELECT DISTINCT rating FROM movies"
                    ]
                }, 
                "paraphrase": [
                    "What are the different movie ratings?"
                ], 
                "question": " Show all the distinct ratings in the database.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT rating FROM movies"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Show all information about the movies", 
                        "Of that, which pertain to only unrated movies?"
                    ], 
                    "sql": [
                        "SELECT * FROM movies", 
                        "SELECT * FROM movies WHERE rating IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the unrated movies?"
                ], 
                "question": " Show all information of all unrated movies.", 
                "id": 25, 
                "sql": [
                    "SELECT * FROM movies WHERE rating IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the movies shown in the theaters?", 
                        "Which movies are not being shown in any theaters?", 
                        "What are their names"
                    ], 
                    "sql": [
                        "SELECT * FROM MovieTheaters WHERE Movie IS NOT NULL", 
                        "SELECT * FROM Movies WHERE Code NOT IN", 
                        "SELECT Title FROM Movies WHERE Code NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the movies not being shown in any theaters?"
                ], 
                "question": " Show the titles of movies not currently being shown in any theaters.", 
                "sql": [
                    "SELECT Title FROM Movies WHERE Code NOT IN"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "college_2": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What are the distinct classroom buildings?", 
                        "Of those, which have capacity of over 50?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT building FROM classroom", 
                        "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct buildings with capacities of greater than 50?"
                ], 
                "question": " Find the buildings which have rooms with capacity more than 50.", 
                "id": 1, 
                "sql": [
                    "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which classrooms are not in Lamberton?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE building ! =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building ! =  'Lamberton'"
                    ]
                }, 
                "paraphrase": [
                    "How many classrooms are not in Lamberton?"
                ], 
                "question": " Count the number of rooms that are not in the Lamberton building.", 
                "id": 2, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building ! =  'Lamberton'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average department budget?", 
                        "Which departments have a budget higher than average?", 
                        "What are their names and buildings?"
                    ], 
                    "sql": [
                        "SELECT avg(budget) FROM department", 
                        "SELECT * FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", 
                        "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                    ]
                }, 
                "paraphrase": [
                    "Give the name and building of the departments with greater than average budget."
                ], 
                "question": " What is the name and building of the departments whose budget is more than the average budget?", 
                "id": 3, 
                "sql": [
                    "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which classrooms have capacity between 50 and 100?", 
                        "What are their buildings and room numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE capacity BETWEEN 50 AND 100", 
                        "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
                    ]
                }, 
                "paraphrase": [
                    "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?"
                ], 
                "question": " Find the room number of the rooms which can sit 50 to 100 students and their buildings.", 
                "id": 4, 
                "sql": [
                    "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by budget in decreasing order.", 
                        "Which is has the highest budget?", 
                        "What is its name and building?"
                    ], 
                    "sql": [
                        "SELECT * FROM department ORDER BY budget DESC", 
                        "SELECT * FROM department ORDER BY budget DESC LIMIT 1", 
                        "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the department name and corresponding building for the department with the greatest budget?"
                ], 
                "question": " Find the name and building of the department with the highest budget.", 
                "id": 5, 
                "sql": [
                    "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of students in the History department?", 
                        "Which one has the most credits?"
                    ], 
                    "sql": [
                        "SELECT name FROM student WHERE dept_name  =  'History'", 
                        "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the student in the History department with the most credits."
                ], 
                "question": " What is the name of the student who has the highest total credits in the History department.", 
                "id": 6, 
                "sql": [
                    "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the classrooms in Lamberton?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM classroom WHERE building  =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of classrooms in Lamberton."
                ], 
                "question": " How many rooms does the Lamberton building have?", 
                "id": 7, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the student ids of students with advisors?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT s_id FROM advisor", 
                        "SELECT count(DISTINCT s_id) FROM advisor"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of students who have advisors."
                ], 
                "question": " How many students have advisors?", 
                "id": 8, 
                "sql": [
                    "SELECT count(DISTINCT s_id) FROM advisor"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the department names of departments that offer courses?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT dept_name FROM course", 
                        "SELECT count(DISTINCT dept_name) FROM course"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of departments which offer courses."
                ], 
                "question": " How many departments offer courses?", 
                "id": 9, 
                "sql": [
                    "SELECT count(DISTINCT dept_name) FROM course"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the courses in the Physics department?", 
                        "What are their course ids?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Physics'", 
                        "SELECT DISTINCT course_id FROM course WHERE dept_name  =  'Physics'", 
                        "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of courses in the Physics department."
                ], 
                "question": " How many different courses offered by Physics department?", 
                "id": 10, 
                "sql": [
                    "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which courses have some prerequisite?", 
                        "Which ones have two prerequisites among them?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id", 
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2", 
                        "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles for courses with two prerequisites?"
                ], 
                "question": " Find the title of courses that have two prerequisites?", 
                "id": 11, 
                "sql": [
                    "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which courses have more than 1 prerequisite?", 
                        "What title, credit, and department name correspond to these?"
                    ], 
                    "sql": [
                        "SELECT * FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", 
                        "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the title, credit value, and department name for courses with more than one prerequisite?"
                ], 
                "question": " Find the title, credit, and department name of courses that have more than one prerequisites?", 
                "id": 12, 
                "sql": [
                    "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses that have some prerequisites?", 
                        "How many courses do not in the resulting list?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of courses without prerequisites."
                ], 
                "question": " How many courses that do not have prerequisite?", 
                "id": 13, 
                "sql": [
                    "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for prerequisites?", 
                        "Which courses do not have prerequisites?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT * FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", 
                        "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses without prerequisites?"
                ], 
                "question": " Find the name of the courses that do not have any prerequisite?", 
                "id": 14, 
                "sql": [
                    "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who have taught a course?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT id FROM teaches", 
                        "SELECT COUNT (DISTINCT id) FROM teaches"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of distinct instructors who have taught a course."
                ], 
                "question": " How many different instructors have taught some course?", 
                "id": 15, 
                "sql": [
                    "SELECT COUNT (DISTINCT id) FROM teaches"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the budgets of the Marketing department?", 
                        "How about that for the Finance department?", 
                        "What is their total budget?"
                    ], 
                    "sql": [
                        "SELECT budget FROM department WHERE dept_name  =  'Marketing'", 
                        "SELECT budget FROM department WHERE dept_name  =  'Finance'", 
                        "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
                    ]
                }, 
                "paraphrase": [
                    "What is the sum of budgets of the Marketing and Finance departments?"
                ], 
                "question": " Find the total budgets of the Marketing or Finance department.", 
                "id": 16, 
                "sql": [
                    "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about an instructor whose name contains 'Soisalon'?", 
                        "What is their department name?"
                    ], 
                    "sql": [
                        "SELECT * FROM instructor WHERE name LIKE '%Soisalon%'", 
                        "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the department with an instructure who has a name like 'Soisalon'?"
                ], 
                "question": " Find the department name of the instructor whose name contains 'Soisalon'.", 
                "id": 17, 
                "sql": [
                    "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many rooms are there in Lamberton?", 
                        "Of those, how many have capacity less than 50?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'", 
                        "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
                    ]
                }, 
                "paraphrase": [
                    "Count the number of rooms in Lamberton with capacity lower than 50."
                ], 
                "question": " How many rooms whose capacity is less than 50 does the Lamberton building have?", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average department budget?", 
                        "Which departments have a budget higher than that?", 
                        "What are their names and budgets?"
                    ], 
                    "sql": [
                        "SELECT avg(budget) FROM department", 
                        "SELECT * FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", 
                        "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and budgets of departments with budgets greater than the average?"
                ], 
                "question": " Find the name and budget of departments whose budgets are more than the average budget.", 
                "id": 19, 
                "sql": [
                    "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of the professors in the Statistics department?", 
                        "Which one earns the least?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor WHERE dept_name  =  'Statistics'", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the lowest earning instructor in the Statistics department."
                ], 
                "question": " what is the name of the instructor who is in Statistics department and earns the lowest salary?", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of Statistics courses?", 
                        "Of these, which are also listed as Psychology courses?"
                    ], 
                    "sql": [
                        "SELECT title FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of a course that is listed in both the Statistics and Psychology departments?"
                ], 
                "question": " Find the title of course that is provided by both Statistics and Psychology departments.", 
                "id": 21, 
                "sql": [
                    "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of Statistics courses?", 
                        "Of these, which are not provided by the Psychology department?"
                    ], 
                    "sql": [
                        "SELECT title FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses that are in the Statistics department but not the Psychology department?"
                ], 
                "question": " Find the title of course that is provided by Statistics but not Psychology departments.", 
                "id": 22, 
                "sql": [
                    "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught in the Fall of 2009?", 
                        "Of those, which did not teach in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?"
                ], 
                "question": " Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", 
                "id": 23, 
                "sql": [
                    "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct names of all the students?", 
                        "Of these, which took classes in 2009 or 2010?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM student", 
                        "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the students who took classes in 2009 or 2010?"
                ], 
                "question": " Find the name of students who took any class in the years of 2009 and 2010.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses does each department have?", 
                        "Order their names from greatest to least.", 
                        "What are the top 3?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  count(*) FROM course GROUP BY dept_name", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the 3 departments with the most courses?"
                ], 
                "question": " Find the names of the top 3 departments that provide the largest amount of courses?", 
                "id": 25, 
                "sql": [
                    "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many credits does each department offer?", 
                        "What is the name of the department which offers the most?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  sum(credits) FROM course GROUP BY dept_name", 
                        "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the department with the most credits?"
                ], 
                "question": " Find the name of the department that offers the highest total credits?", 
                "id": 26, 
                "sql": [
                    "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all courses?", 
                        "Order them by titles and credits."
                    ], 
                    "sql": [
                        "SELECT title FROM course", 
                        "SELECT title FROM course ORDER BY title ,  credits"
                    ]
                }, 
                "paraphrase": [
                    "Given the titles of all courses, in order of titles and credits."
                ], 
                "question": " List the names of all courses ordered by their titles and credits.", 
                "id": 27, 
                "sql": [
                    "SELECT title FROM course ORDER BY title ,  credits"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the department names by increasing budget.", 
                        "Which has the lowest?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM department ORDER BY budget", 
                        "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the department with the lowest budget."
                ], 
                "question": " Which department has the lowest budget?", 
                "id": 28, 
                "sql": [
                    "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by decreasing budget.", 
                        "In the same order, what are their names and buildings?"
                    ], 
                    "sql": [
                        "SELECT * FROM department ORDER BY budget DESC", 
                        "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and buildings of the deparments, sorted by budget descending?"
                ], 
                "question": " List the names and buildings of all departments sorted by the budget from large to small.", 
                "id": 29, 
                "sql": [
                    "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the instructor names by salary from greatest to least.", 
                        "Who is paid the most?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor ORDER BY salary DESC", 
                        "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of the highest paid instructor."
                ], 
                "question": " Who is the instructor with the highest salary?", 
                "id": 30, 
                "sql": [
                    "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about instructors?", 
                        "Order this by increasing salary."
                    ], 
                    "sql": [
                        "SELECT * FROM instructor", 
                        "SELECT * FROM instructor ORDER BY salary"
                    ]
                }, 
                "paraphrase": [
                    "Give all information regarding instructors, in order of salary from least to greatest."
                ], 
                "question": " List the information of all instructors ordered by their salary in ascending order.", 
                "id": 31, 
                "sql": [
                    "SELECT * FROM instructor ORDER BY salary"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names and department names for each student?", 
                        "Order this by total credits ascending."
                    ], 
                    "sql": [
                        "SELECT name ,  dept_name FROM student", 
                        "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students and their respective departments, ordered by number of credits from least to greatest?"
                ], 
                "question": " Find the name of the students and their department names sorted by their total credits in ascending order.", 
                "id": 32, 
                "sql": [
                    "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What were all the course titles in 2008?", 
                        "Also, what were the instructors' names?", 
                        "Order this by title."
                    ], 
                    "sql": [
                        "SELECT T1.title FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id WHERE YEAR  =  2008", 
                        "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008", 
                        "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
                    ]
                }, 
                "paraphrase": [
                    "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title."
                ], 
                "question": " list in alphabetic order all course names and their instructors' names in year 2008.", 
                "id": 33, 
                "sql": [
                    "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors who advise students?", 
                        "Of those, which advise more than one student?"
                    ], 
                    "sql": [
                        "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id", 
                        "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who advise more than one student?"
                ], 
                "question": " Find the name of instructors who are advising more than one student.", 
                "id": 34, 
                "sql": [
                    "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of students with advisors?", 
                        "Which ones have more than one advisor?"
                    ], 
                    "sql": [
                        "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id", 
                        "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have more than one advisor?"
                ], 
                "question": " Find the name of the students who have more than one advisor?", 
                "id": 35, 
                "sql": [
                    "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many classrooms have capacity greater than 50?", 
                        "Count these by building."
                    ], 
                    "sql": [
                        "SELECT count(*) FROM classroom WHERE capacity  >  50", 
                        "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
                    ]
                }, 
                "paraphrase": [
                    "How many rooms in each building have a capacity of over 50?"
                ], 
                "question": " Find the number of rooms with more than 50 capacity for each building.", 
                "id": 36, 
                "sql": [
                    "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the maximum and average capacities across all classrooms?", 
                        "Find these for each building."
                    ], 
                    "sql": [
                        "SELECT max(capacity) ,  avg(capacity) FROM classroom", 
                        "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
                    ]
                }, 
                "paraphrase": [
                    "What are the greatest and average capacity for rooms in each building?"
                ], 
                "question": " Find the maximum and average capacity among rooms in each building.", 
                "id": 37, 
                "sql": [
                    "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the different course titles?", 
                        "Of those, which are offered in more than one department?"
                    ], 
                    "sql": [
                        "SELECT title FROM course", 
                        "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of courses that are offered in more than one department?"
                ], 
                "question": " Find the title of the course that is offered by more than one department.", 
                "id": 38, 
                "sql": [
                    "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many total credits are offered?", 
                        "Find the totals by department name."
                    ], 
                    "sql": [
                        "SELECT sum(credits) FROM course", 
                        "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many total credits are offered by each department?"
                ], 
                "question": " Find the total credits of courses provided by different department.", 
                "id": 39, 
                "sql": [
                    "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary of an instructor?", 
                        "What are the departments with average salary greater than that?", 
                        "Also, what are their lowest salaries?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM instructor", 
                        "SELECT dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", 
                        "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
                    ]
                }, 
                "paraphrase": [
                    "What is the lowest salary in departments with average salary greater than the overall average."
                ], 
                "question": " Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", 
                "id": 40, 
                "sql": [
                    "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses are offered in each year?", 
                        "Split these by semester as well."
                    ], 
                    "sql": [
                        "SELECT count(*) ,  YEAR FROM SECTION GROUP BY YEAR", 
                        "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
                    ]
                }, 
                "paraphrase": [
                    "How many courses are provided in each semester and year?"
                ], 
                "question": " Find the number of courses provided in each semester and year.", 
                "id": 41, 
                "sql": [
                    "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many courses are offered in each year?", 
                        "Which year had the most?"
                    ], 
                    "sql": [
                        "SELECT YEAR ,  count(*) FROM SECTION GROUP BY YEAR", 
                        "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which year had the greatest number of courses?"
                ], 
                "question": " Find the year which offers the largest number of courses.", 
                "id": 42, 
                "sql": [
                    "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the number of courses in each semester and year.", 
                        "Which had the most?"
                    ], 
                    "sql": [
                        "SELECT semester ,  YEAR ,  count(*) FROM SECTION GROUP BY semester ,  YEAR", 
                        "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the year and semester with the most courses?"
                ], 
                "question": " Find the year and semester when offers the largest number of courses.", 
                "id": 43, 
                "sql": [
                    "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students are in each department?", 
                        "What is the name of the department with the most?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  count(*) FROM student GROUP BY dept_name", 
                        "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the deparment with the highest enrollment?"
                ], 
                "question": " Find the name of department has the highest amount of students?", 
                "id": 44, 
                "sql": [
                    "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students are there?", 
                        "Count this by department."
                    ], 
                    "sql": [
                        "SELECT count(*) FROM student", 
                        "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many students are in each department?"
                ], 
                "question": " Find the total number of students in each department.", 
                "id": 45, 
                "sql": [
                    "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many students were taking classes in each semester and year?", 
                        "Which one had the fewest?"
                    ], 
                    "sql": [
                        "SELECT semester ,  YEAR ,  count(*) FROM takes GROUP BY semester ,  YEAR", 
                        "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which semeseter and year had the fewest students?"
                ], 
                "question": " Find the semester and year which has the least number of student taking any class.", 
                "id": 46, 
                "sql": [
                    "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all instructors who are advisors?", 
                        "Of these, which advise students in the History department?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id", 
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
                    ]
                }, 
                "paraphrase": [
                    "Give id of the instructor who advises students in the History department."
                ], 
                "question": " What is the id of the instructor who advises of all students from History department?", 
                "id": 47, 
                "sql": [
                    "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all instructors who are advisors?", 
                        "Of these, which advise students in the History department?", 
                        "What are their names and salaries?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id", 
                        "SELECT i_id FROM advisor AS T1 JOIN student T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries of instructors who advises students in the History department?"
                ], 
                "question": " Find the name and salary of the instructors who are advisors of any student from History department?", 
                "id": 48, 
                "sql": [
                    "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses with prerequisites?", 
                        "What are the ids of all other courses?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of courses without prerequisites?"
                ], 
                "question": " Find the id of the courses that do not have any prerequisite?", 
                "id": 49, 
                "sql": [
                    "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses with prerequisites?", 
                        "What are the titles of all other courses?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT title FROM course WHERE course_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of courses without prerequisites?"
                ], 
                "question": " Find the name of the courses that do not have any prerequisite?", 
                "id": 50, 
                "sql": [
                    "SELECT title FROM course WHERE course_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all prerequisites?", 
                        "What is the id of the prerequisite for International Finance?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT prereq_id FROM prereq", 
                        "SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "Give the title of the prerequisite to the course International Finance."
                ], 
                "question": " What is the title of the prerequisite class of International Finance course?", 
                "id": 51, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the prerequisites?", 
                        "What is the id of the course for which Differential Geometry is a prerequisite?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM prereq", 
                        "SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of the course with Differential Geometry as a prerequisite?"
                ], 
                "question": " Find the title of course whose prerequisite is course Differential Geometry.", 
                "id": 52, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of students who took courses in the Fall of 2003?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003", 
                        "SELECT name FROM student WHERE id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who took a course in the Fall of 2003?"
                ], 
                "question": " Find the names of students who have taken any course in the fall semester of year 2003.", 
                "id": 53, 
                "sql": [
                    "SELECT name FROM student WHERE id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of courses offered in the Fall of 2010?", 
                        "Of these, which were offered in Chandler building?"
                    ], 
                    "sql": [
                        "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE semester  =  'Fall' AND YEAR  =  2010", 
                        "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "Give the title of the course offered in Chandler during the Fall of 2010."
                ], 
                "question": " What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?", 
                "id": 54, 
                "sql": [
                    "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors?", 
                        "Of those, which have taught a C Programming course?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who have taught C Programming courses?"
                ], 
                "question": " Find the name of the instructors who taught C Programming course before.", 
                "id": 55, 
                "sql": [
                    "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all advisors?", 
                        "What are the ids of advisors who advise students in the Math department?", 
                        "What are their names and salaries?"
                    ], 
                    "sql": [
                        "SELECT i_id FROM advisor", 
                        "SELECT T1.i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Math'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries of instructors who advise students in the Math department?"
                ], 
                "question": " Find the name and salary of instructors who are advisors of the students from the Math department.", 
                "id": 56, 
                "sql": [
                    "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of advisors who advise students in the Math department?", 
                        "What are their names?", 
                        "Order this by the students' total credits."
                    ], 
                    "sql": [
                        "SELECT T1.i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Math'", 
                        "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", 
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors who advise students in the math depart sorted by total credits of the student."
                ], 
                "question": " Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.", 
                "id": 57, 
                "sql": [
                    "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the ids of the prerequisite classes?", 
                        "Of these, which is the prerequisite for Mobile Computing?", 
                        "What is its title?"
                    ], 
                    "sql": [
                        "SELECT prereq_id FROM prereq", 
                        "SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing'", 
                        "SELECT title FROM course WHERE course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the title of the course that is a prerequisite for Mobile Computing?"
                ], 
                "question": " What is the course title of the prerequisite of course Mobile Computing?", 
                "id": 58, 
                "sql": [
                    "SELECT title FROM course WHERE course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are names of instructors who advise students?", 
                        "Of these, which one instructs the students with the most total credits?"
                    ], 
                    "sql": [
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id", 
                        "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the instructor who advises the student with the greatest number of total credits?"
                ], 
                "question": " Find the name of instructor who is the advisor of the student who has the highest number of total credits.", 
                "id": 59, 
                "sql": [
                    "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught courses?", 
                        "What are the ids of all other instructors?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches", 
                        "SELECT id FROM instructor WHERE id NOT IN", 
                        "SELECT name FROM instructor WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who didn't teach?"
                ], 
                "question": " Find the name of instructors who didn't teach any courses?", 
                "id": 60, 
                "sql": [
                    "SELECT name FROM instructor WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of instructors who taught courses?", 
                        "What are the ids of all other instructors?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches", 
                        "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of instructors who didnt' teach?"
                ], 
                "question": " Find the id of instructors who didn't teach any courses?", 
                "id": 61, 
                "sql": [
                    "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of teachers who taught in the Spring?", 
                        "What are the ids of all other instructors?", 
                        "What are the corresponding instructor names?"
                    ], 
                    "sql": [
                        "SELECT id FROM teaches WHERE semester  =  'Spring'", 
                        "SELECT id FROM instructor WHERE id NOT IN", 
                        "SELECT name FROM instructor WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who didn't teach courses in the Spring?"
                ], 
                "question": " Find the names of instructors who didn't each any courses in any Spring semester.", 
                "id": 62, 
                "sql": [
                    "SELECT name FROM instructor WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the average instructor salaries for each department?", 
                        "Which department has the highest?"
                    ], 
                    "sql": [
                        "SELECT dept_name ,  avg(salary) FROM instructor GROUP BY dept_name", 
                        "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Which department has the highest average instructor salary?"
                ], 
                "question": " Find the name of the department which has the highest average salary of professors.", 
                "id": 63, 
                "sql": [
                    "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the departments by decreasing budget.", 
                        "How many instructors are in the department with the highest budget?", 
                        "Also, what is the average salary of those instructors?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM department ORDER BY budget DESC", 
                        "SELECT count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", 
                        "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How many instructors are in the department with the highest budget, and what is their average salary?"
                ], 
                "question": " Find the number and averaged salary of all instructors who are in the department with the highest budget.", 
                "id": 64, 
                "sql": [
                    "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the maximum capacity of any classroom?", 
                        "What is the title of the course which is taught there?", 
                        "Also, what credits value does that course have?"
                    ], 
                    "sql": [
                        "SELECT max(capacity) FROM classroom", 
                        "SELECT T3.title FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", 
                        "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
                    ]
                }, 
                "paraphrase": [
                    "Give the title and credits for the course that is taught in the classroom with the greatest capacity."
                ], 
                "question": " What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", 
                "id": 65, 
                "sql": [
                    "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have taken Biology courses?", 
                        "What are the names of all students who did not take that class?"
                    ], 
                    "sql": [
                        "SELECT * FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology'", 
                        "SELECT name FROM student WHERE id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who haven't taken any Biology courses?"
                ], 
                "question": " Find the name of students who didn't take any course from Biology department.", 
                "id": 66, 
                "sql": [
                    "SELECT name FROM student WHERE id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the total number of students.", 
                        "Now, find the number by department.", 
                        "Also, find the number of instructors in each department."
                    ], 
                    "sql": [
                        "SELECT count(DISTINCT id) FROM student", 
                        "SELECT count(DISTINCT T2.id) ,  T1.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name GROUP BY T1.dept_name", 
                        "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
                    ]
                }, 
                "paraphrase": [
                    "How many students and instructors are in each department?"
                ], 
                "question": " Find the total number of students and total number of instructors for each department.", 
                "id": 67, 
                "sql": [
                    "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the id of the prerequisite of International Finance?", 
                        "What are the ids of students who have taken this course?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT T2.prereq_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id WHERE T1.title  =  'International Finance'", 
                        "SELECT T1.id FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN", 
                        "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have taken the prerequisite for the course International Finance?"
                ], 
                "question": " Find the name of students who have taken the prerequisite course of the course with title International Finance.", 
                "id": 68, 
                "sql": [
                    "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary of instructors in the Physics department?", 
                        "What are the names of the instructors who earn more than that?", 
                        "Also, what are their salaries?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics'", 
                        "SELECT name FROM instructor WHERE salary  < ", 
                        "SELECT name ,  salary FROM instructor WHERE salary  < "
                    ]
                }, 
                "paraphrase": [
                    "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?"
                ], 
                "question": " Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", 
                "id": 69, 
                "sql": [
                    "SELECT name ,  salary FROM instructor WHERE salary  < "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the Statistics courses?", 
                        "What are the names of students who have taken courses in the Statistics department?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Statistics'", 
                        "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of students who have taken Statistics courses?"
                ], 
                "question": " Find the name of students who took some course offered by Statistics department.", 
                "id": 70, 
                "sql": [
                    "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the courses in the Psychology department, ordered by title?", 
                        "What are the building, room number, semester and year corresponding to these courses?"
                    ], 
                    "sql": [
                        "SELECT * FROM course WHERE dept_name  =  'Psychology' ORDER BY title", 
                        "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
                    ]
                }, 
                "paraphrase": [
                    "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?"
                ], 
                "question": " Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.", 
                "id": 71, 
                "sql": [
                    "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the instructors?", 
                        "Of those, which are in the Comp. Sci. department?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors in the Comp. Sci. department?"
                ], 
                "question": " Find the names of all instructors in computer science department", 
                "id": 72, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors who earn more than 80000?", 
                        "Of those, which are in the Comp. Sci. department?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor WHERE salary  >  80000", 
                        "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?"
                ], 
                "question": " Find the names of all instructors in Comp. Sci. department with salary > 80000.", 
                "id": 73, 
                "sql": [
                    "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the names of teachers who have taught a course?", 
                        "Also, what were the course ids?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", 
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors who have taught a course, as well as the corresponding course id?"
                ], 
                "question": " Find the names of all instructors who have taught some course and the course_id.", 
                "id": 74, 
                "sql": [
                    "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the names of teachers who have taught a course, and what were the course ids?", 
                        "Of these, which were in the Art department?"
                    ], 
                    "sql": [
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", 
                        "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of Art instructors who have taught a course, and the corresponding course id?"
                ], 
                "question": " Find the names of all instructors in the Art department who have taught some course and the course_id.", 
                "id": 75, 
                "sql": [
                    "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all instructors?", 
                        "Of these, which include the substring \"dar\"?"
                    ], 
                    "sql": [
                        "SELECT name FROM instructor", 
                        "SELECT name FROM instructor WHERE name LIKE '%dar%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors with names that include \"dar\"?"
                ], 
                "question": " Find the names of all instructors whose name includes the substring \u201cdar\u201d.", 
                "id": 76, 
                "sql": [
                    "SELECT name FROM instructor WHERE name LIKE '%dar%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct names of all instructors?", 
                        "Sort this in alphabetical order."
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM  instructor", 
                        "SELECT DISTINCT name FROM  instructor ORDER BY name"
                    ]
                }, 
                "paraphrase": [
                    "List the distinct names of the instructors, ordered by name."
                ], 
                "question": " List in alphabetic order the names of all distinct instructors.", 
                "id": 77, 
                "sql": [
                    "SELECT DISTINCT name FROM  instructor ORDER BY name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses offered in the Fall of 2009?", 
                        "Also include the ids for courses offered in the Spring of 2010."
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for courses in the Fall of 2009 or the Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 or in Spring 2010.", 
                "id": 78, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids for courses offered in the Fall of 2009?", 
                        "Of these, which were also offered in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 and in Spring 2010.", 
                "id": 79, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of courses offered in the Fall of 2009?", 
                        "Of these, which were not offered in the Spring of 2010?"
                    ], 
                    "sql": [
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009", 
                        "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of courses offered in Fall of 2009 but not in Spring of 2010?"
                ], 
                "question": " Find courses that ran in Fall 2009 but not in Spring 2010.", 
                "id": 80, 
                "sql": [
                    "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What was the largest salary across instructors?", 
                        "What were all the other distinct salaries?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM instructor", 
                        "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct salaries of all instructors who earned less than the maximum salary?"
                ], 
                "question": " Find the salaries of all distinct instructors that are less than the largest salary.", 
                "id": 81, 
                "sql": [
                    "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the distinct ids of instructors teaching in the Spring of 2010?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT ID FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", 
                        "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                    ]
                }, 
                "paraphrase": [
                    "How many instructors teach a course in the Spring of 2010?"
                ], 
                "question": " Find the total number of instructors who teach a course in the Spring 2010 semester.", 
                "id": 82, 
                "sql": [
                    "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of departments that have average salaries higher than 42000?", 
                        "Also, what are their average salaries?"
                    ], 
                    "sql": [
                        "SELECT dept_name FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", 
                        "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and average salaries for departments with average salary higher than 42000?"
                ], 
                "question": " Find the names and average salaries of all departments whose average salary is greater than 42000.", 
                "id": 83, 
                "sql": [
                    "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary of instructors in the Biology department?", 
                        "What are the ids of instructors who earn more than that?", 
                        "What are their names?"
                    ], 
                    "sql": [
                        "SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology'", 
                        "SELECT id FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", 
                        "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of instructors who earn more than at least one instructor from the Biology department?"
                ], 
                "question": " Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.", 
                "id": 84, 
                "sql": [
                    "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the highest salary of instructors in the Biology department?", 
                        "What are the names of instructors who earn more than this?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology'", 
                        "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?"
                ], 
                "question": " Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.", 
                "sql": [
                    "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "art_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "sql2": [
                        "SELECT * FROM sculptures ORDER BY YEAR DESC LIMIT 1", 
                        "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                    ], 
                    "sql": [
                        "SELECT title ,  YEAR FROM sculptures", 
                        "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                    ], 
                    "question": [
                        "What is the name and year created of each sculpture?", 
                        "Which one was created most recently?"
                    ], 
                    "question2": [
                        "Find all info of the sculpture was created most recently.", 
                        "What is its name and year?"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the scuplture that was created most recently?"
                ], 
                "question": " What is the title of the sculpture that was created in the most recent year?", 
                "id": 1, 
                "sql": [
                    "SELECT title ,  YEAR FROM sculptures ORDER BY YEAR DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which is the oldest painting?", 
                        "What is its title, location and year created?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings ORDER BY YEAR LIMIT 1", 
                        "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the oldest painting and where is it located?"
                ], 
                "question": " What is the title and location of the oldest painting?", 
                "id": 2, 
                "sql": [
                    "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the sculptures?", 
                        "Which ones are located in gallery 226?"
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures", 
                        "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all sculptures in gallery 226?"
                ], 
                "question": " Find the names of all sculptures located in gallery 226.", 
                "id": 3, 
                "sql": [
                    "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the paintings?", 
                        "Also list their locations."
                    ], 
                    "sql": [
                        "SELECT title FROM paintings", 
                        "SELECT title ,  LOCATION FROM paintings"
                    ]
                }, 
                "paraphrase": [
                    "What are the paintings called and where are they located?"
                ], 
                "question": " List the title and location of all paintings.", 
                "id": 4, 
                "sql": [
                    "SELECT title ,  LOCATION FROM paintings"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the titles of all the sculptures?", 
                        "Also list their locations."
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures", 
                        "SELECT title ,  LOCATION FROM sculptures"
                    ]
                }, 
                "paraphrase": [
                    "What are the sculptures called and where are they located?"
                ], 
                "question": " List the title and location of all sculptures.", 
                "id": 5, 
                "sql": [
                    "SELECT title ,  LOCATION FROM sculptures"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which painting has an id equal to 80?", 
                        "What is its medium type?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE paintingID  =  80", 
                        "SELECT medium FROM paintings WHERE paintingID  =  80"
                    ]
                }, 
                "paraphrase": [
                    "What mediums were used for the paining with id = 80?"
                ], 
                "question": " What are the medium types of the painting with id = 80", 
                "id": 6, 
                "sql": [
                    "SELECT medium FROM paintings WHERE paintingID  =  80"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the first and last names of all the artists?", 
                        "Which of those were born after 1850?"
                    ], 
                    "sql": [
                        "SELECT lname ,  fname FROM artists", 
                        "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names of artists born after 1850?"
                ], 
                "question": " Find the first and last names of all artists who were born after 1850.", 
                "id": 7, 
                "sql": [
                    "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sculptures are not located in gallery 226?", 
                        "Of those, what are their names and years?"
                    ], 
                    "sql": [
                        "SELECT title FROM sculptures WHERE LOCATION ! =  \"Gallery 226\"", 
                        "SELECT title ,  YEAR FROM sculptures WHERE LOCATION ! =  \"Gallery 226\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and dates created for all sculptures not located in gallery 226?"
                ], 
                "question": " Find the names and years of all sculptures that are not located in gallery 226.", 
                "id": 8, 
                "sql": [
                    "SELECT title ,  YEAR FROM sculptures WHERE LOCATION ! =  \"Gallery 226\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who were all the distinct artists who made sculptures?", 
                        "Of those, which made them before 1900?", 
                        "What were their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900", 
                        "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900"
                    ]
                }, 
                "paraphrase": [
                    "What is the first and last name of each distinct artists who made a sculpture before 1900?"
                ], 
                "question": " What are the first and last names of all distinct artists who made sculptures before 1900?", 
                "id": 9, 
                "sql": [
                    "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the distinct artists?", 
                        "Which of them made sculptures after 1920?", 
                        "What are their birth years?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920", 
                        "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920"
                    ]
                }, 
                "paraphrase": [
                    "What is the birth year of each distinct artists who created sculptures after 1920?"
                ], 
                "question": " Find the birth years of all distinct artists who made sculptures after 1920?", 
                "id": 10, 
                "sql": [
                    "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Order the result by their lifetime.", 
                        "What was the first and last name of the one who lived the longest?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear DESC", 
                        "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Give the full name of the artist who lived the longest."
                ], 
                "question": " What are the first and last names of the artist who lived the longest?", 
                "id": 11, 
                "sql": [
                    "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Which one lived the shortest?", 
                        "What was his/her age?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear LIMIT 1", 
                        "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How old is the artist who lived the shortest life?"
                ], 
                "question": " What is the age of the artist who had the shortest life?", 
                "id": 12, 
                "sql": [
                    "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the artists?", 
                        "Which one lived the longests?", 
                        "What was his/her first name and age?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists", 
                        "SELECT * FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1", 
                        "SELECT fname ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name and age of the artist who lived the longest?"
                ], 
                "question": " What are the first name and age of the artist who had the longest life?", 
                "id": 13, 
                "sql": [
                    "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings are there?", 
                        "How many of those are exhibited at gallery 240?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM paintings", 
                        "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\""
                    ]
                }, 
                "paraphrase": [
                    "What is the total number of paintings exhibited in gallery 240?"
                ], 
                "question": " How many paintings are exhibited at gallery 240?", 
                "id": 14, 
                "sql": [
                    "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings did each artist make?", 
                        "How many paintings did the oldest of them make?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID", 
                        "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID ORDER BY T1.deathYear - T1.birthYear DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the painting count of the artist with the longest life?"
                ], 
                "question": " How many paintings did the artist with the longest life make?", 
                "id": 15, 
                "sql": [
                    "SELECT count(*) ,  T2.painterID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID ORDER BY T1.deathYear - T1.birthYear DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has a first name of Mary?", 
                        "Select all paintings created by Mary."
                    ], 
                    "sql": [
                        "SELECT ALL paintings created BY Mary. S: What ARE the NAMES AND years OF ALL those paintings?", 
                        "SELECT * FROM artists WHERE fname  =  \"Mary\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"", 
                        "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\""
                    ]
                }, 
                "paraphrase": [
                    "What is the name and year of each painting created by the artist whose first name is Mary?"
                ], 
                "question": " Give me a list of names and years of paintings that were created by the artist whose first name is Mary.", 
                "id": 16, 
                "sql": [
                    "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist was born before 1850?", 
                        "What paintings did he/she create?", 
                        "What are the widths of those paintings?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE birthYear  <  1850", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850", 
                        "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850"
                    ]
                }, 
                "paraphrase": [
                    "How wide were the paintings by the artist who was born prior to 1850?"
                ], 
                "question": " What are the widths of the paintings that were created by the artist who was born before 1850?", 
                "id": 17, 
                "sql": [
                    "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has a first name of Pablo?", 
                        "What paintings are created by him?", 
                        "What are the location and medium types of those paintings?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE fname  =  \"Pablo\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"", 
                        "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\""
                    ]
                }, 
                "paraphrase": [
                    "In what locations and on what mediums are the paintings created by the artist with the first name Pablo?"
                ], 
                "question": " What are the location and medium type of paintings that are created by the artist whose first name is Pablo?", 
                "id": 18, 
                "sql": [
                    "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have works of paintings?", 
                        "Which artists created some sculptures?", 
                        "What are the first and last names of the artists who have all of them?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID"
                    ]
                }, 
                "paraphrase": [
                    "Give the full names of artists who have created paintings and sculptures."
                ], 
                "question": " Find the first and last names of the artists who have both works of paintings and sculptures?", 
                "id": 19, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have medium oil paintings?", 
                        "Of those, who also have paintings with the lithographic medium?", 
                        "What are their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\""
                    ]
                }, 
                "paraphrase": [
                    "What are the first and last names of artists who have painted using both oil and lithographic mediums?"
                ], 
                "question": " What are the first and last names of the artists who have not only medium oil paintings but also paintings with the lithographic medium?", 
                "id": 20, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"lithograph\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the ids of the artists who created a painting in 1884.", 
                        "Of those, which are ids of artists that painted the work on canvas?", 
                        "What is his birthyear?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"", 
                        "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "In what year was the artist who created a painting in 1884 born?"
                ], 
                "question": " What is the birth year of the artist who created a painting in 1884 that is on canvas?", 
                "id": 21, 
                "sql": [
                    "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the ids of the artists who have medium oil paintings?", 
                        "Of those artists, who has their oil paintings located in gallery 241?", 
                        "What are the different first names of these artists?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"", 
                        "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                    ]
                }, 
                "paraphrase": [
                    "What are first names of the artists with oil paintings in gallery 241?"
                ], 
                "question": " What are the unique first names of the artists who had medium oil paintings located in gallery 241?", 
                "id": 22, 
                "sql": [
                    "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different mediums?", 
                        "How many works are there for each of them?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT medium FROM paintings", 
                        "SELECT count(*) ,  medium FROM paintings GROUP BY medium"
                    ]
                }, 
                "paraphrase": [
                    "How many works are there in each medium?"
                ], 
                "question": " What are the numbers of works for different medium type?", 
                "id": 23, 
                "sql": [
                    "SELECT count(*) ,  medium FROM paintings GROUP BY medium"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different medium types for paintings?", 
                        "For each of them, what is the average height of the works in mm?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT medium FROM paintings", 
                        "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium"
                    ]
                }, 
                "paraphrase": [
                    "What is the average height of paintings for different medium types?"
                ], 
                "question": " What are the average height of paintings for different medium types?", 
                "id": 24, 
                "sql": [
                    "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings were created before 1900?", 
                        "How many were shown/collected in different places?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM paintings WHERE YEAR  <  1900", 
                        "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION"
                    ]
                }, 
                "paraphrase": [
                    "How many paintings were created before 1900 in different locations?"
                ], 
                "question": " What are the numbers of paintings created before 1900 in different places?", 
                "id": 25, 
                "sql": [
                    "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings created after 1910?", 
                        "Of those, which have a medium of oil?", 
                        "What are their titles?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  >  1910", 
                        "SELECT * FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"", 
                        "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\""
                    ]
                }, 
                "paraphrase": [
                    "Give the names of all oil paintings created after 1910."
                ], 
                "question": " What are the titles of paintings that are created after 1910 and whose medium is oil?", 
                "id": 26, 
                "sql": [
                    "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which painters created works in oil?", 
                        "What is id of every painter who has oil paintings exhibited at gallery 240?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\""
                    ]
                }, 
                "paraphrase": [
                    "What is the unique id of every painter who had a medium oil painting displayed at gallery 240?"
                ], 
                "question": " Find the unique id of the painters who had medium oil paintings exhibited at gallery 240?", 
                "id": 27, 
                "sql": [
                    "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the heights of all the paintings?", 
                        "Which of these have a longer height than some paintings on canvas?", 
                        "What are their distinct titles?"
                    ], 
                    "sql": [
                        "SELECT height_mm FROM paintings", 
                        "SELECT height_mm FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")", 
                        "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct titles of every painting that has a greater height than some painting on canvas?"
                ], 
                "question": " Find the distinct titles of all the paintings that have a longer height than some painting on canvas?", 
                "id": 28, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "In what year was the oldest painting in Gallery 240 created?", 
                        "Of these, which are older than one in gallery 240?"
                    ], 
                    "sql": [
                        "SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\"", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")"
                    ]
                }, 
                "paraphrase": [
                    "What are the distinct ids of every painting that is older than some painting in gallery 240?"
                ], 
                "question": " Find the distinct ids of all paintings that are older than some painting at location gallery 240.", 
                "id": 29, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the year of the oldest painting.", 
                        "what is the id of that painting?"
                    ], 
                    "sql": [
                        "SELECT YEAR FROM paintings ORDER BY YEAR LIMIT 1", 
                        "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the oldest painting?"
                ], 
                "question": " Find the id of the oldest painting.", 
                "id": 30, 
                "sql": [
                    "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created sculptures?", 
                        "Of these artists, who created ones with a title that has the word \"female\" in it?", 
                        "What is his/her first and last name?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\""
                    ]
                }, 
                "paraphrase": [
                    "What is the full name of the artist with a sculpture whose title includes the word \"female\"?"
                ], 
                "question": " What are the first and last name of the artist who had a sculpture work whose title has the word \u201cfemale\u201d in it?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the paintings?", 
                        "List them in alphabetical order."
                    ], 
                    "sql": [
                        "SELECT DISTINCT title FROM paintings", 
                        "SELECT DISTINCT title FROM paintings ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of every distinct painting in alphabetical order?"
                ], 
                "question": " List the names of all distinct paintings in alphabetical order.", 
                "id": 32, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all distinct paintings?", 
                        "Order them by length."
                    ], 
                    "sql": [
                        "SELECT DISTINCT title FROM paintings", 
                        "SELECT DISTINCT title FROM paintings ORDER BY height_mm"
                    ]
                }, 
                "paraphrase": [
                    "List the names of all distinct paintings from shortest to longest in height."
                ], 
                "question": " List the names of all distinct paintings ordered by length.", 
                "id": 33, 
                "sql": [
                    "SELECT DISTINCT title FROM paintings ORDER BY height_mm"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which are the names of all the paintings and sculptures?", 
                        "Which of those were created between 1900 and 1950?"
                    ], 
                    "sql": [
                        "SELECT title FROM paintings UNION SELECT title FROM sculptures", 
                        "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of  paintings and scupltures created between 1900 and 1950?"
                ], 
                "question": " What are the names of both paintings and sculptures created between 1900 and 1950?", 
                "id": 34, 
                "sql": [
                    "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artist has an id of 222?", 
                        "What are the titles of all paintings and sculpture works created by him?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists WHERE artistID  =  222", 
                        "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T2.title FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T1.artistID  =  222"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of all paintings and sculpture works made by the artist whose id is 222?"
                ], 
                "question": " Find the titles of paintings and sculpture works made by the artist whose id is 222?", 
                "id": 35, 
                "sql": [
                    "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T2.title FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T1.artistID  =  222"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many paintings did each artist create?", 
                        "How many did each create before 1900?", 
                        "Who painted the most?"
                    ], 
                    "sql": [
                        "SELECT count(*) ,  T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T1.artistID", 
                        "SELECT count(*) ,  T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the artist with the most paintings before 1900?"
                ], 
                "question": " What is the id of the artist who has the highest number of painting works before 1900?", 
                "id": 36, 
                "sql": [
                    "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many sculptures did each artist create?", 
                        "Who created the most?", 
                        "What is their first name?"
                    ], 
                    "sql": [
                        "SELECT T2.sculptorID ,  count(*) FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID", 
                        "SELECT T2.sculptorID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1", 
                        "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name of the sculptor with the greatest number of works?"
                ], 
                "question": " What is the first name of the artist who has the highest number of sculptures?", 
                "id": 37, 
                "sql": [
                    "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the paintings?", 
                        "Which of these have a width less than 600 or a height larger than 800?"
                    ], 
                    "sql": [
                        "SELECT title FROM paintings", 
                        "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800"
                    ]
                }, 
                "paraphrase": [
                    "What are the titles of paintings that have a width less than 600 or a height taller taller than 800?"
                ], 
                "question": " What are the names of paintings whose width is less than 600 or height is larger than 800?", 
                "id": 38, 
                "sql": [
                    "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1885 or after 1930?", 
                        "Where are they all located?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930"
                    ]
                }, 
                "paraphrase": [
                    "What locations have works painted before 1885 or after 1930?"
                ], 
                "question": " Which locations have paintings created before 1885 or after 1930?", 
                "id": 39, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the painting ids that have a height larger than 500?", 
                        "Of these, which also are shorter than 2000?"
                    ], 
                    "sql": [
                        "SELECT paintingID FROM paintings WHERE height_mm  >  500", 
                        "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of paintings that are taller than 500 and shorter than 2000?"
                ], 
                "question": " Find the ids of paintings whose height is bigger than 500 and less than 2000?", 
                "id": 40, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are on panels?", 
                        "Which paintings are on canvas?", 
                        "Which locations contain both?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE mediumOn  =  \"panel\"", 
                        "SELECT * FROM paintings WHERE mediumOn  =  \"canvas\"", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "What are the locations that have paintings in the mediums of on panels and on canvas?"
                ], 
                "question": " Which locations have paintings in the mediums of on panel and on canvas?", 
                "id": 41, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1885?", 
                        "Where were these paintings located?", 
                        "Which of these locations also had paintings created after 1930?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  <  1885", 
                        "SELECT LOCATION FROM paintings WHERE YEAR  <  1885", 
                        "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930"
                    ]
                }, 
                "paraphrase": [
                    "What are the locations that have works painted before 1885 and after 1930?"
                ], 
                "question": " Find the locations that have paintings created before 1885 and after 1930?", 
                "id": 42, 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are on oil medium?", 
                        "Of these, which are located in gallery 241?", 
                        "What is their average height and width?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"", 
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                    ]
                }, 
                "paraphrase": [
                    "What is the average height and width of paintings that are oil medium in gallery 241?"
                ], 
                "question": " What are the average height and width of paintings that are oil medium in the place of gallery 241?", 
                "id": 43, 
                "sql": [
                    "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings were created before 1900?", 
                        "What is the id of the painting with the maximum height?", 
                        "Also what is that height?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  <  1900", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <  1900 ORDER BY height_mm DESC LIMIT 1", 
                        "SELECT height_mm FROM paintings WHERE YEAR  <  1900 ORDER BY height_mm DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What is the height and id of the tallest painting created before 1900?"
                ], 
                "question": " What are the maximum height and id of paintings painted before 1900?", 
                "id": 44, 
                "sql": [
                    "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Group and order the paintings by year.", 
                        "For each year, what are the maximum height and width?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings GROUP BY YEAR ORDER BY YEAR", 
                        "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR"
                    ]
                }, 
                "paraphrase": [
                    "What are largest height and width dimensions for paintings in each year?"
                ], 
                "question": " What are the maximum height and width of paintings for each year?", 
                "id": 45, 
                "sql": [
                    "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the average height and width of the paintings?", 
                        "Order them by their names.", 
                        "Group them by the painters' ids."
                    ], 
                    "sql": [
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings", 
                        "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings ORDER BY title", 
                        "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "Find the average height and width of paintings grouped by painters and ordered by name"
                ], 
                "question": " What are the average height and width of paintings grouped by painters and ordered by name?", 
                "id": 46, 
                "sql": [
                    "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists have at least two paintings?", 
                        "What are their first names?", 
                        "Also, how many works did each artist produce?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2", 
                        "SELECT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2", 
                        "SELECT T1.artistID ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names of all artists who have at least two paintings, and how many works did each create?"
                ], 
                "question": " Find the first names and number of works of all artists who have at least two paintings?", 
                "id": 47, 
                "sql": [
                    "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created less than 4 paintings?", 
                        "When did each one die?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <  4", 
                        "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <  4"
                    ]
                }, 
                "paraphrase": [
                    "When did each artist who created less than 4 paintings die?"
                ], 
                "question": " Find the death year of all artists who have at most 3 paintings?", 
                "id": 48, 
                "sql": [
                    "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the id of all artists who made some scupltures.", 
                        "Of these, who created the fewest?", 
                        "When did he die?"
                    ], 
                    "sql": [
                        "SELECT T1.artistID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.artistID FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1", 
                        "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "When did the artist who made the fewest sculptures die?"
                ], 
                "question": " Find the death year of the artist who made the least number of sculptures?", 
                "id": 49, 
                "sql": [
                    "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the paintings in gallery 240?", 
                        "Out of those, which is the widest?", 
                        "What is its id and height?"
                    ], 
                    "sql": [
                        "SELECT paintingID FROM paintings WHERE LOCATION  =  'Gallery 240'", 
                        "SELECT paintingID FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1", 
                        "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "Tell me the height and id number of the widest painting in gallery 240."
                ], 
                "question": " What are the id and height of the painting with the longest width in gallery 240?", 
                "id": 50, 
                "sql": [
                    "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "When was each painting in gallery 240 created?", 
                        "Which one is the oldest?", 
                        "Select the ids of all paintings older than that one."
                    ], 
                    "sql": [
                        "SELECT the ids OF ALL paintings older THAN that one.", 
                        "SELECT YEAR FROM paintings WHERE LOCATION  =  'Gallery 240'", 
                        "SELECT * FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY YEAR LIMIT 1", 
                        "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of every painting created before the oldest painting in gallery 240?"
                ], 
                "question": " What are the ids of the paintings created before all of the paintings in gallery 240?", 
                "id": 51, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Show all paintings created after 1900", 
                        "What is their maximum height?", 
                        "What are the ids of the paintings whose height is higher than that maximum height?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE YEAR  >  1900", 
                        "SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900", 
                        "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)"
                    ]
                }, 
                "paraphrase": [
                    "List the ids of all paintings that are taller than the longest painting created after 1900."
                ], 
                "question": " What are the ids of the paintings whose height is longer than the height of all paintings created after 1900?", 
                "id": 52, 
                "sql": [
                    "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created paintings in oil?", 
                        "How many did each paint?", 
                        "Find the last and first name of the three created the most."
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\"", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3"
                    ]
                }, 
                "paraphrase": [
                    "Which artists have the most paintings in oil?"
                ], 
                "question": " Find the top 3 artists who have the biggest number of painting works whose medium is oil?", 
                "id": 53, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Select all of the medium oil paintings"
                    ], 
                    "sql": [
                        "SELECT ALL OF the medium oil paintings S: ORDER them BY date OF creation. S: What ARE their ids ,  locations ,  AND NAMES?", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\"", 
                        "SELECT * FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR", 
                        "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =   \"oil\" ORDER BY YEAR"
                    ]
                }, 
                "paraphrase": [
                    "Order all of the oil paintings by date of creation and list their ids, locations, and titles."
                ], 
                "question": " List the painting id, location and title of the medium oil paintings ordered by year.", 
                "id": 54, 
                "sql": [
                    "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the paintings alphabetically by their titles.", 
                        "Which ones are taller than 1000?", 
                        "Select their title, when were they created and where are they located?"
                    ], 
                    "sql": [
                        "SELECT their title ,  WHEN were they created AND WHERE ARE they located?", 
                        "SELECT * FROM paintings ORDER BY title", 
                        "SELECT * FROM paintings WHERE height_mm  >  1000 ORDER BY title", 
                        "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title"
                    ]
                }, 
                "paraphrase": [
                    "List the year, location, and name of all paintings that are taller than 1000 in alphabetical order."
                ], 
                "question": " List the year, location and title of paintings whose height is longer than 1000 ordered by title.", 
                "id": 55, 
                "sql": [
                    "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which artists created paintings?", 
                        "Out of those, who never created a sculpture?", 
                        "What are their first and last names?"
                    ], 
                    "sql": [
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID", 
                        "SELECT * FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT * FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID", 
                        "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID"
                    ]
                }, 
                "paraphrase": [
                    "What are the first and last names of the artists who did not sculpt but could paint."
                ], 
                "question": " Find the first and last name of artists who have painting but no sculpture work.", 
                "id": 56, 
                "sql": [
                    "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which paintings are not on canvas?", 
                        "Which of these were created before 1885?", 
                        "Where are they located?"
                    ], 
                    "sql": [
                        "SELECT * FROM paintings WHERE mediumOn ! =  \"canvas\"", 
                        "SELECT * FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\"", 
                        "SELECT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\""
                    ]
                }, 
                "paraphrase": [
                    "Where do you have paintings that were created before 1885 that are not on canvas?"
                ], 
                "question": " Find the locations that have paintings before 1885 and no work with medium on canvas?", 
                "sql": [
                    "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn ! =  \"canvas\""
                ]
            }
        ], 
        "review_id": ""
    }, 
    "pets_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What information is there on pets?", 
                        "Which pets weigh more than 10?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets", 
                        "SELECT * FROM pets WHERE weight  >  10", 
                        "SELECT count(*) FROM pets WHERE weight  >  10"
                    ]
                }, 
                "paraphrase": [
                    "How many pets have a greater weight than 10?"
                ], 
                "question": " Find the number of pets whose weight is heavier than 10.", 
                "id": 1, 
                "sql": [
                    "SELECT count(*) FROM pets WHERE weight  >  10"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order the pets by age", 
                        "How much does each one weigh?", 
                        "What about the first one?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets ORDER BY pet_age", 
                        "SELECT weight FROM pets ORDER BY pet_age", 
                        "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "How much does the youngest dog weigh?"
                ], 
                "question": " Find the weight of the youngest dog.", 
                "id": 2, 
                "sql": [
                    "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different types of pets?", 
                        "For each of those types, what is the maximum weight?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT petType FROM pets", 
                        "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
                    ]
                }, 
                "paraphrase": [
                    "List the maximum weight and type for each type of pet."
                ], 
                "question": " Find the maximum weight for each type of pet. List the maximum weight and pet type.", 
                "id": 3, 
                "sql": [
                    "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which pets are owned by students older than 20?", 
                        "How many are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", 
                        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
                    ]
                }, 
                "paraphrase": [
                    "How many pets are owned by students that have an age greater than 20?"
                ], 
                "question": " Find number of pets owned by students who are older than 20.", 
                "id": 4, 
                "sql": [
                    "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the female students?", 
                        "Of those, who has a pet?", 
                        "How many of those have dogs?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE sex  =  'F'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'", 
                        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "How many dog pets are raised by female students?"
                ], 
                "question": " Find the number of dog pets that are raised by female students (with sex F).", 
                "id": 5, 
                "sql": [
                    "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different pet types?", 
                        "How many exist?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT pettype FROM pets", 
                        "SELECT count(DISTINCT pettype) FROM pets"
                    ]
                }, 
                "paraphrase": [
                    "How many different types of pet are there?"
                ], 
                "question": " Find the number of distinct type of pets.", 
                "id": 6, 
                "sql": [
                    "SELECT count(DISTINCT pettype) FROM pets"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "what is the first name of every student?", 
                        "Of those names, which ones correspond to somebody who has a cat?", 
                        "Also, combine those names with those who have a dog."
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.Fname FROM student AS T1", 
                        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names of every student who has a cat or dog as a pet?"
                ], 
                "question": " Find the first name of students who have cat or dog pet.", 
                "id": 7, 
                "sql": [
                    "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have a dog as their type of pet?", 
                        "Who also has a cat?", 
                        "What are their first names?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'"
                    ]
                }, 
                "paraphrase": [
                    "What are the students' first names who have both cats and dogs as pets?"
                ], 
                "question": "Find the name of students who have both cat and dog pets.", 
                "id": 8, 
                "sql": [
                    "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have a cat as their pets?", 
                        "What are they majoring in?", 
                        "Also, how old are they?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE stuid NOT IN", 
                        "SELECT major FROM student WHERE stuid NOT IN", 
                        "SELECT major ,  age FROM student WHERE stuid NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What major is every student who does not own a cat as a pet, and also how old are they?"
                ], 
                "question": " Find the major and age of students who do not have a cat pet.", 
                "id": 9, 
                "sql": [
                    "SELECT major ,  age FROM student WHERE stuid NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is every student's id?", 
                        "Of those ids, which correspond to those who own cats as pets?", 
                        "List all the other ids."
                    ], 
                    "sql": [
                        "SELECT stuid FROM student", 
                        "SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of the students who do not own cats as pets?"
                ], 
                "question": " Find the id of students who do not have a cat pet.", 
                "id": 10, 
                "sql": [
                    "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have dogs?", 
                        "Of those, who does not own a cat?", 
                        "What are their first names and ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", 
                        "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name of every student who has a dog but does not have a cat?"
                ], 
                "question": " Find the first name and age of students who have a dog but do not have a cat as a pet.", 
                "id": 11, 
                "sql": [
                    "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who is the youngest pet?", 
                        "What type are they?", 
                        "Also, how much do they weigh?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets ORDER BY pet_age LIMIT 1", 
                        "SELECT pettype FROM pets ORDER BY pet_age LIMIT 1", 
                        "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
                    ]
                }, 
                "paraphrase": [
                    "What type of pet is the youngest animal, and how much does it weigh?"
                ], 
                "question": " Find the type and weight of the youngest pet.", 
                "id": 12, 
                "sql": [
                    "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are ids of every pet?", 
                        "For those, which refer to pets older than 1?", 
                        "Also, how much do they weigh?"
                    ], 
                    "sql": [
                        "SELECT petid FROM pets", 
                        "SELECT petid FROM pets WHERE pet_age  >  1", 
                        "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the id and weight of every pet who is older than 1?"
                ], 
                "question": " Find the id and weight of all pets whose age is older than 1.", 
                "id": 13, 
                "sql": [
                    "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different pet types?", 
                        "For each of those, what is the maximum age?", 
                        "What about the average age?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT pettype FROM pets", 
                        "SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype", 
                        "SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype"
                    ]
                }, 
                "paraphrase": [
                    "What is the average and maximum age for each pet type?"
                ], 
                "question": " Find the average and maximum age for each type of pet.", 
                "id": 14, 
                "sql": [
                    "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What information is there on pets?", 
                        "For each pet type, what is the average weight?"
                    ], 
                    "sql": [
                        "SELECT * FROM pets", 
                        "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
                    ]
                }, 
                "paraphrase": [
                    "What is the average weight for each type of pet?"
                ], 
                "question": " Find the average weight for each pet type.", 
                "id": 15, 
                "sql": [
                    "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have pets?", 
                        "What are the different first names?", 
                        "Also, what are their ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
                    ]
                }, 
                "paraphrase": [
                    "What are the different first names and ages of the students who do have pets?"
                ], 
                "question": " Find the first name and age of students who have a pet.", 
                "id": 16, 
                "sql": [
                    "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students have pets?", 
                        "Of those, whose last name is smith?", 
                        "What is their pet's id?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", 
                        "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
                    ]
                }, 
                "paraphrase": [
                    "What is the id of the pet owned by the student whose last name is 'Smith'?"
                ], 
                "question": " Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", 
                "id": 17, 
                "sql": [
                    "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which of the students have pets?", 
                        "How many pets does each of them have?"
                    ], 
                    "sql": [
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", 
                        "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
                    ]
                }, 
                "paraphrase": [
                    "For students who have pets, how many pets does each student have?"
                ], 
                "question": " Find the number of pets for each student who has any pet and student id.", 
                "id": 18, 
                "sql": [
                    "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the first name and sex of each student?", 
                        "Which of those belong to somebody who has more than one pet?"
                    ], 
                    "sql": [
                        "SELECT T1.fname ,  T1.sex FROM student AS T1", 
                        "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What is the first name and gender of the all the students who have more than one pet?"
                ], 
                "question": " Find the first name and gender of student who have more than one pet.", 
                "id": 19, 
                "sql": [
                    "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the id of the three-year old cat?", 
                        "Who is the owner of that cat?", 
                        "What is their last name?"
                    ], 
                    "sql": [
                        "SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'", 
                        "SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", 
                        "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'"
                    ]
                }, 
                "paraphrase": [
                    "What is the last name of the student who has a cat that is 3 years old?"
                ], 
                "question": " Find the last name of the student who has a cat that is age 3.", 
                "id": 20, 
                "sql": [
                    "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which students do not own any pets?", 
                        "What is their average age?"
                    ], 
                    "sql": [
                        "SELECT * FROM student WHERE stuid NOT IN", 
                        "SELECT avg(age) FROM student WHERE stuid NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What is the average age for all students who do not own any pets?"
                ], 
                "question": " Find the average age of students who do not have any pet.", 
                "sql": [
                    "SELECT avg(age) FROM student WHERE stuid NOT IN"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "flight_2": {
        "label_id": "", 
        "data": [], 
        "review_id": ""
    }, 
    "hr_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "What are the first names of all employees?", 
                        "Also, what are their department names?"
                    ], 
                    "sql": [
                        "SELECT first_name FROM employees", 
                        "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the first name and department name of all employees?"
                ], 
                "question": " Display the first name and department name for each employee.", 
                "id": 1, 
                "sql": [
                    "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees earn less than 6000?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE salary  <  6000", 
                        "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and salaries for any employees earning less than 6000?"
                ], 
                "question": " List the full name (first and last name), and salary for those employees who earn below 6000.", 
                "id": 2, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "List the first name and department id for all employees?", 
                        "Of these, include the ones for employees with last name McEwen."
                    ], 
                    "sql": [
                        "SELECT first_name ,  department_id FROM employees", 
                        "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
                    ]
                }, 
                "paraphrase": [
                    "What are the first names and department numbers for employees with last name McEwen?"
                ], 
                "question": " Display the first name, and department number for all employees whose last name is \"McEwen\".", 
                "id": 3, 
                "sql": [
                    "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Return all the information for all employees.", 
                        "Of those, which have no department number?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE department_id IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are all the employees without a department number?"
                ], 
                "question": " Return all the information for all employees without any department number.", 
                "id": 4, 
                "sql": [
                    "SELECT * FROM employees WHERE department_id IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about all the departments?", 
                        "Of those, what is the information about the Marketing department?"
                    ], 
                    "sql": [
                        "SELECT * FROM  departments", 
                        "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the Marketing department?"
                ], 
                "question": " Display all the information about the department Marketing.", 
                "id": 5, 
                "sql": [
                    "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information on employees?", 
                        "Of those, which do not have the letter M in their first names?", 
                        "What were their hire dates?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
                    ]
                }, 
                "paraphrase": [
                    "On what dates were employees without the letter M in their first names hired?"
                ], 
                "question": " when is the hire date for those employees whose first name does not containing the letter M?", 
                "id": 6, 
                "sql": [
                    "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information on employees?", 
                        "Of those, which do not have the letter M in their first names?", 
                        "What were their full names, hire dates, salaries, and department numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?"
                ], 
                "question": " display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", 
                "id": 7, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees do not have the letter M in their first names?", 
                        "What were their full names, hire dates, salaries, and department numbers?", 
                        "Order these by ascending department number."
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", 
                        "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?"
                ], 
                "question": " display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", 
                "id": 8, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employees' phone numbers?", 
                        "Return only those for employees with salaries between 8000 and 12000."
                    ], 
                    "sql": [
                        "SELECT phone_number FROM employees", 
                        "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
                    ]
                }, 
                "paraphrase": [
                    "Return the phone numbers of employees with salaries between 8000 and 12000."
                ], 
                "question": " what is the phone number of employees whose salary is in the range of 8000 and 12000?", 
                "id": 9, 
                "sql": [
                    "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the employees with salaries between 8000 and 12000?", 
                        "Of those, who has a commission that is not null or department id which is not equal to 40?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000", 
                        "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL OR  department_id ! =  40"
                    ]
                }, 
                "paraphrase": [
                    "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40."
                ], 
                "question": " display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.", 
                "id": 10, 
                "sql": [
                    "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct IS NOT NULL OR  department_id ! =  40"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names and salaries of all employees?", 
                        "Of those, which have null comissions?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name ,  salary FROM  employees", 
                        "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct IS NULL"
                    ]
                }, 
                "paraphrase": [
                    "Return the full names and salaries of employees with null commissions."
                ], 
                "question": " What are the full name (first and last name) and salary for all employees who does not have any value for commission?", 
                "id": 11, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct IS NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employees with first names that end with m?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name LIKE '%m'", 
                        "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
                    ]
                }, 
                "paraphrase": [
                    "Return the full names and salaries for employees with first names that end with the letter m."
                ], 
                "question": " Display the first and last name, and salary for those employees whose first name is ending with the letter m.", 
                "id": 12, 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which employees were hired between November 5th, 2007 and July 5th, 2009?", 
                        "What are their job ids and hire dates?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", 
                        "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?"
                ], 
                "question": " Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.", 
                "id": 13, 
                "sql": [
                    "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all employees?", 
                        "Of those, who are in department 70 or 90?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names of employees who with in department 70 or 90?"
                ], 
                "question": " What are the first and last name for those employees who works either in department 70 or 90?", 
                "id": 14, 
                "sql": [
                    "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the employees who are working under a manager?", 
                        "What are their salaries and manager numbers?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE manager_id IS NOT NULL", 
                        "SELECT salary ,  manager_id FROM employees WHERE manager_id IS NOT NULL"
                    ]
                }, 
                "paraphrase": [
                    "What are the salaries and manager ids for employees who have managers?"
                ], 
                "question": " Find the salary and manager number for those employees who is working under a manager.", 
                "id": 15, 
                "sql": [
                    "SELECT salary ,  manager_id FROM employees WHERE manager_id IS NOT NULL"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about employees?", 
                        "Of those, which were hired before 2002-06-21?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees hired before June 21, 2002?"
                ], 
                "question": " display all the details from Employees table for those employees who was hired before 2002-06-21.", 
                "id": 16, 
                "sql": [
                    "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about employees with a D, S or N in their first name?", 
                        "Order those by decreasing salary."
                    ], 
                    "sql": [
                        "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%'", 
                        "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%' ORDER BY salary DESC"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees with D, S, or N in their first name, ordered by salary descending?"
                ], 
                "question": " display all the information for all employees who have the letters D, S, or N in their first name and also arrange the result in descending order by salary.", 
                "id": 17, 
                "sql": [
                    "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' OR first_name LIKE '%N%' ORDER BY salary DESC"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about the employees?", 
                        "Of those, who was hired after September 7th, 1987?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees", 
                        "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
                    ]
                }, 
                "paraphrase": [
                    "Which employees were hired after September 7th, 1987?"
                ], 
                "question": " display those employees who joined after 7th September, 1987.", 
                "id": 18, 
                "sql": [
                    "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the job titles?", 
                        "Of those, which correspond to jobs with salaries over 9000?"
                    ], 
                    "sql": [
                        "SELECT job_title FROM jobs", 
                        "SELECT job_title FROM jobs WHERE min_salary  >  9000"
                    ]
                }, 
                "paraphrase": [
                    "Which job titles correspond to jobs with salaries over 9000?"
                ], 
                "question": " display the job title of jobs which minimum salary is greater than 9000.", 
                "id": 19, 
                "sql": [
                    "SELECT job_title FROM jobs WHERE min_salary  >  9000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about jobs with max salary between 12000 and 18000?", 
                        "What are the job titles and differences between max and min salaries for those jobs?"
                    ], 
                    "sql": [
                        "SELECT * FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", 
                        "SELECT job_title ,  max_salary-min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
                    ]
                }, 
                "paraphrase": [
                    "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?"
                ], 
                "question": " display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", 
                "id": 20, 
                "sql": [
                    "SELECT job_title ,  max_salary-min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the emails of employees who have no commission percentage?", 
                        "Of those, which have salaries between 7000 and 12000?", 
                        "Of those, which work in the department with id number 50?"
                    ], 
                    "sql": [
                        "SELECT email FROM employees WHERE commission_pct IS NULL", 
                        "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000", 
                        "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
                    ]
                }, 
                "paraphrase": [
                    "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?"
                ], 
                "question": " display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.", 
                "id": 21, 
                "sql": [
                    "SELECT email FROM employees WHERE commission_pct IS NULL AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the job history information?", 
                        "What are the unique employee ids?", 
                        "What are the latest end dates corresponding to each one?"
                    ], 
                    "sql": [
                        "SELECT * FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id", 
                        "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for each employee and final dates of employment at their last job?"
                ], 
                "question": " display the employee ID for each employee and the date on which he ended his previous job.", 
                "id": 22, 
                "sql": [
                    "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different department ids?", 
                        "Of these, which had more than 10 employees with commissions?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees GROUP BY department_id", 
                        "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
                    ]
                }, 
                "paraphrase": [
                    "What are the department ids for which more than 10 employees had a commission?"
                ], 
                "question": " display those departments where more than ten employees work who got a commission percentage.", 
                "id": 23, 
                "sql": [
                    "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the manager ids of managers who manage 4 or more employees?", 
                        "What are their department ids?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id)  >= 4", 
                        "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                    ]
                }, 
                "paraphrase": [
                    "What are department ids for departments with managers managing more than 3 employees?"
                ], 
                "question": " Find the ids of the departments where any manager is managing 4 or more employees.", 
                "id": 24, 
                "sql": [
                    "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for employees, by department id?", 
                        "What is this if employees without commission percentages are excluded?"
                    ], 
                    "sql": [
                        "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id", 
                        "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What is the average salary of employees who have a commission percentage that is not null?"
                ], 
                "question": " display the average salary of employees for each department who gets a commission percentage.", 
                "id": 25, 
                "sql": [
                    "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct IS NOT NULL GROUP BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many cities are there?", 
                        "Count the cities by their country ids."
                    ], 
                    "sql": [
                        "SELECT COUNT(*) FROM locations", 
                        "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
                    ]
                }, 
                "paraphrase": [
                    "Give the country id and corresponding count of cities in each country."
                ], 
                "question": " display the country ID and number of cities for each country.", 
                "id": 26, 
                "sql": [
                    "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are job ids for jobs that lasted more than 300 days?", 
                        "Of these, which have been done more than once?"
                    ], 
                    "sql": [
                        "SELECT job_id FROM job_history WHERE end_date-start_date  > 300", 
                        "SELECT job_id FROM job_history WHERE end_date-start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids for jobs done more than once for a period of more than 300 days?"
                ], 
                "question": " display job ID for those jobs that were done by two or more for more than 300 days.", 
                "id": 27, 
                "sql": [
                    "SELECT job_id FROM job_history WHERE end_date-start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the different employee ids in the job history table?", 
                        "Of these, which have had two or more jobs?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for employees who have held two or more jobs?"
                ], 
                "question": " display the ID for those employees who did two or more jobs in the past.", 
                "id": 28, 
                "sql": [
                    "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employee ids?", 
                        "Also, what are the names of the countries that they work in?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees", 
                        "SELECT employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                    ]
                }, 
                "paraphrase": [
                    "What are all the employee ids and the names of the countries in which they work?"
                ], 
                "question": " Find employee with ID and name of the country presently where (s)he is working.", 
                "id": 29, 
                "sql": [
                    "SELECT employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many employees are there?", 
                        "Group these counts by department name."
                    ], 
                    "sql": [
                        "SELECT COUNT(*) FROM employees", 
                        "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
                    ]
                }, 
                "paraphrase": [
                    "Give the name of each department and the number of employees in each."
                ], 
                "question": " display the department name and number of employees in each of the department.", 
                "id": 30, 
                "sql": [
                    "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the job history information?", 
                        "What is all the job history information for employees making over 12000?"
                    ], 
                    "sql": [
                        "SELECT * FROM  job_history", 
                        "SELECT T1.* FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
                    ]
                }, 
                "paraphrase": [
                    "What is all the job history info done by employees earning a salary greater than or equal to 12000?"
                ], 
                "question": " Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.* FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for all employees?", 
                        "What are the average salaries by job title?"
                    ], 
                    "sql": [
                        "SELECT AVG(salary) FROM employees", 
                        "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
                    ]
                }, 
                "paraphrase": [
                    "What is the average salary for each job title?"
                ], 
                "question": " display job title and average salary of employees.", 
                "id": 32, 
                "sql": [
                    "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the salary of employee with id 163?", 
                        "What is all employee information for employees making more than employee 163?", 
                        "What are the full names of these employees?"
                    ], 
                    "sql": [
                        "SELECT salary FROM employees WHERE employee_id = 163", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT first_name ,  last_name FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "Provide the full names of employees earning more than the employee with id 163."
                ], 
                "question": " What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", 
                "id": 33, 
                "sql": [
                    "SELECT first_name ,  last_name FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all employees?", 
                        "What are these numbers by department id?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees", 
                        "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
                    ]
                }, 
                "paraphrase": [
                    "What is the minimum salary in each department?"
                ], 
                "question": " return the smallest salary for every departments.", 
                "id": 34, 
                "sql": [
                    "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all departments?", 
                        "What information is available for employees who make that much?", 
                        "What are their first and last names and department ids?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees GROUP BY department_id", 
                        "SELECT * FROM employees WHERE salary IN", 
                        "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and department ids for the lowest paid employees across all departments."
                ], 
                "question": " Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", 
                "id": 35, 
                "sql": [
                    "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary across all employees?", 
                        "Which employees make more than that?", 
                        "What are their ids?"
                    ], 
                    "sql": [
                        "SELECT AVG(salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for employees who make more than the average?"
                ], 
                "question": " Find the employee id for all employees who earn more than the average salary.", 
                "id": 36, 
                "sql": [
                    "SELECT employee_id FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the id for the employee whose first name is Payam?", 
                        "Which employees' manager is him?", 
                        "What are their ids and salaries?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees WHERE first_name  =  'Payam'", 
                        "SELECT * FROM employees WHERE manager_id  = ", 
                        "SELECT employee_id ,  salary FROM employees WHERE manager_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids of employees who report to Payam, and what are their salaries?"
                ], 
                "question": " display the employee id and salary of all employees who report to Payam (first name).", 
                "id": 37, 
                "sql": [
                    "SELECT employee_id ,  salary FROM employees WHERE manager_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Find the name of all departments.", 
                        "What about those that have at least one employee."
                    ], 
                    "sql": [
                        "SELECT DISTINCT department_name FROM departments", 
                        "SELECT DISTINCT department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of departments that have at least one employee."
                ], 
                "question": " find the name of all departments that do actually have one or more employees assigned to them.", 
                "id": 38, 
                "sql": [
                    "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the manager ids of the different departments?", 
                        "What is all the employee information regarding these managers?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM departments", 
                        "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information regarding employees who are managers?"
                ], 
                "question": " get the details of employees who manage a department.", 
                "id": 39, 
                "sql": [
                    "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is all the information about all the departments?", 
                        "Of these, what information pertains to the Marketing department?"
                    ], 
                    "sql": [
                        "SELECT * FROM  departments", 
                        "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about the Marketing department?"
                ], 
                "question": " display all the information about the department Marketing.", 
                "id": 40, 
                "sql": [
                    "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of employees who have job history available?", 
                        "Which of them have held two or more jobs?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history", 
                        "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids for those who had two or more jobs."
                ], 
                "question": " display the ID for those employees who did two or more jobs in the past.", 
                "id": 41, 
                "sql": [
                    "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the manager ids for managers who are in charge of 4 or more employees?", 
                        "What are the distinct department ids for the departments they belong to?"
                    ], 
                    "sql": [
                        "SELECT manager_id FROM employees GROUP BY manager_id HAVING COUNT(employee_id)  >= 4", 
                        "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                    ]
                }, 
                "paraphrase": [
                    "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?"
                ], 
                "question": " What are the unique ids of those departments where any manager is managing 4 or more employees.", 
                "id": 42, 
                "sql": [
                    "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary for each job?", 
                        "What are the job ids for jobs that average more than 8000?"
                    ], 
                    "sql": [
                        "SELECT avg(salary) FROM employees GROUP BY job_id", 
                        "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
                    ]
                }, 
                "paraphrase": [
                    "What are the job ids corresponding to jobs with average salary above 8000?"
                ], 
                "question": " Find the job ID for those jobs which average salary is above 8000.", 
                "id": 43, 
                "sql": [
                    "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the employee ids for employees in department 80?", 
                        "Also, what are their job titles?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM employees WHERE department_id = 80", 
                        "SELECT T1.employee_id ,  T2.job_title FROM employees T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
                    ]
                }, 
                "paraphrase": [
                    "what are the employee ids and job titles for employees in department 80?"
                ], 
                "question": " display the employee ID and job name for all those jobs in department 80.", 
                "id": 44, 
                "sql": [
                    "SELECT T1.employee_id ,  T2.job_title FROM employees T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are the employees working in the Finance department?", 
                        "What are their first names and job ids?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", 
                        "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
                    ]
                }, 
                "paraphrase": [
                    "Give the first name and job id for all employees in the Finance department."
                ], 
                "question": " What is the first name and job id for all employees in the Finance department?", 
                "id": 45, 
                "sql": [
                    "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary across all employees?", 
                        "Which employees make more than that?", 
                        "Of those, which make less than 2500?"
                    ], 
                    "sql": [
                        "SELECT MIN(salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT * FROM employees WHERE salary BETWEEN"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information regarding employees with salaries above the minimum and under 2500?"
                ], 
                "question": " display all the information of the employees whose salary if within the range of smallest salary and 2500.", 
                "id": 46, 
                "sql": [
                    "SELECT * FROM employees WHERE salary BETWEEN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids with managers who have ids between 100 and 200?", 
                        "What is all the information about employees who do not work in those departments?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200", 
                        "SELECT * FROM employees WHERE department_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?"
                ], 
                "question": " Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.", 
                "id": 47, 
                "sql": [
                    "SELECT * FROM employees WHERE department_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments that have someone with the first name Clara?", 
                        "What is all the information about employees in those departments?", 
                        "What are the full names and hire dates of those employees?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name  =  \"Clara\"", 
                        "SELECT * FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and hire dates for employees in the same department as someone with the first name Clara?"
                ], 
                "question": " display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", 
                "id": 48, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments that have someone with the first name Clara?", 
                        "What is all the information about employees in those departments?", 
                        "What are the full names and hire dates of those employees?", 
                        "Of those, who does not have the first name Clara?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name  =  \"Clara\"", 
                        "SELECT * FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = ", 
                        "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?"
                ], 
                "question": " display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", 
                "id": 49, 
                "sql": [
                    "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments with employees who have the letter T in their first name?", 
                        "Who are the employees in those departments?", 
                        "What are their ids and full names?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees WHERE first_name LIKE '%T%'", 
                        "SELECT * FROM employees WHERE department_id IN", 
                        "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?"
                ], 
                "question": " display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019.", 
                "id": 50, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average salary across all employees?", 
                        "Which employees make more than that?", 
                        "Of those, which work in departments with employees who have the letter J in their first name?", 
                        "What are their ids, full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT AVG (salary) FROM employees", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?"
                ], 
                "question": " display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", 
                "id": 51, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the lowest salary for someone with the title MK_MAN?", 
                        "Which employees make less than that?", 
                        "What are their employee ids and job ids?"
                    ], 
                    "sql": [
                        "SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN'", 
                        "SELECT * FROM employees WHERE salary  < ", 
                        "SELECT employee_id ,  job_id FROM employees WHERE salary  < "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?"
                ], 
                "question": " display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", 
                "id": 52, 
                "sql": [
                    "SELECT employee_id ,  job_id FROM employees WHERE salary  < "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the highest salary for someone with the title PU_MAN?", 
                        "Which employees make more than that?", 
                        "What are their employee ids, full names, and job ids?"
                    ], 
                    "sql": [
                        "SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN'", 
                        "SELECT * FROM employees WHERE salary  > ", 
                        "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  > "
                    ]
                }, 
                "paraphrase": [
                    "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?"
                ], 
                "question": " display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", 
                "id": 53, 
                "sql": [
                    "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  > "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the department ids for departments which have more than 2 employees?", 
                        "What is the sum of the salaries within each of those departments?"
                    ], 
                    "sql": [
                        "SELECT department_id FROM employees GROUP BY department_id HAVING count(*)  >=  2", 
                        "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
                    ]
                }, 
                "paraphrase": [
                    "What are total salaries and department id for each department that has more than 2 employees?"
                ], 
                "question": " display the department id and the total salary for those departments which contains at least two employees.", 
                "id": 54, 
                "sql": [
                    "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the employee ids for employees who have had a job in the past?", 
                        "What is all the information for employees who are not a part of those?"
                    ], 
                    "sql": [
                        "SELECT employee_id FROM job_history GROUP BY employee_id", 
                        "SELECT * FROM employees WHERE employee_id NOT IN"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about employees who have never had a job in the past?"
                ], 
                "question": " display all the information of those employees who did not have any job in the past.", 
                "id": 55, 
                "sql": [
                    "SELECT * FROM employees WHERE employee_id NOT IN"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the max salary in each department?", 
                        "What are the first name, last name, salary and department id for employees who make the most in their departments?"
                    ], 
                    "sql": [
                        "SELECT MAX(salary) FROM employees GROUP BY department_id", 
                        "SELECT first_name ,   last_name ,   salary ,  department_id FROM employees GROUP BY department_id HAVING salary  =  MAX(salary)"
                    ]
                }, 
                "paraphrase": [
                    "What are the department ids, full names, and salaries for employees who make the most in their departments?"
                ], 
                "question": " display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", 
                "id": 56, 
                "sql": [
                    "SELECT first_name ,   last_name ,   salary ,  department_id FROM employees GROUP BY department_id HAVING salary  =  MAX(salary)"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the first and last names for each employee?", 
                        "Also, what are their department names?", 
                        "Also, what are their city and state provinces?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT T1.first_name ,  T1.last_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", 
                        "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names, departments, cities, and state provinces for each employee?"
                ], 
                "question": " display the first and last name, department, city, and state province for each employee.", 
                "id": 57, 
                "sql": [
                    "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names of each employee?", 
                        "Also, what cities are their departments in?", 
                        "Of these, which have the letter Z in their first name?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name FROM employees", 
                        "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", 
                        "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
                    ]
                }, 
                "paraphrase": [
                    "What are the full names and cities of employees who have the letter Z in their first names?"
                ], 
                "question": " display those employees who contain a letter z to their first name and also display their last name, city.", 
                "id": 58, 
                "sql": [
                    "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of each department?", 
                        "Also, in what city and state province are they in?"
                    ], 
                    "sql": [
                        "SELECT department_name FROM departments", 
                        "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
                    ]
                }, 
                "paraphrase": [
                    "What are the department names, cities, and state provinces for each department?"
                ], 
                "question": " display the department name, city, and state province for each department.", 
                "id": 59, 
                "sql": [
                    "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the full names and ids for all employees?", 
                        "Also, what are the names of the countries that they work in?"
                    ], 
                    "sql": [
                        "SELECT first_name ,  last_name ,  employee_id FROM employees", 
                        "SELECT first_name ,  last_name ,  employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                    ]
                }, 
                "paraphrase": [
                    "What the full names, ids of each employee and the name of the country they are in?"
                ], 
                "question": " display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", 
                "id": 60, 
                "sql": [
                    "SELECT first_name ,  last_name ,  employee_id ,  country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different department names?", 
                        "How many employees work in each one?"
                    ], 
                    "sql": [
                        "SELECT department_name FROM departments", 
                        "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
                    ]
                }, 
                "paraphrase": [
                    "What are the department names and how many employees work in each of them?"
                ], 
                "question": " display the department name and number of employees in each of the department.", 
                "id": 61, 
                "sql": [
                    "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Who are all the employees working in the city of London?", 
                        "What are their full names and salaries?"
                    ], 
                    "sql": [
                        "SELECT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", 
                        "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
                    ]
                }, 
                "paraphrase": [
                    "What are full names and salaries of employees working in the city of London?"
                ], 
                "question": " display the full name (first and last name), and salary of those employees who working in any department located in London.", 
                "sql": [
                    "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
                ]
            }
        ], 
        "review_id": ""
    }, 
    "boat_1": {
        "label_id": "", 
        "data": [
            {
                "sqa": {
                    "question": [
                        "Return all details about the sailors", 
                        "Which of those pertain to those above age 30?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors", 
                        "SELECT * FROM Sailors WHERE age  >  30"
                    ]
                }, 
                "paraphrase": [
                    "What can you tell me about sailors who are older than age 30?"
                ], 
                "question": " Return all details of sailors who are older than 30.", 
                "id": 1, 
                "sql": [
                    "SELECT * FROM Sailors WHERE age  >  30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of every sailor?", 
                        "Of those, which are for sailors younger than 30?", 
                        "Also, tell me their ages."
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT name FROM Sailors WHERE age  <  30", 
                        "SELECT name ,  age FROM Sailors WHERE age  <  30"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and age of every sailor who is younger than age 30?"
                ], 
                "question": " Return name and age for sailors who are younger than 30.", 
                "id": 2, 
                "sql": [
                    "SELECT name ,  age FROM Sailors WHERE age  <  30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me all the information about the reservations.", 
                        "Which of those reservations were created by a sailor with an id of 1?", 
                        "What are the different ids of the boats reserved by him?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves", 
                        "SELECT * FROM Reserves WHERE sid = 1", 
                        "SELECT DISTINCT bid FROM Reserves WHERE sid = 1"
                    ]
                }, 
                "paraphrase": [
                    "What are the different boat ids reserved by the sailor whose id is 1?"
                ], 
                "question": " Find boats reserved by Sailor with id 1.", 
                "id": 3, 
                "sql": [
                    "SELECT DISTINCT bid FROM Reserves WHERE sid = 1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the names of all the sailors?", 
                        "Which of those reserved boat 102?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of the sailor who reserved boat 102?"
                ], 
                "question": " Who reserved boat 102?", 
                "id": 4, 
                "sql": [
                    "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Return all information about the reserved boats.", 
                        "What are their different ids?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves", 
                        "SELECT DISTINCT bid FROM Reserves"
                    ]
                }, 
                "paraphrase": [], 
                "question": " Return the unique boat ids (bid) of all reserved boats.", 
                "id": 5, 
                "sql": [
                    "SELECT DISTINCT bid FROM Reserves"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the name of every sailor?", 
                        "Which of those contain the letter e?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors", 
                        "SELECT name FROM Sailors WHERE name LIKE '%e%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the name of every sailor whose name contains the letter e?"
                ], 
                "question": " What is the name of sailors whose names contain letter e?", 
                "id": 6, 
                "sql": [
                    "SELECT name FROM Sailors WHERE name LIKE '%e%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different ids of every sailor?", 
                        "Which of those refer to sailors who are not the youngest?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT sid FROM Sailors", 
                        "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);"
                    ]
                }, 
                "paraphrase": [
                    "What is the different id of every sailor who is not the youngest?"
                ], 
                "question": " return the unique ids of sailors who are older than any sailors.", 
                "id": 7, 
                "sql": [
                    "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sailors have a rating greater than 7?", 
                        "How old are they?", 
                        "What are the names of sailors who are older than at least one of them?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors WHERE rating  >  7", 
                        "SELECT age FROM Sailors WHERE rating  >  7", 
                        "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);"
                    ]
                }, 
                "paraphrase": [
                    "What are the different names of sailors who are older than some other sailor with a rating larger than 7?"
                ], 
                "question": " Return the unique names of sailors who are older than any sailors whose rating is larger than 7.", 
                "id": 8, 
                "sql": [
                    "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different sailor names?", 
                        "Also, what are their different ids?", 
                        "Which of those are for people who reserved at least one boat?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name FROM Sailors", 
                        "SELECT DISTINCT name ,  sid FROM Sailors", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and id of every sailor who reserved one or more boats?"
                ], 
                "question": "Find the name and id of the sailors who reserved at least one boat?", 
                "id": 9, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different sailors' names and ids?", 
                        "Which of those reserved a boat?", 
                        "Who reserved more than one?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors", 
                        "SELECT DISTINCT t1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "What are the different names of sailors who reserved two or more boats?"
                ], 
                "question": " Find the id and name of the sailors who reserved more than one boat.", 
                "id": 10, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "Also what are the ids for the ones that are red?", 
                        "What are the different ids of the sailors who reserved them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM boats WHERE color  =  'red'", 
                        "SELECT bid FROM boats WHERE color  = 'red' OR color  =  'blue'", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the sids for sailors who reserved red or blue boats?"
                ], 
                "question": " Find the id of Sailors (sid) that reserved red or blue boat.", 
                "id": 11, 
                "sql": [
                    "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "Also, what about for the ones that are red?", 
                        "What are the different ids and names of the sailors who reserved them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM boats WHERE color  =  'red'", 
                        "SELECT bid FROM boats WHERE color  = 'red' OR color  =  'blue'", 
                        "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of sailors who reserved red or blue boats?"
                ], 
                "question": " Find the name and id of Sailors (sid) that reserved red or blue boat.", 
                "id": 12, 
                "sql": [
                    "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the different blue boats?", 
                        "What are the ids of the sailors who reserved them?", 
                        "What are the ids of the sailors who also reserved red boats?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT bid FROM RESERVES WHERE color  =  'blue'", 
                        "SELECT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red'", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of sailors who reserved red and blue boats?"
                ], 
                "question": " Find the id of Sailors (sid) that reserved red and blue boat.", 
                "id": 13, 
                "sql": [
                    "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of boats that are blue?", 
                        "What about for the ones that are red?", 
                        "What are the different ids and names of the sailors who reserved one of each?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"", 
                        "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"red\"", 
                        "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\""
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of sailors who reserved red and blue boats?"
                ], 
                "question": " Find the name and id of Sailors (sid) that reserved red and blue boat.", 
                "id": 14, 
                "sql": [
                    "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\""
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the sailor ids?", 
                        "Which of those are listed as reserving a boat?", 
                        "What are the rest of them?"
                    ], 
                    "sql": [
                        "SELECT sid FROM Sailors", 
                        "SELECT sid FROM Reserves", 
                        "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"
                    ]
                }, 
                "paraphrase": [
                    "What are the ids of sailors who have not reserved a boat?"
                ], 
                "question": " What is the ids of sailors that haven\u2019t reserved a boat?", 
                "id": 15, 
                "sql": [
                    "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the all the sailor ids and names?", 
                        "Which of those are listed as having boat reservations?", 
                        "Tell me all the other ones."
                    ], 
                    "sql": [
                        "SELECT sid ,  name FROM Sailors", 
                        "SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of all sailors who do not have boat reservations?"
                ], 
                "question": " what is the name and id of sailors who do not have a reservation of a boat?", 
                "id": 16, 
                "sql": [
                    "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Which sailors have boat reservations?", 
                        "What are all the information of the sailors do not?"
                    ], 
                    "sql": [
                        "SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT * FROM SAILORS EXCEPT SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                    ]
                }, 
                "paraphrase": [
                    "What is all the information about sailors who do not have boat reservations?"
                ], 
                "question": " Find all information for the sailors who do not have a reservation of a boat?", 
                "id": 17, 
                "sql": [
                    "SELECT * FROM Sailors EXCEPT SELECT T1.* FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What can you tell me about the reservation for the boat with id 103?", 
                        "What is the id of the sailors who reserved it?", 
                        "What are the different names of those sailors?"
                    ], 
                    "sql": [
                        "SELECT * FROM Reserves WHERE bid  =  103", 
                        "SELECT sid FROM Reserves WHERE bid  =  103", 
                        "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103"
                    ]
                }, 
                "paraphrase": [
                    "Find the name of the sailors who reserved boat with id 103."
                ], 
                "question": " What is the name of the sailors who reserved boat with id 103?", 
                "id": 18, 
                "sql": [
                    "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings of all sailors named Luis?", 
                        "What is the smallest of those?", 
                        "What is name of all sailors who have a higher rating than that?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT min(rating) FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')"
                    ]
                }, 
                "paraphrase": [
                    "What are the sailors' names, the ones whose rating is higher than any sailor named Luis?"
                ], 
                "question": " What is the name of all sailors whose rating is higher than any sailor named Luis?", 
                "id": 19, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings of every sailor named Luis?", 
                        "What is the maximum of those?", 
                        "What are the names of those with a higher rating than that?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors WHERE name  =  'Luis'", 
                        "SELECT max(rating) FROM sailors WHERE name  =  'Luis'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of all sailors with a higher rating than every sailor named Luis?"
                ], 
                "question": " What is the name of all sailors whose rating is higher than all sailors named Luis?", 
                "id": 20, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the different names and sailor ids?", 
                        "Which of those refer to those who reserved a boat?", 
                        "Of those, which refer to  a sailor with a rating of at least 3?"
                    ], 
                    "sql": [
                        "SELECT DISTINCT name ,  sid FROM Sailors", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid", 
                        "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >=  3"
                    ]
                }, 
                "paraphrase": [
                    "What are the names and ids of all sailors who have a rating of at least 3 and reserved a boat?"
                ], 
                "question": " what is the name and id of every sailor who has a rating greater than 2 and reserved a boat.", 
                "id": 21, 
                "sql": [
                    "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the age of every sailor?", 
                        "WHat is the age of the oldest one?", 
                        "What is their name?"
                    ], 
                    "sql": [
                        "SELECT age FROM Sailors", 
                        "SELECT max(age) FROM Sailors", 
                        "SELECT name ,  max(age) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "What is the name and age of the sailor with maximum age?"
                ], 
                "question": " Find the name and age of the oldest sailor.", 
                "id": 22, 
                "sql": [
                    "SELECT name ,  age FROM Sailors WHERE age  = "
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me what information you have on sailors", 
                        "How many sailors are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors", 
                        "SELECT COUNT(*) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "How many sailors exist?"
                ], 
                "question": " how many sailors in total?", 
                "id": 23, 
                "sql": [
                    "SELECT COUNT(*) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is age of every sailor?", 
                        "What is the age of all the sailors with a rating of 7?", 
                        "What is their average age?"
                    ], 
                    "sql": [
                        "SELECT age FROM Sailors", 
                        "SELECT age FROM Sailors WHERE rating  =  7", 
                        "SELECT AVG(age) FROM Sailors WHERE rating  =  7"
                    ]
                }, 
                "paraphrase": [
                    "What is average age of all sailors who have a rating of 7?"
                ], 
                "question": " What is the average age of sailors whose rating is 7?", 
                "id": 24, 
                "sql": [
                    "SELECT AVG(age) FROM Sailors WHERE rating  =  7"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What can you tell me about sailors whose name starts with D?", 
                        "What are their names?", 
                        "How many different ones are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors WHERE name LIKE 'D%'", 
                        "SELECT name FROM Sailors WHERE name LIKE 'D%'", 
                        "SELECT COUNT(DISTINCT name) FROM Sailors WHERE name LIKE 'D%'"
                    ]
                }, 
                "paraphrase": [
                    "What is the count of the sailors whose name starts with letter D?"
                ], 
                "question": " How many unique sailors whose name starts with letter D exist?", 
                "id": 25, 
                "sql": [
                    "SELECT COUNT(DISTINCT name) FROM Sailors WHERE name LIKE 'D%'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What is the average rating for sailors?", 
                        "Also, what is their maximum age?"
                    ], 
                    "sql": [
                        "SELECT AVG(rating) ,  MAX(age) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "Find the average rating and largest age for the sailors"
                ], 
                "question": " What are the average rating and max age of all sailors?", 
                "id": 26, 
                "sql": [
                    "SELECT AVG(rating) ,  MAX(age) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the boat ids for reservations?", 
                        "How many reservations exist for each one of them?"
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat?"
                ], 
                "question": " Find the number of reservations for each boat.", 
                "id": 27, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are all the boat ids listed for reservations?", 
                        "Which of those have an id greater than 50?", 
                        "Also find how many reservations exist for each of those."
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves", 
                        "SELECT bid FROM Reserves WHERE bid  >  50", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat with an id greater than 50?"
                ], 
                "question": " Find the number of reservations for each boat with id greater than 50.", 
                "id": 28, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many reservations exist for each boat?", 
                        "Which of these refer to boats that have more than 1 reservation?"
                    ], 
                    "sql": [
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid", 
                        "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations exist for each boat that has more than 1 reservation already?"
                ], 
                "question": " Find the number of reservations for each boat with more than 1 reservation.", 
                "id": 29, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the boat ids for all boats reserved by a sailor with an id greater than 1?", 
                        "How many reservations for each of those exist?"
                    ], 
                    "sql": [
                        "SELECT bid FROM Reserves WHERE sid  >  1", 
                        "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid"
                    ]
                }, 
                "paraphrase": [
                    "How many reservations for each boat did the sailors with an id greater than 1 make?"
                ], 
                "question": " Find the number of reservations by sailors with id greater than 1 for each boat.", 
                "id": 30, 
                "sql": [
                    "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "List the sids of the sailors who reserved a boat.", 
                        "Of those, who reserved a red boat?", 
                        "Of those, for each rating, what is the average age?"
                    ], 
                    "sql": [
                        "SELECT sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid;", 
                        "SELECT sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT avg(T1.age) ,  T1.rating FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating"
                    ]
                }, 
                "paraphrase": [
                    "What are the rating and average age for sailors who reserved red boats for each rating?"
                ], 
                "question": " What is the rating and average age for sailors who have reserved red boat grouped by rating?", 
                "id": 31, 
                "sql": [
                    "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings and age of every sailor?", 
                        "Also what are their names?", 
                        "Sort them by rating, then by age for tiebreakers."
                    ], 
                    "sql": [
                        "SELECT rating ,  age FROM Sailors", 
                        "SELECT name ,  rating ,  age FROM Sailors", 
                        "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age"
                    ]
                }, 
                "paraphrase": [
                    "What is the name, rating, and age for every sailor? And order them by rating and age."
                ], 
                "question": " Find the name, rating and age of all sailors ordered by rating and age.", 
                "id": 32, 
                "sql": [
                    "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Tell me everything about the boats.", 
                        "How many boats are there?"
                    ], 
                    "sql": [
                        "SELECT * FROM Boats", 
                        "SELECT count(*) FROM Boats"
                    ]
                }, 
                "paraphrase": [
                    "How many boats are there?"
                ], 
                "question": " Find the total number of boats.", 
                "id": 33, 
                "sql": [
                    "SELECT count(*) FROM Boats"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "How many boats are there?", 
                        "How many of those are red?"
                    ], 
                    "sql": [
                        "SELECT count(*) FROM Boats", 
                        "SELECT count(*) FROM Boats WHERE color  =  'red'"
                    ]
                }, 
                "paraphrase": [
                    "How many red boats exist?"
                ], 
                "question": " How many boats are red?", 
                "id": 34, 
                "sql": [
                    "SELECT count(*) FROM Boats WHERE color  =  'red'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of the sailors that are between age 20 and 30?", 
                        "Which boats are reserved by the corresponding sailors?"
                    ], 
                    "sql": [
                        "SELECT name FROM Sailors WHERE age BETWEEN 20 AND 30", 
                        "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the boats booked by people between age 20 and 30?"
                ], 
                "question": " Find the names of boats booked by sailors whose age is between 20 and 30.", 
                "id": 35, 
                "sql": [
                    "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of all the sailors who booked a red boat?", 
                        "What is their maximum rating?", 
                        "What are the names of all sailors who are more highly rated than that?"
                    ], 
                    "sql": [
                        "SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red'", 
                        "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')"
                    ]
                }, 
                "paraphrase": [
                    "What are the names of the sailors whose rating is larger than the rating of all sailors who booked a red boat?"
                ], 
                "question": " Find the names of sailors whose rating is larger than the rating of all sailors who booked a red boat.", 
                "id": 36, 
                "sql": [
                    "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ratings for each sailor?", 
                        "What is the maximum rating?"
                    ], 
                    "sql": [
                        "SELECT rating FROM Sailors", 
                        "SELECT max(rating) FROM Sailors"
                    ]
                }, 
                "paraphrase": [
                    "What is the maximum rating for sailors?"
                ], 
                "question": " What is highest rating between sailors?", 
                "id": 37, 
                "sql": [
                    "SELECT max(rating) FROM Sailors"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "What are the ids of the boats whose name is Melon?", 
                        "What are the sailors' names who reserved them?"
                    ], 
                    "sql": [
                        "SELECT T1.bid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid  =  T2.bid WHERE T2.name  =  'Melon'", 
                        "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'"
                    ]
                }, 
                "paraphrase": [], 
                "question": " Find the names of sailors who reserved boat with the name Melon.", 
                "id": 38, 
                "sql": [
                    "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'"
                ]
            }, 
            {
                "sqa": {
                    "question": [
                        "Order everything you know about sailors by rating in descending order", 
                        "What are their names?", 
                        "Also, what are their ages?"
                    ], 
                    "sql": [
                        "SELECT * FROM Sailors ORDER BY rating DESC", 
                        "SELECT name FROM Sailors ORDER BY rating DESC", 
                        "SELECT name ,  age FROM Sailors ORDER BY rating DESC"
                    ]
                }, 
                "paraphrase": [], 
                "question": " List the names and ages of all sailors sorted by rating in descending order.", 
                "sql": [
                    "SELECT name ,  age FROM Sailors ORDER BY rating DESC"
                ]
            }
        ], 
        "review_id": ""
    }
}
Traceback (most recent call last):
  File "train_nl2sql.py", line 101, in <module>
    val_sql_data, val_table_data, TRAIN_ENTRY)
  File "/data/lily/slr63/SQLNet/sqlnet/utils.py", line 291, in epoch_acc
    q_seq, col_seq, col_num, ans_seq, query_seq, gt_cond_seq, raw_data = to_batch_seq(sql_data, table_data, perm, st, ed, ret_vis_data=True)
  File "/data/lily/slr63/SQLNet/sqlnet/utils.py", line 195, in to_batch_seq
    sql = sql_data[idxes[i]]
KeyError: 0
